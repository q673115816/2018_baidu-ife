{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/_san-router@1.2.0@san-router/dist/san-router.source.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/_san@3.6.2@san/dist/san.dev.js","webpack:///./src/app.san","webpack:///./src/app.san?ba4c","webpack:///app.san","webpack:///./node_modules/_style-loader@0.21.0@style-loader/lib/urls.js","webpack:///./node_modules/_style-loader@0.21.0@style-loader/lib/addStyles.js","webpack:///./node_modules/_css-loader@1.0.0@css-loader/lib/css-base.js","webpack:///./src/app.san?4da7","webpack:///./src/app.san?4424","webpack:///./node_modules/_process@0.11.10@process/browser.js","webpack:///./node_modules/_setimmediate@1.0.5@setimmediate/setImmediate.js","webpack:///./node_modules/_timers-browserify@2.0.10@timers-browserify/main.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","e","configurable","source","base","sourceLoc","_parseUrl2","baseLoc","sourcePath","path","indexOf","sourceSegs","split","baseSegs","pop","length","seg","push","unshift","join","queryString","obj","url","result","hash","params","query","hashStart","slice","queryStart","forEach","querySeg","equalIndex","decodeURIComponent","concat","EventTarget","instance","Constructor","TypeError","this","on","type","fn","_eventListeners","un","listeners","len","splice","fire","args","Error","_main","_resolveUrl2","template","clicker","href","data","router","locator","redirect","replace","preventDefault","returnValue","computed","current","_eventTarget2","_interopRequireDefault","getLocation","index","location","Locator","_EventTarget","_this","self","ReferenceError","referrer","hashChangeHandler","subClass","superClass","constructor","writable","setPrototypeOf","__proto__","start","window","addEventListener","attachEvent","stop","removeEventListener","detachEvent","options","arguments","force","isChanged","silent","reload","pathname","search","popstateHandler","history","pushState","isSupport","Link","Router","version","_hash2","_html2","_link2","_elementSelector2","routeID","isComponent","C","nodeType","_type","_ref$mode","routes","routeAlives","locatorRedirectHandler","routeItem","_i","item","match","rule","exec","keys","j","config","state","listenerEvent","resume","next","suspend","doNext","routeAction","doRoute","component","dispose","setMode","listen","listener","unlisten","_this2","isUpdateAlive","routeAlive","id","set","_callHook","Component","attachCmpt","then","Cmpt","handler","target","targetEl","attach","add","_config$target","regText","RegExp","toString","isStarted","toLowerCase","restart","_typeof","iterator","selector","document","querySelector","getElementById","g","Function","eval","setImmediate","root","guidIndex","guidPrefix","Date","getTime","guid","empty","extend","inherits","subClassProto","F","each","array","func","thisArg","nativeBind","Array","apply","el","eventName","capture","splitStr2Obj","svgTags","createEl","tagName","createElementNS","createElement","removeEl","parentNode","removeChild","nextHandler","nextTasks","isNativePromise","Promise","test","nextTick","tasks","MessageChannel","channel","port","port2","port1","onmessage","postMessage","resolve","setTimeout","ieVersionMatch","navigator","userAgent","ie","ieOldThan9","trigger","event","createEvent","initEvent","dispatchEvent","activeElement","autoCloseTags","ANONYMOUS_CLASS_NAME","getDataType","createChainableChecker","validate","chainedChecker","isRequired","checkType","dataName","componentName","fullDataName","dataValue","dataType","createPrimaryTypeChecker","DataTypes","Walker","createANode","textExpr","directives","props","events","children","kebab2camel","alpha","toUpperCase","any","string","number","bool","symbol","arrayOf","arrayItemChecker","instanceOf","expectedClass","dataValueClassName","expectedClassName","shape","shapeTypes","shapeKeyName","checker","oneOf","expectedEnumValues","oneOfType","expectedEnumOfTypeValues","objectOf","typeChecker","dataKeyName","exact","secret","dataValueType","allKeys","currentCode","charCode","cut","end","go","distance","nextCode","charCodeAt","goUntil","code","reg","isMatchStart","lastIndex","ExprType","STRING","NUMBER","BOOL","ACCESSOR","INTERP","CALL","TEXT","BINARY","UNARY","TERTIARY","OBJECT","ARRAY","createAccessor","paths","readIdent","walker","readTertiaryExpr","conditional","readLogicalORExpr","expr","readLogicalANDExpr","readRelationalExpr","operator","segs","yesExpr","readAccessor","firstSeg","accessorLoop","readUnaryExpr","startCode","startIndex","walkLoop","literal","arrItems","spread","items","objItems","walkerIndexBeforeName","readMultiplicativeExpr","readAdditiveExpr","parseExpr","raw","readCall","defaultArgs","ident","parseCall","parseInterp","interp","filters","callExpr","original","ENTITY_DECODE_MAP","lt","gt","nbsp","quot","emsp","ensp","thinsp","copy","zwnj","zwj","amp","regexpLiteral","parseText","delimiters","exprMatch","exprStartReg","beforeIndex","pushStringToSeg","text","String","fromCharCode","parseInt","delimEndLen","interpSource","interpLen","directiveParsers","for","directive","trackBy","ref","if","elif","else","html","transition","postProp","prop","integrateAttr","aNode","realName","prefix","prefixIndex","colonIndex","modifier","parser","integrateProp","vars","xMatch","x","getXPath","stack","currentTagName","parseTemplate","trimWhitespace","rootNode","tagMatch","tagReg","attrReg","currentNode","stackIndex","beforeLastIndex","tagEnd","pushTextNode","closeIndex","aElement","tagClose","nextCharCode","attrMatch","parentChildrenLen","parentChild","elses","tbodyNode","DEFAULT_FILTERS","encodeURIComponent","_class","_style","_sep","sep","evalExpr","owner","dataCache","leftValue","rightValue","itemValue","filter","filterName","evalArgs","buf","dataCacheSource","dataCacheClearly","clear","changeExprCompareExprs","changeExpr","exprs","changeExprCompare","changePaths","changeLen","pathExpr","Math","max","filterResult","lifeCycleOwnIs","LifeCycle","compiled","is","inited","created","attached","leaving","detached","disposed","NodeType","IF","FOR","ELEM","CMPT","SLOT","TPL","getANodeProp","hotspot","HTML_ATTR_PROP_MAP","readonly","cellpadding","cellspacing","colspan","rowspan","valign","usemap","frameborder","defaultElementPropHandler","element","propName","setAttribute","output","bindInfo","svgPropHandler","boolPropHandler","defaultElementPropHandlers","style","cssText","class","className","slot","disabled","autofocus","required","draggable","analInputChecker","checkbox","radio","a","b","elementPropHandlers","input","multiple","checked","oper","bindValue","bindType","scope","bindChecked","hintExpr","option","parentSelect","parent","selectValue","selected","select","getPropHandler","attrName","tagPropHandlers","propHandler","isDataChangeByElement","change","changeTarget","findMethod","nameExpr","method","Data","immutableSet","exprPaths","isNaN","eventDeclarationListener","eventBind","isComponentEvent","$event","checkDataTypes","setTypeChecker","silence","quiet","callee","exprRaw","merge","oldValue","newArray","deleteCount","insertions","shift","removeAt","remove","isBrowser","insertBefore","parentEl","beforeEl","appendChild","warnSetHTML","message","console","warn","isEndStump","getNodePath","node","nodePaths","nodeParent","anode","subTag","TextNode","reverseWalker","sel","goNext","createTextNode","content","createComment","tempFlag","insertAdjacentHTML","_prev","textUpdateProp","textContent","unionKeys","obj1","obj2","changesIsInDataRef","changes","dataRef","overview","extOverview","wildOverview","DOMChildrenWalker","child","firstChild","nextSibling","Element","lifeCycle","_elFns","parentComponent","elementInitTagName","nodeSBindInit","_toPhase","reverseElementChildren","_attached","nodeDispose","_ondisposed","sBind","_sbindData","nodeSBindUpdate","updater","newBindData","createReverseNode","parentIsComponent","childOwner","childScope","IfNode","ForNode","SlotNode","TemplateNode","ComponentType","getComponentType","components","elementDisposeChildren","noDetach","noTransition","elementUpdateChildren","_update","elementOwnToPhase","createNode","nodeOwnOnlyChildrenAttach","aNodeChildren","realANode","nameBind","isNamed","givenChildren","givenSlots","named","noname","isInserted","initData","me","varItem","isScoped","slotChildren","aNodeChild","cloneDirectives","excludes","nodeOwnSimpleDispose","nodeOwnCreateStump","ForItemData","forElement","createForDirectiveChild","itemScope","itemANode","param","listData","eachForData","_create","forNode","rinseCondANode","cond","elseIndex","elseANode","handleProp","startRemoveEl","removeTarget","elementOwnAttach","detach","elementOwnDetach","elementOwnDispose","elementOwnCreate","_onEl","elementOwnOnEl","_doneLeave","leaveDispose","elementDispose","disposeNoDetach","disposeNoTransition","dynamicProps","htmlDirective","innerHTML","elementOwnAttached","isFromOuter","_notifyNeedReload","varKeys","scopedChanges","relation","exprResolve","resolveItem","resolvedPaths","_createChildren","oldIsArr","newIsArr","_disposeChildren","_updateArray","callback","parentFirstChild","parentLastChild","lastChild","violentClear","disposedChildCount","disposeChild","childDisposed","replaceNode","cloneNode","replaceChild","newList","oldChildrenLen","childrenChanges","pushToChildrenChanges","isChildrenRebuild","disposeChildren","newLen","cIndex","forLen","changeIndex","_splice","_set","getItemKey","getForKey","newIndex","oldIndex","lcsFlags","newListKeys","oldListKeys","lcsFlag","changeStart","insertionsLen","newCount","indexChange","deleteLen","spliceArgs","newChildrenLen","lengthChange","_doCreateAndUpdate","doCreateAndUpdate","nextChild","childANode","newChild","san4devtool","emptyPropWhenCreate","sourceNode","elementAttach","_contentReady","elementGetTransition","cmptGivenTransition","givenANode","elementLeave","leave","warnEventListenMethod","valid","inputOnCompositionEnd","composing","inputOnCompositionStart","xPropOutputer","xProp","inputXPropOutputer","outputer","xProps","CompositionEvent","nativeEvents","native","_isInitFromEl","enter","emitDevtool","arg","debug","__san_devtool__","emit","clazz","messages","compileComponent","ComponentClass","recordHotspotData","refs","notContentData","analyseANodeHotspot","analyseExprDataHotspot","idProp","valueProp","protoANode","givenNamedSlotBinds","firstCommentNode","stumpMatch","stumpText","previousSibling","_createGivenSlots","binds","dataTypes","dataTypeChecker","dataTypeName","computedDeps","_calcComputed","dataChanger","_dataChanger","defineComponent","proto","componentClass","_cmptReady","tpl","componentPropExtra","extra","analyseExprs","main","slotBind","givenSlotInited","slotName","declaration","nameListeners","computedExpr","watch","dispatch","receiver","childrenTraversal","refTarget","needReloadForSlot","bindItem","setExpr","updateExpr","_repaintChildren","slotChildrenLen","slotChild","dataChanges","_updateBindxOwner","updateScopeExpr","_aftercreated","dataExpr","san","__san_script__","__san_template__","__san_styles__","__san_proto__","__san_exports__","__webpack_exports__","msg","css","baseUrl","protocol","host","currentDir","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","JSON","stringify","stylesInDom","isOldIE","memo","all","atob","getElement","styleTarget","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","domStyle","parts","addStyle","listToStyles","list","newStyles","part","media","sourceMap","insertStyleElement","insertInto","lastStyleElementInsertedAtTop","insertAt","before","removeStyleElement","idx","createStyleElement","attrs","addAttrs","update","transform","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","btoa","link","rel","autoFixUrls","convertToAbsoluteUrls","unescape","blob","oldSrc","styleSheet","newObj","DEBUG","mayRemove","replaceText","textStore","replacement","Boolean","cssNode","childNodes","useSourceMap","map","cssMapping","sourceMapping","sourceURLs","sources","sourceRoot","mediaQuery","alreadyImportedModules","names","mappings","file","sourcesContent","hmr","locals","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","Item","noop","title","browser","env","argv","versions","addListener","once","off","removeListener","removeAllListeners","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","global","undefined","registerImmediate","nextHandle","tasksByHandle","currentlyRunningATask","doc","attachTo","getPrototypeOf","handle","runIfPresent","importScripts","postMessageIsAsynchronous","oldOnMessage","messagePrefix","random","onGlobalMessage","documentElement","script","onreadystatechange","task","clearImmediate","Timeout","clearFn","_id","_clearFn","setInterval","clearInterval","close","unref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","log","san_router__WEBPACK_IMPORTED_MODULE_1__","_app_san__WEBPACK_IMPORTED_MODULE_2___default"],"mappings":"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","file":"main.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"san-router\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"san-router\"] = factory();\n\telse\n\t\troot[\"san-router\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 6);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports['default'] = resolveURL;\n\nvar _parseUrl = __webpack_require__(1);\n\nvar _parseUrl2 = _interopRequireDefault(_parseUrl);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n * 将 URL 中相对路径部分展开\n *\n * @param {string} source 要展开的url\n * @param {string} base 当前所属环境的url\n * @return {string}\n */\nfunction resolveURL(source, base) {\n    var sourceLoc = (0, _parseUrl2['default'])(source);\n    var baseLoc = (0, _parseUrl2['default'])(base);\n\n    var sourcePath = sourceLoc.path;\n    if (sourcePath.indexOf('/') === 0) {\n        return source;\n    }\n\n    var sourceSegs = sourcePath.split('/');\n    var baseSegs = baseLoc.path.split('/');\n    baseSegs.pop();\n\n    for (var i = 0; i < sourceSegs.length; i++) {\n        var seg = sourceSegs[i];\n        switch (seg) {\n            case '..':\n                baseSegs.pop();\n                break;\n            case '.':\n                break;\n            default:\n                baseSegs.push(seg);\n        }\n    }\n\n    if (baseSegs[0] !== '') {\n        baseSegs.unshift('');\n    }\n\n    return baseSegs.join('/') + (sourceLoc.queryString ? '?' + sourceLoc.queryString : '');\n} /**\n   * san-router\n   * Copyright 2017 Baidu Inc. All rights reserved.\n   *\n   * @file 将 URL 中相对路径部分展开\n   * @author errorrik\n   */\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports['default'] = parseURL;\n/**\n * san-router\n * Copyright 2017 Baidu Inc. All rights reserved.\n *\n * @file 解析URL\n * @author errorrik\n */\n\n/**\n * 解析URL，返回包含path、query、queryString的对象\n *\n * @param {string} url 要解析的url\n * @return {Object}\n */\nfunction parseURL(url) {\n    var result = {\n        hash: '',\n        queryString: '',\n        params: {},\n        query: {},\n        path: url\n    };\n\n    // parse hash\n    var hashStart = result.path.indexOf('#');\n    if (hashStart >= 0) {\n        result.hash = result.path.slice(hashStart + 1);\n        result.path = result.path.slice(0, hashStart);\n    }\n\n    // parse query\n    var query = result.query;\n    var queryStart = result.path.indexOf('?');\n    if (queryStart >= 0) {\n        result.queryString = result.path.slice(queryStart + 1);\n        result.path = result.path.slice(0, queryStart);\n\n        result.queryString.split('&').forEach(function (querySeg) {\n            // 考虑到有可能因为未处理转义问题，\n            // 导致value中存在**=**字符，因此不使用`split`函数\n            var equalIndex = querySeg.indexOf('=');\n            var value = '';\n            if (equalIndex > 0) {\n                value = querySeg.slice(equalIndex + 1);\n                querySeg = querySeg.slice(0, equalIndex);\n            }\n\n            var key = decodeURIComponent(querySeg);\n            value = decodeURIComponent(value);\n\n            // 已经存在这个参数，且新的值不为空时，把原来的值变成数组\n            if (query.hasOwnProperty(key)) {\n                /* eslint-disable */\n                query[key] = [].concat(query[key], value);\n                /* eslint-disable */\n            } else {\n                query[key] = value;\n            }\n        });\n    }\n\n    return result;\n}\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * san-router\n * Copyright 2017 Baidu Inc. All rights reserved.\n *\n * @file 提供事件相关操作的基类\n * @author otakustay, errorrik\n */\n\nvar EventTarget = function () {\n    function EventTarget() {\n        _classCallCheck(this, EventTarget);\n    }\n\n    /**\n     * 注册一个事件处理函数\n     *\n     * @param {string} type 事件的类型\n     * @param {Function | boolean} fn 事件的处理函数\n     */\n    EventTarget.prototype.on = function on(type, fn) {\n        if (typeof fn !== 'function') {\n            return;\n        }\n\n        if (!this._eventListeners) {\n            this._eventListeners = {};\n        }\n\n        if (!this._eventListeners[type]) {\n            this._eventListeners[type] = [];\n        }\n\n        this._eventListeners[type].push(fn);\n    };\n\n    /**\n     * 注销一个事件处理函数\n     *\n     * @param {string} type 事件的类型，如果值为`*`仅会注销通过`*`为类型注册的事件，并不会将所有事件注销\n     * @param {Function} [fn] 事件的处理函数，无此参数则注销`type`指定类型的所有事件处理函数\n     */\n\n\n    EventTarget.prototype.un = function un(type, fn) {\n        if (!this._eventListeners || !this._eventListeners[type]) {\n            return;\n        }\n\n        if (!fn) {\n            this._eventListeners[type] = [];\n        } else {\n            var listeners = this._eventListeners[type];\n            var len = listeners.length;\n\n            while (len--) {\n                if (listeners[len] === fn) {\n                    listeners.splice(len, 1);\n                }\n            }\n        }\n    };\n\n    /**\n     * 触发指定类型的事件\n     *\n     * @param {string} type 事件类型\n     * @param {*} [args] 事件对象\n     */\n\n\n    EventTarget.prototype.fire = function fire(type, args) {\n        if (!type) {\n            throw new Error('No event type specified');\n        }\n\n        var listeners = this._eventListeners && this._eventListeners[type];\n        if (listeners) {\n            for (var i = 0; i < listeners.length; i++) {\n                listeners[i](args);\n            }\n        }\n    };\n\n    return EventTarget;\n}();\n\nexports['default'] = EventTarget;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _main = __webpack_require__(6);\n\nvar _resolveUrl = __webpack_require__(0);\n\nvar _resolveUrl2 = _interopRequireDefault(_resolveUrl);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n * san-router\n * Copyright 2017 Baidu Inc. All rights reserved.\n *\n * @file 路由链接的 San 组件\n * @author errorrik\n */\n\nexports['default'] = {\n    template: '<a href=\"{{href}}\"\\n        onclick=\"return false;\"\\n        on-click=\"clicker($event)\"\\n        target=\"{{target}}\"\\n        class=\"{{class}}\"\\n        style=\"{{style}}\"\\n        >\\n        <slot></slot>\\n    </a>',\n\n    clicker: function clicker(e) {\n        var href = this.data.get('href');\n\n        if (typeof href === 'string') {\n            _main.router.locator.redirect(href.replace(/^#/, ''));\n        }\n\n        if (e.preventDefault) {\n            e.preventDefault();\n        } else {\n            e.returnValue = false;\n        }\n    },\n\n\n    computed: {\n        href: function href() {\n            var url = this.data.get('to');\n            if (typeof url !== 'string') {\n                return;\n            }\n\n            var href = (0, _resolveUrl2['default'])(url, _main.router.locator.current);\n            if (_main.router.mode === 'hash') {\n                href = '#' + href;\n            }\n\n            return href;\n        }\n    }\n};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _eventTarget = __webpack_require__(2);\n\nvar _eventTarget2 = _interopRequireDefault(_eventTarget);\n\nvar _resolveUrl = __webpack_require__(0);\n\nvar _resolveUrl2 = _interopRequireDefault(_resolveUrl);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * san-router\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2017 Baidu Inc. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file hash 模式地址监听器\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author errorrik\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * 获取当前URL\n *\n * @return {string}\n */\nfunction getLocation() {\n    // Firefox下`location.hash`存在自动解码的情况，\n    // 比如hash的值是**abc%3def**，\n    // 在Firefox下获取会成为**abc=def**\n    // 为了避免这一情况，需要从`location.href`中分解\n    var index = location.href.indexOf('#');\n    var url = index < 0 ? '/' : location.href.slice(index + 1) || '/';\n\n    return url;\n}\n\n/**\n * hash 模式地址监听器\n *\n * @class\n */\n\nvar Locator = function (_EventTarget) {\n    _inherits(Locator, _EventTarget);\n\n    /**\n     * 构造函数\n     */\n    function Locator() {\n        _classCallCheck(this, Locator);\n\n        var _this = _possibleConstructorReturn(this, _EventTarget.call(this));\n\n        _this.current = getLocation();\n        _this.referrer = '';\n\n        _this.hashChangeHandler = function () {\n            _this.redirect(getLocation());\n        };\n        return _this;\n    }\n\n    /**\n     * 开始监听 url 变化\n     */\n\n\n    Locator.prototype.start = function start() {\n        if (window.addEventListener) {\n            window.addEventListener('hashchange', this.hashChangeHandler, false);\n        }\n\n        if (window.attachEvent) {\n            window.attachEvent('onhashchange', this.hashChangeHandler);\n        }\n    };\n\n    /**\n     * 停止监听\n     */\n\n\n    Locator.prototype.stop = function stop() {\n        if (window.removeEventListener) {\n            window.removeEventListener('hashchange', this.hashChangeHandler, false);\n        }\n\n        if (window.detachEvent) {\n            window.detachEvent('onhashchange', this.hashChangeHandler);\n        }\n    };\n\n    /**\n     * 重定向\n     *\n     * @param {string} url 重定向的地址\n     * @param {Object?} options 重定向的行为配置\n     * @param {boolean?} options.force 是否强制刷新\n     */\n\n\n    Locator.prototype.redirect = function redirect(url) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { force: false };\n\n        url = (0, _resolveUrl2['default'])(url, this.current);\n        var referrer = this.current;\n\n        var isChanged = url !== referrer;\n        if (isChanged) {\n            this.referrer = referrer;\n            this.current = url;\n            location.hash = url;\n        } else {\n            referrer = this.referrer;\n        }\n\n        if ((isChanged || options.force) && !options.silent) {\n            this.fire('redirect', { url: url, referrer: referrer });\n        }\n    };\n\n    /**\n     * 刷新当前 url\n     */\n\n\n    Locator.prototype.reload = function reload() {\n        this.redirect(this.current, { force: true });\n    };\n\n    return Locator;\n}(_eventTarget2['default']);\n\nexports['default'] = Locator;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _eventTarget = __webpack_require__(2);\n\nvar _eventTarget2 = _interopRequireDefault(_eventTarget);\n\nvar _resolveUrl = __webpack_require__(0);\n\nvar _resolveUrl2 = _interopRequireDefault(_resolveUrl);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * san-router\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2017 Baidu Inc. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file html5 模式地址监听器\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author errorrik\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * 获取当前URL\n *\n * @return {string}\n */\nfunction getLocation() {\n    return location.pathname + location.search;\n}\n\n/**\n * html5 模式地址监听器\n *\n * @class\n */\n\nvar Locator = function (_EventTarget) {\n    _inherits(Locator, _EventTarget);\n\n    /**\n     * 构造函数\n     */\n    function Locator() {\n        _classCallCheck(this, Locator);\n\n        var _this = _possibleConstructorReturn(this, _EventTarget.call(this));\n\n        _this.current = getLocation();\n        _this.referrer = '';\n\n        _this.popstateHandler = function () {\n            _this.referrer = _this.current;\n            _this.current = getLocation();\n\n            _this.fire('redirect', {\n                url: _this.current,\n                referrer: _this.referrer\n            });\n        };\n        return _this;\n    }\n\n    /**\n     * 开始监听 url 变化\n     */\n\n\n    Locator.prototype.start = function start() {\n        window.addEventListener('popstate', this.popstateHandler);\n    };\n\n    /**\n     * 停止监听\n     */\n\n\n    Locator.prototype.stop = function stop() {\n        window.removeEventListener('popstate', this.popstateHandler);\n    };\n\n    /**\n     * 重定向\n     *\n     * @param {string} url 重定向的地址\n     * @param {Object?} options 重定向的行为配置\n     * @param {boolean?} options.force 是否强制刷新\n     */\n\n\n    Locator.prototype.redirect = function redirect(url) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { force: false };\n\n        url = (0, _resolveUrl2['default'])(url, this.current);\n        var referrer = this.current;\n\n        var isChanged = url !== referrer;\n\n        if (isChanged) {\n            this.referrer = referrer;\n            this.current = url;\n\n            history.pushState({}, '', url);\n        }\n\n        if ((isChanged || options.force) && !options.silent) {\n            this.fire('redirect', { url: url, referrer: referrer });\n        }\n    };\n\n    /**\n     * 刷新当前 url\n     */\n\n\n    Locator.prototype.reload = function reload() {\n        this.fire('redirect', {\n            url: this.current,\n            referrer: this.referrer\n        });\n    };\n\n    return Locator;\n}(_eventTarget2['default']);\n\nexports['default'] = Locator;\n\n\nLocator.isSupport = 'pushState' in window.history;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.Link = exports.router = exports.Router = exports.version = undefined;\n\nvar _hash = __webpack_require__(4);\n\nvar _hash2 = _interopRequireDefault(_hash);\n\nvar _html = __webpack_require__(5);\n\nvar _html2 = _interopRequireDefault(_html);\n\nvar _parseUrl = __webpack_require__(1);\n\nvar _parseUrl2 = _interopRequireDefault(_parseUrl);\n\nvar _link = __webpack_require__(3);\n\nvar _link2 = _interopRequireDefault(_link);\n\nvar _elementSelector = __webpack_require__(7);\n\nvar _elementSelector2 = _interopRequireDefault(_elementSelector);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**\n                                                                                                                                                           * san-router\n                                                                                                                                                           * Copyright 2017 Baidu Inc. All rights reserved.\n                                                                                                                                                           *\n                                                                                                                                                           * @file 主模块\n                                                                                                                                                           * @author errorrik\n                                                                                                                                                           */\n\nvar routeID = 0x5942b;\nvar guid = function guid() {\n    return (++routeID).toString();\n};\n\nfunction isComponent(C) {\n    return C.prototype && (C.prototype.nodeType === 5 || C.prototype._type === 'san-cmpt');\n}\n\n/**\n * 版本号\n *\n * @type {string}\n */\nvar version = exports.version = '1.2.0';\n\n/**\n * 路由器类\n *\n * @class\n */\n\nvar Router = exports.Router = function () {\n\n    /**\n     * 构造函数\n     *\n     * @param {Object?} options 初始化参数\n     * @param {string?} options.mode 路由模式，hash | html5\n     */\n    function Router() {\n        var _this = this;\n\n        var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            _ref$mode = _ref.mode,\n            mode = _ref$mode === undefined ? 'hash' : _ref$mode;\n\n        _classCallCheck(this, Router);\n\n        this.routes = [];\n        this.routeAlives = [];\n        this.listeners = [];\n\n        /**\n         * locator redirect 事件监听函数\n         *\n         * @param {Object} e locator事件对象\n         */\n        this.locatorRedirectHandler = function (e) {\n            var url = (0, _parseUrl2['default'])(e.url);\n            var routeItem = void 0;\n\n            for (var _i = 0; _i < _this.routes.length; _i++) {\n                var item = _this.routes[_i];\n                var match = item.rule.exec(url.path);\n\n                if (match) {\n                    routeItem = item;\n\n                    // fill params\n                    var keys = item.keys || [];\n                    for (var j = 1; j < match.length; j++) {\n                        var key = keys[j] || j;\n                        var value = match[j];\n                        url.query[key] = value;\n                        url.params[key] = value;\n                    }\n\n                    // fill referrer\n                    url.referrer = e.referrer;\n                    url.config = item.config;\n\n                    break;\n                }\n            }\n\n            var i = 0;\n            var state = 1;\n\n            /**\n             * listener 事件对象\n             *\n             * @type {Object}\n             */\n            var listenerEvent = {\n                hash: url.hash,\n                queryString: url.queryString,\n                query: url.query,\n                path: url.path,\n                referrer: url.referrer,\n                config: url.config,\n                resume: next,\n                suspend: function suspend() {\n                    state = 0;\n                },\n                stop: function stop() {\n                    state = -1;\n                }\n            };\n\n            /**\n             * 尝试运行下一个listener\n             *\n             * @inner\n             */\n            var doNext = function doNext() {\n                if (state > 0) {\n                    if (i < _this.listeners.length) {\n                        _this.listeners[i].call(_this, listenerEvent, url.config);\n                        if (state > 0) {\n                            next();\n                        }\n                    } else {\n                        routeAction();\n                    }\n                }\n            };\n\n            /**\n             * 运行下一个listener\n             *\n             * @inner\n             */\n            function next() {\n                state = 1;\n                i++;\n                doNext();\n            }\n\n            /**\n             * 运行路由行为\n             *\n             * @inner\n             */\n            var routeAction = function routeAction() {\n                if (routeItem) {\n                    _this.doRoute(routeItem, url);\n                } else {\n                    var len = _this.routeAlives.length;\n                    while (len--) {\n                        _this.routeAlives[len].component.dispose();\n                        _this.routeAlives.splice(len, 1);\n                    }\n                }\n            };\n\n            doNext();\n        };\n\n        this.setMode(mode);\n    }\n\n    /**\n     * 添加路由监听器\n     *\n     * @param {function(e, config)} listener 监听器\n     */\n\n\n    Router.prototype.listen = function listen(listener) {\n        this.listeners.push(listener);\n    };\n\n    /**\n     * 移除路由监听器\n     *\n     * @param {Function} listener 监听器\n     */\n\n\n    Router.prototype.unlisten = function unlisten(listener) {\n        var len = this.listeners.length;\n        while (len--) {\n            if (this.listeners[len] === listener) {\n                this.listeners.splice(len, 1);\n            }\n        }\n    };\n\n    /**\n     * 执行路由\n     *\n     * @private\n     * @param {Object} routeItem 路由项\n     * @param {Object} e 路由信息\n     */\n\n\n    Router.prototype.doRoute = function doRoute(routeItem, e) {\n        var _this2 = this;\n\n        var isUpdateAlive = false;\n        var len = this.routeAlives.length;\n\n        while (len--) {\n            var routeAlive = this.routeAlives[len];\n\n            if (routeAlive.id === routeItem.id) {\n                routeAlive.component.data.set('route', e);\n                routeAlive.component._callHook('route');\n                isUpdateAlive = true;\n            } else {\n                routeAlive.component.dispose();\n                this.routeAlives.splice(len, 1);\n            }\n        }\n\n        if (!isUpdateAlive) {\n            if (routeItem.Component) {\n                if (isComponent(routeItem.Component)) {\n                    this.attachCmpt(routeItem, e);\n                } else {\n                    routeItem.Component().then(function (Cmpt) {\n                        // eslint-disable-line\n                        if (isComponent(Cmpt)) {\n                            routeItem.Component = Cmpt;\n                        } else if (Cmpt.__esModule && isComponent(Cmpt['default'])) {\n                            routeItem.Component = Cmpt['default'];\n                        }\n                        _this2.attachCmpt(routeItem, e);\n                    });\n                }\n            } else {\n                routeItem.handler.call(this, e);\n            }\n        }\n    };\n\n    Router.prototype.attachCmpt = function attachCmpt(routeItem, e) {\n        var component = new routeItem.Component();\n        component.data.set('route', e);\n        component._callHook('route');\n\n        var target = routeItem.target;\n        var targetEl = (0, _elementSelector2['default'])(target);\n\n        if (!targetEl) {\n            throw new Error('[SAN-ROUTER ERROR] ' + 'Attach failed, target element \"' + routeItem.target + '\" is not found.');\n        }\n\n        component.attach(targetEl);\n\n        this.routeAlives.push({\n            component: component,\n            id: routeItem.id\n        });\n    };\n\n    /**\n     * 添加路由项\n     * 当规则匹配时，路由将优先将Component渲染到target中。如果没有包含Component，则执行handler函数\n     *\n     * @private\n     * @param {Object} config 路由项配置\n     * @param {string|RegExp} config.rule 路由规则\n     * @param {Function?} config.handler 路由函数\n     * @param {Function?} config.Component 路由组件\n     * @param {string} config.target 路由组件要渲染到的目标位置\n     * @return {Object} san-router 实例\n     */\n\n\n    Router.prototype.add = function add(config) {\n        var rule = config.rule,\n            handler = config.handler,\n            _config$target = config.target,\n            target = _config$target === undefined ? '#main' : _config$target,\n            Component = config.Component;\n\n        var keys = [''];\n\n        if (typeof rule === 'string') {\n            // 没用path-to-regexp，暂时不提供这么多功能支持\n            var regText = rule.replace(/\\/:([a-z0-9_-]+)(?=\\/|$)/ig, function (match, key) {\n                keys.push(key);\n                return '/([^/\\\\s]+)';\n            });\n\n            rule = new RegExp('^' + regText + '$', 'i');\n        }\n\n        if (!(rule instanceof RegExp)) {\n            throw new Error('[SAN-ROUTER ERROR] Rule must be string or RegExp!');\n        }\n\n        var id = guid();\n        this.routes.push({ id: id, rule: rule, handler: handler, keys: keys, target: target, Component: Component, config: config });\n\n        return this;\n    };\n\n    /**\n     * 启动路由功能\n     *\n     * @return {Object} san-router 实例\n     */\n\n\n    Router.prototype.start = function start() {\n        if (!this.isStarted) {\n            this.isStarted = true;\n            this.locator.on('redirect', this.locatorRedirectHandler);\n            this.locator.start();\n            this.locator.reload();\n        }\n\n        return this;\n    };\n\n    /**\n     * 停止路由功能\n     *\n     * @return {Object} san-router 实例\n     */\n\n\n    Router.prototype.stop = function stop() {\n        this.locator.un('redirect', this.locatorRedirectHandler);\n        this.locator.stop();\n        this.isStarted = false;\n\n        return this;\n    };\n\n    /**\n     * 设置路由模式\n     *\n     * @param {string} mode 路由模式，hash | html5\n     * @return {Object} san-router 实例\n     */\n\n\n    Router.prototype.setMode = function setMode(mode) {\n        mode = mode.toLowerCase();\n        if (this.mode === mode) {\n            return;\n        }\n\n        this.mode = mode;\n\n        var restart = false;\n        if (this.isStarted) {\n            this.stop();\n            restart = true;\n        }\n\n        switch (mode) {\n            case 'hash':\n                this.locator = new _hash2['default']();\n                break;\n            case 'html5':\n                this.locator = new _html2['default']();\n        }\n\n        if (restart) {\n            this.start();\n        }\n\n        return this;\n    };\n\n    return Router;\n}();\n\n/**\n * 默认的路由器实例\n *\n * @type {Router}\n */\n\n\nvar router = exports.router = new Router();\n\n/**\n * 路由链接的 San 组件\n *\n * @class\n */\nexports.Link = _link2['default'];\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports['default'] = elementSelector;\n/*\n*\n* @file 选择器\n* @author vincent lau/413893093@qq.com\n*/\n\n/**\n * 元素选择器\n *\n * @param {string|Element} selector 选择器\n * @returns {Element}\n */\nfunction elementSelector(selector) {\n    switch (typeof selector === 'undefined' ? 'undefined' : _typeof(selector)) {\n        case 'object':\n            return selector;\n\n        case 'string':\n            if (document.querySelector) {\n                return document.querySelector(selector);\n            }\n\n            return document.getElementById(selector.replace(/#/i, ''));\n    }\n}\n\n/***/ }\n/******/ ]);\n});","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\n * San\n * Copyright 2016 Baidu Inc. All rights reserved.\n *\n * @file 主文件\n * @author errorrik(errorrik@gmail.com)\n *         otakustay(otakustay@gmail.com)\n *         junmer(junmer@foxmail.com)\n */\n\n(function (root) {\n    // 人工调整打包代码顺序，通过注释手工写一些依赖\n//     // require('./util/guid');\n//     // require('./util/empty');\n//     // require('./util/extend');\n//     // require('./util/inherits');\n//     // require('./util/each');\n//     // require('./util/contains');\n//     // require('./util/bind');\n//     // require('./browser/on');\n//     // require('./browser/un');\n//     // require('./browser/svg-tags');\n//     // require('./browser/create-el');\n//     // require('./browser/remove-el');\n//     // require('./util/next-tick');\n//     // require('./browser/ie');\n//     // require('./browser/ie-old-than-9');\n//     // require('./browser/input-event-compatible');\n//     // require('./browser/auto-close-tags');\n//     // require('./util/data-types.js');\n//     // require('./util/create-data-types-checker.js');\n//     // require('./parser/walker');\n//     // require('./parser/create-a-node');\n//     // require('./parser/parse-template');\n//     // require('./runtime/change-expr-compare');\n//     // require('./runtime/data-change-type');\n//     // require('./runtime/default-filters');\n//     // require('./view/life-cycle');\n//     // require('./view/node-type');\n//     // require('./view/get-prop-handler');\n//     // require('./view/is-data-change-by-element');\n//     // require('./view/event-declaration-listener');\n//     // require('./view/create-node');\n\n\n    /**\n * @file 生成唯一id\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 唯一id的起始值\n *\n * @inner\n * @type {number}\n */\nvar guidIndex = 1;\n\n/**\n * 唯一id的前缀\n *\n * @inner\n * @type {string}\n */\nvar guidPrefix = (new Date()).getTime().toString(16).slice(8);\n\n/**\n * 获取唯一id\n *\n * @inner\n * @return {string} 唯一id\n */\nfunction guid() {\n    return '_' + guidPrefix + (guidIndex++);\n}\n\n// exports = module.exports = guid;\n\n\n/**\n * @file 空函数\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 啥都不干\n */\nfunction empty() {}\n\n// exports = module.exports = empty;\n\n\n/**\n * @file 属性拷贝\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 对象属性拷贝\n *\n * @param {Object} target 目标对象\n * @param {Object} source 源对象\n * @return {Object} 返回目标对象\n */\nfunction extend(target, source) {\n    for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n            var value = source[key];\n            if (typeof value !== 'undefined') {\n                target[key] = value;\n            }\n        }\n    }\n\n    return target;\n}\n\n// exports = module.exports = extend;\n\n\n/**\n * @file 构建类之间的继承关系\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var extend = require('./extend');\n\n/**\n * 构建类之间的继承关系\n *\n * @param {Function} subClass 子类函数\n * @param {Function} superClass 父类函数\n */\nfunction inherits(subClass, superClass) {\n    /* jshint -W054 */\n    var subClassProto = subClass.prototype;\n    var F = new Function();\n    F.prototype = superClass.prototype;\n    subClass.prototype = new F();\n    subClass.prototype.constructor = subClass;\n    extend(subClass.prototype, subClassProto);\n    /* jshint +W054 */\n}\n\n// exports = module.exports = inherits;\n\n\n/**\n * @file 遍历数组\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 遍历数组集合\n *\n * @param {Array} array 数组源\n * @param {function(Any,number):boolean} iterator 遍历函数\n */\nfunction each(array, iterator) {\n    if (array && array.length > 0) {\n        for (var i = 0, l = array.length; i < l; i++) {\n            if (iterator(array[i], i) === false) {\n                break;\n            }\n        }\n    }\n}\n\n// exports = module.exports = each;\n\n\n/**\n * @file 判断数组中是否包含某项\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('./each');\n\n/**\n * 判断数组中是否包含某项\n *\n * @param {Array} array 数组\n * @param {*} value 包含的项\n * @return {boolean}\n */\nfunction contains(array, value) {\n    var result = false;\n    each(array, function (item) {\n        result = item === value;\n        return !result;\n    });\n\n    return result;\n}\n\n// exports = module.exports = contains;\n\n\n/**\n * @file bind函数\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * Function.prototype.bind 方法的兼容性封装\n *\n * @param {Function} func 要bind的函数\n * @param {Object} thisArg this指向对象\n * @param {...*} args 预设的初始参数\n * @return {Function}\n */\nfunction bind(func, thisArg) {\n    var nativeBind = Function.prototype.bind;\n    var slice = Array.prototype.slice;\n    // #[begin] allua\n    if (nativeBind && func.bind === nativeBind) {\n    // #[end]\n        return nativeBind.apply(func, slice.call(arguments, 1));\n    // #[begin] allua\n    }\n\n    var args = slice.call(arguments, 2);\n    return function () {\n        return func.apply(thisArg, args.concat(slice.call(arguments)));\n    };\n    // #[end]\n}\n\n// exports = module.exports = bind;\n\n\n/**\n * @file DOM 事件挂载\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * DOM 事件挂载\n *\n * @inner\n * @param {HTMLElement} el DOM元素\n * @param {string} eventName 事件名\n * @param {Function} listener 监听函数\n * @param {boolean} capture 是否是捕获阶段\n */\nfunction on(el, eventName, listener, capture) {\n    // #[begin] allua\n    if (el.addEventListener) {\n    // #[end]\n        el.addEventListener(eventName, listener, capture);\n    // #[begin] allua\n    }\n    else {\n        el.attachEvent('on' + eventName, listener);\n    }\n    // #[end]\n}\n\n// exports = module.exports = on;\n\n\n/**\n * @file DOM 事件卸载\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * DOM 事件卸载\n *\n * @inner\n * @param {HTMLElement} el DOM元素\n * @param {string} eventName 事件名\n * @param {Function} listener 监听函数\n * @param {boolean} capture 是否是捕获阶段\n */\nfunction un(el, eventName, listener, capture) {\n    // #[begin] allua\n    if (el.addEventListener) {\n    // #[end]\n        el.removeEventListener(eventName, listener, capture);\n    // #[begin] allua\n    }\n    else {\n        el.detachEvent('on' + eventName, listener);\n    }\n    // #[end]\n}\n\n// exports = module.exports = un;\n\n\n/**\n * @file 将字符串逗号切分返回对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n\n/**\n * 将字符串逗号切分返回对象\n *\n * @param {string} source 源字符串\n * @return {Object}\n */\nfunction splitStr2Obj(source) {\n    var result = {};\n    each(\n        source.split(','),\n        function (key) {\n            result[key] = 1;\n        }\n    );\n    return result;\n}\n\n// exports = module.exports = splitStr2Obj;\n\n\n/**\n * @file SVG标签表\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var splitStr2Obj = require('../util/split-str-2-obj');\n\n/**\n * svgTags\n *\n * @see https://www.w3.org/TR/SVG/svgdtd.html 只取常用\n * @type {Object}\n */\nvar svgTags = splitStr2Obj(''\n    // structure\n    + 'svg,g,defs,desc,metadata,symbol,use,'\n    // image & shape\n    + 'image,path,rect,circle,line,ellipse,polyline,polygon,'\n    // text\n    + 'text,tspan,tref,textpath,'\n    // other\n    + 'marker,pattern,clippath,mask,filter,cursor,view,animate,'\n    // font\n    + 'font,font-face,glyph,missing-glyph');\n\n// exports = module.exports = svgTags;\n\n\n/**\n * @file DOM创建\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var svgTags = require('./svg-tags');\n\n/**\n * 创建 DOM 元素\n *\n * @param  {string} tagName tagName\n * @return {HTMLElement}\n */\nfunction createEl(tagName) {\n    if (svgTags[tagName]) {\n        return document.createElementNS('http://www.w3.org/2000/svg', tagName);\n    }\n\n    return document.createElement(tagName);\n}\n\n// exports = module.exports = createEl;\n\n\n/**\n * @file 移除DOM\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 将 DOM 从页面中移除\n *\n * @param {HTMLElement} el DOM元素\n */\nfunction removeEl(el) {\n    if (el && el.parentNode) {\n        el.parentNode.removeChild(el);\n    }\n}\n\n// exports = module.exports = removeEl;\n\n\n/**\n * @file 在下一个时间周期运行任务\n * @author errorrik(errorrik@gmail.com)\n */\n\n// 该方法参照了vue2.5.0的实现，感谢vue团队\n// SEE: https://github.com/vuejs/vue/blob/0948d999f2fddf9f90991956493f976273c5da1f/src/core/util/env.js#L68\n\n\n// var bind = require('./bind');\n\n/**\n * 下一个周期要执行的任务列表\n *\n * @inner\n * @type {Array}\n */\nvar nextTasks = [];\n\n/**\n * 执行下一个周期任务的函数\n *\n * @inner\n * @type {Function}\n */\nvar nextHandler;\n\n/**\n * 浏览器是否支持原生Promise\n * 对Promise做判断，是为了禁用一些不严谨的Promise的polyfill\n *\n * @inner\n * @type {boolean}\n */\nvar isNativePromise = typeof Promise === 'function' && /native code/.test(Promise);\n\n/**\n * 在下一个时间周期运行任务\n *\n * @inner\n * @param {Function} fn 要运行的任务函数\n * @param {Object=} thisArg this指向对象\n */\nfunction nextTick(fn, thisArg) {\n    if (thisArg) {\n        fn = bind(fn, thisArg);\n    }\n    nextTasks.push(fn);\n\n    if (nextHandler) {\n        return;\n    }\n\n    nextHandler = function () {\n        var tasks = nextTasks.slice(0);\n        nextTasks = [];\n        nextHandler = null;\n\n        for (var i = 0, l = tasks.length; i < l; i++) {\n            tasks[i]();\n        }\n    };\n\n    // 非标准方法，但是此方法非常吻合要求。\n    if (typeof setImmediate === 'function') {\n        setImmediate(nextHandler);\n    }\n    // 用MessageChannel去做setImmediate的polyfill\n    // 原理是将新的message事件加入到原有的dom events之后\n    else if (typeof MessageChannel === 'function') {\n        var channel = new MessageChannel();\n        var port = channel.port2;\n        channel.port1.onmessage = nextHandler;\n        port.postMessage(1);\n    }\n    // for native app\n    else if (isNativePromise) {\n        Promise.resolve().then(nextHandler);\n    }\n    else {\n        setTimeout(nextHandler, 0);\n    }\n}\n\n// exports = module.exports = nextTick;\n\n\n/**\n * @file ie版本号\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 从userAgent中ie版本号的匹配信息\n *\n * @type {Array}\n */\nvar ieVersionMatch = typeof navigator !== 'undefined'\n    && navigator.userAgent.match(/msie\\s*([0-9]+)/i);\n\n/**\n * ie版本号，非ie时为0\n *\n * @type {number}\n */\nvar ie = ieVersionMatch ? ieVersionMatch[1] - 0 : 0;\n\n// exports = module.exports = ie;\n\n\n/**\n * @file 是否 IE 并且小于 9\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ie = require('./ie');\n\n// HACK:\n// 1. IE8下，设置innerHTML时如果以html comment开头，comment会被自动滤掉\n//    为了保证stump存在，需要设置完html后，createComment并appendChild/insertBefore\n// 2. IE8下，innerHTML还不支持custom element，所以需要用div替代，不用createElement\n// 3. 虽然IE8已经优化了字符串+连接，碎片化连接性能不再退化\n//    但是由于上面多个兼容场景都用 < 9 判断，所以字符串连接也沿用\n//    所以结果是IE8下字符串连接用的是数组join的方式\n\n// #[begin] allua\n/**\n * 是否 IE 并且小于 9\n */\nvar ieOldThan9 = ie && ie < 9;\n// #[end]\n\n// exports = module.exports = ieOldThan9;\n\n\n/**\n * @file DOM 事件挂载\n * @author dafrok(o.o@mug.dog)\n */\n\n/**\n * DOM 事件挂载\n *\n * @inner\n * @param {HTMLElement} el DOM元素\n * @param {string} eventName 事件名\n */\nfunction trigger(el, eventName) {\n    var event = document.createEvent('HTMLEvents');\n    event.initEvent(eventName, true, true);\n    el.dispatchEvent(event);\n}\n\n// exports = module.exports = trigger;\n\n\n/**\n * @file 解决 IE9 在表单元素中删除字符时不触发事件的问题\n * @author dafrok(o.o@mug.dog)\n */\n\n// var ie = require('./ie');\n// var on = require('./on');\n// var trigger = require('./trigger');\n\n// #[begin] allua\nif (ie === 9) {\n    on(document, 'selectionchange', function () {\n        var el = document.activeElement;\n        if (el.tagName === 'TEXTAREA' || el.tagName === 'INPUT') {\n            trigger(el, 'input');\n        }\n    });\n}\n// #[end]\n\n\n/**\n * @file 自闭合标签表\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var splitStr2Obj = require('../util/split-str-2-obj');\n\n/**\n * 自闭合标签列表\n *\n * @type {Object}\n */\nvar autoCloseTags = splitStr2Obj('area,base,br,col,embed,hr,img,input,keygen,param,source,track,wbr');\n\n// exports = module.exports = autoCloseTags;\n\n\n/**\n * @file data types\n * @author leon <ludafa@outlook.com>\n */\n\n// var bind = require('./bind');\n// var empty = require('./empty');\n// var extend = require('./extend');\n\n// #[begin] error\nvar ANONYMOUS_CLASS_NAME = '<<anonymous>>';\n\n/**\n * 获取精确的类型\n *\n * @NOTE 如果 obj 是一个 DOMElement，我们会返回 `element`；\n *\n * @param  {*} obj 目标\n * @return {string}\n */\nfunction getDataType(obj) {\n\n    if (obj && obj.nodeType === 1) {\n        return 'element';\n    }\n\n    return Object.prototype.toString\n        .call(obj)\n        .slice(8, -1)\n        .toLowerCase();\n}\n// #[end]\n\n/**\n * 创建链式的数据类型校验器\n *\n * @param  {Function} validate 真正的校验器\n * @return {Function}\n */\nfunction createChainableChecker(validate) {\n    var chainedChecker = function () {};\n    chainedChecker.isRequired = empty;\n\n    // 只在 error 功能启用时才有实际上的 dataTypes 检测\n    // #[begin] error\n    var checkType = function (isRequired, data, dataName, componentName, fullDataName) {\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        componentName = componentName || ANONYMOUS_CLASS_NAME;\n\n        // 如果是 null 或 undefined，那么要提前返回啦\n        if (dataValue == null) {\n            // 是 required 就报错\n            if (isRequired) {\n                throw new Error('[SAN ERROR] '\n                    + 'The `' + dataName + '` '\n                    + 'is marked as required in `' + componentName + '`, '\n                    + 'but its value is ' + dataType\n                );\n            }\n            // 不是 required，那就是 ok 的\n            return;\n        }\n\n        validate(data, dataName, componentName, fullDataName);\n\n    };\n\n    chainedChecker = bind(checkType, null, false);\n    chainedChecker.isRequired = bind(checkType, null, true);\n    // #[end]\n\n\n\n    return chainedChecker;\n\n}\n\n// #[begin] error\n/**\n * 生成主要类型数据校验器\n *\n * @param  {string} type 主类型\n * @return {Function}\n */\nfunction createPrimaryTypeChecker(type) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== type) {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected ' + type + ')'\n            );\n        }\n\n    });\n\n}\n\n\n\n/**\n * 生成 arrayOf 校验器\n *\n * @param  {Function} arrayItemChecker 数组中每项数据的校验器\n * @return {Function}\n */\nfunction createArrayOfChecker(arrayItemChecker) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (typeof arrayItemChecker !== 'function') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `arrayOf`, expected `function`'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== 'array') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected array)'\n            );\n        }\n\n        for (var i = 0, len = dataValue.length; i < len; i++) {\n            arrayItemChecker(dataValue, i, componentName, fullDataName + '[' + i + ']');\n        }\n\n    });\n\n}\n\n/**\n * 生成 instanceOf 检测器\n *\n * @param  {Function|Class} expectedClass 期待的类\n * @return {Function}\n */\nfunction createInstanceOfChecker(expectedClass) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        var dataValue = data[dataName];\n\n        if (dataValue instanceof expectedClass) {\n            return;\n        }\n\n        var dataValueClassName = dataValue.constructor && dataValue.constructor.name\n            ? dataValue.constructor.name\n            : ANONYMOUS_CLASS_NAME;\n\n        var expectedClassName = expectedClass.name || ANONYMOUS_CLASS_NAME;\n\n        throw new Error('[SAN ERROR] '\n            + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n            + '(' + dataValueClassName + ' supplied to ' + componentName + ', '\n            + 'expected instance of ' + expectedClassName + ')'\n        );\n\n\n    });\n\n}\n\n/**\n * 生成 shape 校验器\n *\n * @param  {Object} shapeTypes shape 校验规则\n * @return {Function}\n */\nfunction createShapeChecker(shapeTypes) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (getDataType(shapeTypes) !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + fullDataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `shape`, expected `object`'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected object)'\n            );\n        }\n\n        for (var shapeKeyName in shapeTypes) {\n            if (shapeTypes.hasOwnProperty(shapeKeyName)) {\n                var checker = shapeTypes[shapeKeyName];\n                if (typeof checker === 'function') {\n                    checker(dataValue, shapeKeyName, componentName, fullDataName + '.' + shapeKeyName);\n                }\n            }\n        }\n\n    });\n\n}\n\n/**\n * 生成 oneOf 校验器\n *\n * @param  {Array} expectedEnumValues 期待的枚举值\n * @return {Function}\n */\nfunction createOneOfChecker(expectedEnumValues) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (getDataType(expectedEnumValues) !== 'array') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + fullDataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `oneOf`, array is expected.'\n            );\n        }\n\n        var dataValue = data[dataName];\n\n        for (var i = 0, len = expectedEnumValues.length; i < len; i++) {\n            if (dataValue === expectedEnumValues[i]) {\n                return;\n            }\n        }\n\n        throw new Error('[SAN ERROR] '\n            + 'Invalid ' + componentName + ' data `' + fullDataName + '` of value'\n            + '(`' + dataValue + '` supplied to ' + componentName + ', '\n            + 'expected one of ' + expectedEnumValues.join(',') + ')'\n        );\n\n    });\n\n}\n\n/**\n * 生成 oneOfType 校验器\n *\n * @param  {Array<Function>} expectedEnumOfTypeValues 期待的枚举类型\n * @return {Function}\n */\nfunction createOneOfTypeChecker(expectedEnumOfTypeValues) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (getDataType(expectedEnumOfTypeValues) !== 'array') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `oneOf`, array is expected.'\n            );\n        }\n\n        var dataValue = data[dataName];\n\n        for (var i = 0, len = expectedEnumOfTypeValues.length; i < len; i++) {\n\n            var checker = expectedEnumOfTypeValues[i];\n\n            if (typeof checker !== 'function') {\n                continue;\n            }\n\n            try {\n                checker(data, dataName, componentName, fullDataName);\n                // 如果 checker 完成校验没报错，那就返回了\n                return;\n            }\n            catch (e) {\n                // 如果有错误，那么应该把错误吞掉\n            }\n\n        }\n\n        // 所有的可接受 type 都失败了，才丢一个异常\n        throw new Error('[SAN ERROR] '\n            + 'Invalid ' + componentName + ' data `' + dataName + '` of value'\n            + '(`' + dataValue + '` supplied to ' + componentName + ')'\n        );\n\n    });\n\n}\n\n/**\n * 生成 objectOf 校验器\n *\n * @param  {Function} typeChecker 对象属性值校验器\n * @return {Function}\n */\nfunction createObjectOfChecker(typeChecker) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (typeof typeChecker !== 'function') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `objectOf`, expected function'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + dataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected object)'\n            );\n        }\n\n        for (var dataKeyName in dataValue) {\n            if (dataValue.hasOwnProperty(dataKeyName)) {\n                typeChecker(\n                    dataValue,\n                    dataKeyName,\n                    componentName,\n                    fullDataName + '.' + dataKeyName\n                );\n            }\n        }\n\n\n    });\n\n}\n\n/**\n * 生成 exact 校验器\n *\n * @param  {Object} shapeTypes object 形态定义\n * @return {Function}\n */\nfunction createExactChecker(shapeTypes) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName, secret) {\n\n        if (getDataType(shapeTypes) !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `exact`'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataValueType = getDataType(dataValue);\n\n        if (dataValueType !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid data `' + fullDataName + '` of type `' + dataValueType + '`'\n                + '(supplied to ' + componentName + ', expected `object`)'\n            );\n        }\n\n        var allKeys = {};\n\n        // 先合入 shapeTypes\n        extend(allKeys, shapeTypes);\n        // 再合入 dataValue\n        extend(allKeys, dataValue);\n        // 保证 allKeys 的类型正确\n\n        for (var key in allKeys) {\n            if (allKeys.hasOwnProperty(key)) {\n                var checker = shapeTypes[key];\n\n                // dataValue 中有一个多余的数据项\n                if (!checker) {\n                    throw new Error('[SAN ERROR] '\n                        + 'Invalid data `' + fullDataName + '` key `' + key + '` '\n                        + 'supplied to `' + componentName + '`. '\n                        + '(`' + key + '` is not defined in `DataTypes.exact`)'\n                    );\n                }\n\n                if (!(key in dataValue)) {\n                    throw new Error('[SAN ERROR] '\n                        + 'Invalid data `' + fullDataName + '` key `' + key + '` '\n                        + 'supplied to `' + componentName + '`. '\n                        + '(`' + key + '` is marked `required` in `DataTypes.exact`)'\n                    );\n                }\n\n                checker(\n                    dataValue,\n                    key,\n                    componentName,\n                    fullDataName + '.' + key,\n                    secret\n                );\n\n            }\n        }\n\n    });\n\n}\n// #[end]\n\n\n\n/* eslint-disable fecs-valid-var-jsdoc */\nvar DataTypes = {\n    array: createChainableChecker(empty),\n    object: createChainableChecker(empty),\n    func: createChainableChecker(empty),\n    string: createChainableChecker(empty),\n    number: createChainableChecker(empty),\n    bool: createChainableChecker(empty),\n    symbol: createChainableChecker(empty),\n    any: createChainableChecker,\n    arrayOf: createChainableChecker,\n    instanceOf: createChainableChecker,\n    shape: createChainableChecker,\n    oneOf: createChainableChecker,\n    oneOfType: createChainableChecker,\n    objectOf: createChainableChecker,\n    exact: createChainableChecker\n};\n\n// #[begin] error\nDataTypes = {\n\n    any: createChainableChecker(empty),\n\n    // 类型检测\n    array: createPrimaryTypeChecker('array'),\n    object: createPrimaryTypeChecker('object'),\n    func: createPrimaryTypeChecker('function'),\n    string: createPrimaryTypeChecker('string'),\n    number: createPrimaryTypeChecker('number'),\n    bool: createPrimaryTypeChecker('boolean'),\n    symbol: createPrimaryTypeChecker('symbol'),\n\n    // 复合类型检测\n    arrayOf: createArrayOfChecker,\n    instanceOf: createInstanceOfChecker,\n    shape: createShapeChecker,\n    oneOf: createOneOfChecker,\n    oneOfType: createOneOfTypeChecker,\n    objectOf: createObjectOfChecker,\n    exact: createExactChecker\n\n};\n/* eslint-enable fecs-valid-var-jsdoc */\n// #[end]\n\n\n// module.exports = DataTypes;\n\n\n/**\n * @file 创建数据检测函数\n * @author leon<ludafa@outlook.com>\n */\n\n\n// #[begin] error\n\n/**\n * 创建数据检测函数\n *\n * @param  {Object} dataTypes     数据格式\n * @param  {string} componentName 组件名\n * @return {Function}\n */\nfunction createDataTypesChecker(dataTypes, componentName) {\n\n    /**\n     * 校验 data 是否满足 data types 的格式\n     *\n     * @param  {*} data 数据\n     */\n    return function (data) {\n\n        for (var dataTypeName in dataTypes) {\n\n            if (dataTypes.hasOwnProperty(dataTypeName)) {\n\n                var dataTypeChecker = dataTypes[dataTypeName];\n\n                if (typeof dataTypeChecker !== 'function') {\n                    throw new Error('[SAN ERROR] '\n                        + componentName + ':' + dataTypeName + ' is invalid; '\n                        + 'it must be a function, usually from san.DataTypes'\n                    );\n                }\n\n                dataTypeChecker(\n                    data,\n                    dataTypeName,\n                    componentName,\n                    dataTypeName\n                );\n\n\n            }\n        }\n\n    };\n\n}\n\n// #[end]\n\n// module.exports = createDataTypesChecker;\n\n\n/**\n * @file 字符串源码读取类\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 字符串源码读取类，用于模板字符串解析过程\n *\n * @class\n * @param {string} source 要读取的字符串\n */\nfunction Walker(source) {\n    this.source = source;\n    this.len = this.source.length;\n    this.index = 0;\n}\n\n/**\n * 获取当前字符码\n *\n * @return {number}\n */\nWalker.prototype.currentCode = function () {\n    return this.charCode(this.index);\n};\n\n/**\n * 截取字符串片段\n *\n * @param {number} start 起始位置\n * @param {number} end 结束位置\n * @return {string}\n */\nWalker.prototype.cut = function (start, end) {\n    return this.source.slice(start, end);\n};\n\n/**\n * 向前读取字符\n *\n * @param {number} distance 读取字符数\n */\nWalker.prototype.go = function (distance) {\n    this.index += distance;\n};\n\n/**\n * 读取下一个字符，返回下一个字符的 code\n *\n * @return {number}\n */\nWalker.prototype.nextCode = function () {\n    this.go(1);\n    return this.currentCode();\n};\n\n/**\n * 获取相应位置字符的 code\n *\n * @param {number} index 字符位置\n * @return {number}\n */\nWalker.prototype.charCode = function (index) {\n    return this.source.charCodeAt(index);\n};\n\n/**\n * 向前读取字符，直到遇到指定字符再停止\n * 未指定字符时，当遇到第一个非空格、制表符的字符停止\n *\n * @param {number=} charCode 指定字符的code\n * @return {boolean} 当指定字符时，返回是否碰到指定的字符\n */\nWalker.prototype.goUntil = function (charCode) {\n    var code;\n    while (this.index < this.len && (code = this.currentCode())) {\n        switch (code) {\n            // 空格 space\n            case 32:\n            // 制表符 tab\n            case 9:\n            // \\r\n            case 13:\n            // \\n\n            case 10:\n                this.index++;\n                break;\n            default:\n                if (code === charCode) {\n                    this.index++;\n                    return 1;\n                }\n                return;\n        }\n    }\n};\n\n/**\n * 向前读取符合规则的字符片段，并返回规则匹配结果\n *\n * @param {RegExp} reg 字符片段的正则表达式\n * @param {boolean} isMatchStart 是否必须匹配当前位置\n * @return {Array?}\n */\nWalker.prototype.match = function (reg, isMatchStart) {\n    reg.lastIndex = this.index;\n\n    var match = reg.exec(this.source);\n    if (match && (!isMatchStart || this.index === match.index)) {\n        this.index = reg.lastIndex;\n        return match;\n    }\n};\n\n// exports = module.exports = Walker;\n\n\n/**\n * @file 模板解析生成的抽象节点\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 创建模板解析生成的抽象节点\n *\n * @param {Object=} options 节点参数\n * @param {string=} options.tagName 标签名\n * @param {ANode=} options.parent 父节点\n * @param {boolean=} options.textExpr 文本节点表达式对象\n * @return {Object}\n */\nfunction createANode(options) {\n    options = options || {};\n\n    if (!options.textExpr) {\n        options.directives = options.directives || {};\n        options.props = options.props || [];\n        options.events = options.events || [];\n        options.children = options.children || [];\n    }\n\n    return options;\n}\n\n// exports = module.exports = createANode;\n\n\n/**\n * @file 把 kebab case 字符串转换成 camel case\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 把 kebab case 字符串转换成 camel case\n *\n * @param {string} source 源字符串\n * @return {string}\n */\nfunction kebab2camel(source) {\n    return source.replace(/-([a-z])/g, function (match, alpha) {\n        return alpha.toUpperCase();\n    });\n}\n\n// exports = module.exports = kebab2camel;\n\n\n/**\n * @file 表达式类型\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 表达式类型\n *\n * @const\n * @type {Object}\n */\nvar ExprType = {\n    STRING: 1,\n    NUMBER: 2,\n    BOOL: 3,\n    ACCESSOR: 4,\n    INTERP: 5,\n    CALL: 6,\n    TEXT: 7,\n    BINARY: 8,\n    UNARY: 9,\n    TERTIARY: 10,\n    OBJECT: 11,\n    ARRAY: 12\n};\n\n// exports = module.exports = ExprType;\n\n\n/**\n * @file 创建访问表达式对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n\n/**\n * 创建访问表达式对象\n *\n * @param {Array} paths 访问路径\n * @return {Object}\n */\nfunction createAccessor(paths) {\n    return {\n        type: ExprType.ACCESSOR,\n        paths: paths\n    };\n}\n\n// exports = module.exports = createAccessor;\n\n\n/**\n * @file 读取字符串\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var ExprType = require('./expr-type');\n\n/**\n * 读取字符串\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readString(walker) {\n    var startCode = walker.currentCode();\n    var startIndex = walker.index;\n    var charCode;\n\n    walkLoop: while ((charCode = walker.nextCode())) {\n        switch (charCode) {\n            case 92: // \\\n                walker.go(1);\n                break;\n            case startCode:\n                walker.go(1);\n                break walkLoop;\n        }\n    }\n\n    var literal = walker.cut(startIndex, walker.index);\n    return {\n        type: ExprType.STRING,\n        // 处理字符转义\n        value: (new Function('return ' + literal))()\n    };\n}\n\n// exports = module.exports = readString;\n\n\n/**\n * @file 读取数字\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var ExprType = require('./expr-type');\n\n/**\n * 读取数字\n *\n * @inner\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readNumber(walker) {\n    var match = walker.match(/\\s*(-?[0-9]+(\\.[0-9]+)?)/g);\n\n    return {\n        type: ExprType.NUMBER,\n        value: +match[1]\n    };\n}\n\n// exports = module.exports = readNumber;\n\n\n/**\n * @file 读取ident\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 读取ident\n * 这里的 ident 指标识符(identifier)，也就是通常意义上的变量名\n * 这里默认的变量名规则为：由美元符号($)、数字、字母或者下划线(_)构成的字符串\n *\n * @inner\n * @param {Walker} walker 源码读取对象\n * @return {string}\n */\nfunction readIdent(walker) {\n    var match = walker.match(/\\s*([\\$0-9a-z_]+)/ig, 1);\n\n    // #[begin] error\n    if (!match) {\n        throw new Error('[SAN FATAL] expect an ident: ' + walker.cut(walker.index));\n    }\n    // #[end]\n\n    return match[1];\n}\n\n// exports = module.exports = readIdent;\n\n\n/**\n * @file 读取三元表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readLogicalORExpr = require('./read-logical-or-expr');\n\n/**\n * 读取三元表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readTertiaryExpr(walker) {\n    var conditional = readLogicalORExpr(walker);\n    walker.goUntil();\n\n    if (walker.currentCode() === 63) { // ?\n        walker.go(1);\n        var yesExpr = readTertiaryExpr(walker);\n        walker.goUntil();\n\n        if (walker.currentCode() === 58) { // :\n            walker.go(1);\n            return {\n                type: ExprType.TERTIARY,\n                segs: [\n                    conditional,\n                    yesExpr,\n                    readTertiaryExpr(walker)\n                ]\n            };\n        }\n    }\n\n    return conditional;\n}\n\n// exports = module.exports = readTertiaryExpr;\n\n\n/**\n * @file 读取访问表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var createAccessor = require('./create-accessor');\n// var readIdent = require('./read-ident');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 读取访问表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readAccessor(walker) {\n    var firstSeg = readIdent(walker);\n    switch (firstSeg) {\n        case 'true':\n        case 'false':\n            return {\n                type: ExprType.BOOL,\n                value: firstSeg === 'true'\n            };\n    }\n\n    var result = createAccessor([\n        {\n            type: ExprType.STRING,\n            value: firstSeg\n        }\n    ]);\n\n    /* eslint-disable no-constant-condition */\n    accessorLoop: while (1) {\n    /* eslint-enable no-constant-condition */\n\n        switch (walker.currentCode()) {\n            case 46: // .\n                walker.go(1);\n\n                // ident as string\n                result.paths.push({\n                    type: ExprType.STRING,\n                    value: readIdent(walker)\n                });\n                break;\n\n            case 91: // [\n                walker.go(1);\n                result.paths.push(readTertiaryExpr(walker));\n                walker.goUntil(93); // ]\n                break;\n\n            default:\n                break accessorLoop;\n        }\n    }\n\n    return result;\n}\n\n// exports = module.exports = readAccessor;\n\n\n/**\n * @file 读取括号表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 读取括号表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readParenthesizedExpr(walker) {\n    walker.go(1);\n    var expr = readTertiaryExpr(walker);\n    walker.goUntil(41); // )\n\n    return expr;\n}\n\n// exports = module.exports = readParenthesizedExpr;\n\n\n/**\n * @file 读取一元表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readString = require('./read-string');\n// var readNumber = require('./read-number');\n// var readAccessor = require('./read-accessor');\n// var readParenthesizedExpr = require('./read-parenthesized-expr');\n\n\n/**\n * 读取一元表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readUnaryExpr(walker) {\n    walker.goUntil();\n\n    switch (walker.currentCode()) {\n        case 33: // !\n            walker.go(1);\n            return {\n                type: ExprType.UNARY,\n                expr: readUnaryExpr(walker)\n            };\n\n        case 34: // \"\n        case 39: // '\n            return readString(walker);\n\n        // number\n        case 45:\n        case 48:\n        case 49:\n        case 50:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 56:\n        case 57:\n            return readNumber(walker);\n\n        case 40: // (\n            return readParenthesizedExpr(walker);\n\n        // array literal\n        case 91: // [\n            walker.go(1);\n            var arrItems = [];\n            while (!walker.goUntil(93)) { // ]\n                var item = {};\n                arrItems.push(item);\n\n                if (walker.currentCode() === 46 && walker.match(/\\.\\.\\.\\s*/g)) {\n                    item.spread = true;\n                }\n\n                item.expr = readTertiaryExpr(walker);\n                walker.goUntil(44); // ,\n            }\n\n            return {\n                type: ExprType.ARRAY,\n                items: arrItems\n            };\n\n        // object literal\n        case 123: // {\n            walker.go(1);\n            var objItems = [];\n\n            while (!walker.goUntil(125)) { // }\n                var item = {};\n                objItems.push(item);\n\n                if (walker.currentCode() === 46 && walker.match(/\\.\\.\\.\\s*/g)) {\n                    item.spread = true;\n                    item.expr = readTertiaryExpr(walker);\n                }\n                else {\n                    // #[begin] error\n                    var walkerIndexBeforeName = walker.index;\n                    // #[end]\n\n                    item.name = readUnaryExpr(walker);\n\n                    // #[begin] error\n                    if (item.name.type > 4) {\n                        throw new Error('[SAN FATAL] unexpect object name: ' + walker.cut(walkerIndexBeforeName, walker.index));\n                    }\n                    // #[end]\n\n                    if (walker.goUntil(58)) { // :\n                        item.expr = readTertiaryExpr(walker)\n                    }\n                    else {\n                        item.expr = item.name;\n                    }\n\n                    if (item.name.type === ExprType.ACCESSOR) {\n                        item.name = item.name.paths[0];\n                    }\n                }\n\n                walker.goUntil(44); // ,\n            }\n\n            return {\n                type: ExprType.OBJECT,\n                items: objItems\n            };\n    }\n\n    return readAccessor(walker);\n}\n\n// exports = module.exports = readUnaryExpr;\n\n\n/**\n * @file 读取乘法表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readUnaryExpr = require('./read-unary-expr');\n\n/**\n * 读取乘法表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readMultiplicativeExpr(walker) {\n    var expr = readUnaryExpr(walker);\n\n    while (1) {\n        walker.goUntil();\n\n        var code = walker.currentCode();\n        switch (code) {\n            case 37: // %\n            case 42: // *\n            case 47: // /\n                walker.go(1);\n                expr = {\n                    type: ExprType.BINARY,\n                    operator: code,\n                    segs: [expr, readUnaryExpr(walker)]\n                };\n                continue;\n        }\n\n        break;\n    }\n\n\n    return expr;\n}\n\n// exports = module.exports = readMultiplicativeExpr;\n\n\n/**\n * @file 读取加法表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readMultiplicativeExpr = require('./read-multiplicative-expr');\n\n\n/**\n * 读取加法表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readAdditiveExpr(walker) {\n    var expr = readMultiplicativeExpr(walker);\n\n    while (1) {\n        walker.goUntil();\n        var code = walker.currentCode();\n\n        switch (code) {\n            case 43: // +\n            case 45: // -\n                walker.go(1);\n                expr = {\n                    type: ExprType.BINARY,\n                    operator: code,\n                    segs: [expr, readMultiplicativeExpr(walker)]\n                };\n                continue;\n        }\n\n        break;\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readAdditiveExpr;\n\n\n/**\n * @file 读取关系判断表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readAdditiveExpr = require('./read-additive-expr');\n\n/**\n * 读取关系判断表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readRelationalExpr(walker) {\n    var expr = readAdditiveExpr(walker);\n    walker.goUntil();\n\n    var code = walker.currentCode();\n    switch (code) {\n        case 60: // <\n        case 62: // >\n            if (walker.nextCode() === 61) {\n                code += 61;\n                walker.go(1);\n            }\n\n            return {\n                type: ExprType.BINARY,\n                operator: code,\n                segs: [expr, readAdditiveExpr(walker)]\n            };\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readRelationalExpr;\n\n\n/**\n * @file 读取相等比对表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readRelationalExpr = require('./read-relational-expr');\n\n/**\n * 读取相等比对表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readEqualityExpr(walker) {\n    var expr = readRelationalExpr(walker);\n    walker.goUntil();\n\n    var code = walker.currentCode();\n    switch (code) {\n        case 61: // =\n        case 33: // !\n            if (walker.nextCode() === 61) {\n                code += 61;\n                if (walker.nextCode() === 61) {\n                    code += 61;\n                    walker.go(1);\n                }\n\n                return {\n                    type: ExprType.BINARY,\n                    operator: code,\n                    segs: [expr, readRelationalExpr(walker)]\n                };\n            }\n\n            walker.go(-1);\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readEqualityExpr;\n\n\n/**\n * @file 读取逻辑与表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readEqualityExpr = require('./read-equality-expr');\n\n/**\n * 读取逻辑与表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readLogicalANDExpr(walker) {\n    var expr = readEqualityExpr(walker);\n    walker.goUntil();\n\n    if (walker.currentCode() === 38) { // &\n        if (walker.nextCode() === 38) {\n            walker.go(1);\n            return {\n                type: ExprType.BINARY,\n                operator: 76,\n                segs: [expr, readLogicalANDExpr(walker)]\n            };\n        }\n\n        walker.go(-1);\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readLogicalANDExpr;\n\n\n/**\n * @file 读取逻辑或表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readLogicalANDExpr = require('./read-logical-and-expr');\n\n/**\n * 读取逻辑或表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readLogicalORExpr(walker) {\n    var expr = readLogicalANDExpr(walker);\n    walker.goUntil();\n\n    if (walker.currentCode() === 124) { // |\n        if (walker.nextCode() === 124) {\n            walker.go(1);\n            return {\n                type: ExprType.BINARY,\n                operator: 248,\n                segs: [expr, readLogicalORExpr(walker)]\n            };\n        }\n\n        walker.go(-1);\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readLogicalORExpr;\n\n\n/**\n * @file 解析表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Walker = require('./walker');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 解析表达式\n *\n * @param {string} source 源码\n * @return {Object}\n */\nfunction parseExpr(source) {\n    if (typeof source === 'object' && source.type) {\n        return source;\n    }\n\n    var expr = readTertiaryExpr(new Walker(source));\n    expr.raw = source;\n    return expr;\n}\n\n// exports = module.exports = parseExpr;\n\n\n/**\n * @file 读取调用\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readAccessor = require('./read-accessor');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 读取调用\n *\n * @param {Walker} walker 源码读取对象\n * @param {Array=} defaultArgs 默认参数\n * @return {Object}\n */\nfunction readCall(walker, defaultArgs) {\n    walker.goUntil();\n    var ident = readAccessor(walker);\n    var args = [];\n\n    if (walker.goUntil(40)) { // (\n        while (!walker.goUntil(41)) { // )\n            args.push(readTertiaryExpr(walker));\n            walker.goUntil(44); // ,\n        }\n    }\n    else if (defaultArgs) {\n        args = defaultArgs;\n    }\n\n    return {\n        type: ExprType.CALL,\n        name: ident,\n        args: args\n    };\n}\n\n// exports = module.exports = readCall;\n\n\n/**\n * @file 解析调用\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var Walker = require('./walker');\n// var readCall = require('./read-call');\n\n/**\n * 解析调用\n *\n * @param {string} source 源码\n * @param {Array=} defaultArgs 默认参数\n * @return {Object}\n */\nfunction parseCall(source, defaultArgs) {\n    var expr = readCall(new Walker(source), defaultArgs);\n    expr.raw = source;\n    return expr;\n}\n\n// exports = module.exports = parseCall;\n\n\n/**\n * @file 解析插值替换\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Walker = require('./walker');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n// var ExprType = require('./expr-type');\n// var readCall = require('./read-call');\n\n/**\n * 解析插值替换\n *\n * @param {string} source 源码\n * @return {Object}\n */\nfunction parseInterp(source) {\n    var walker = new Walker(source);\n\n    var interp = {\n        type: ExprType.INTERP,\n        expr: readTertiaryExpr(walker),\n        filters: [],\n        raw: source\n    };\n\n    while (walker.goUntil(124)) { // |\n        var callExpr = readCall(walker);\n        switch (callExpr.name.paths[0].value) {\n            case 'html':\n                break;\n            case 'raw':\n                interp.original = 1;\n                break;\n            default:\n                interp.filters.push(callExpr);\n        }\n    }\n\n    return interp;\n}\n\n// exports = module.exports = parseInterp;\n\n\n/**\n * @file 解码 HTML 字符实体\n * @author errorrik(errorrik@gmail.com)\n */\n\nvar ENTITY_DECODE_MAP = {\n    lt: '<',\n    gt: '>',\n    nbsp: ' ',\n    quot: '\\\"',\n    emsp: '\\u2003',\n    ensp: '\\u2002',\n    thinsp: '\\u2009',\n    copy: '\\xa9',\n    reg: '\\xae',\n    zwnj: '\\u200c',\n    zwj: '\\u200d',\n    amp: '&'\n};\n\n/**\n * 解码 HTML 字符实体\n *\n * @param {string} source 要解码的字符串\n * @return {string}\n */\nfunction decodeHTMLEntity(source) {\n    return source\n        .replace(/&#([0-9]+);/g, function (match, code) {\n            return String.fromCharCode(+code);\n        })\n        .replace(/&#x([0-9a-f]+);/ig, function (match, code) {\n            return String.fromCharCode(parseInt(code, 16));\n        })\n        .replace(/&([a-z]+);/ig, function (match, code) {\n            return ENTITY_DECODE_MAP[code] || match;\n        });\n}\n\n// exports = module.exports = decodeHTMLEntity;\n\n\n/**\n * @file 解析文本\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Walker = require('./walker');\n// var ExprType = require('./expr-type');\n// var parseInterp = require('./parse-interp');\n// var decodeHTMLEntity = require('../util/decode-html-entity');\n\n/**\n * 对字符串进行可用于new RegExp的字面化\n *\n * @inner\n * @param {string} source 需要字面化的字符串\n * @return {string} 字符串字面化结果\n */\nfunction regexpLiteral(source) {\n    return source.replace(/[\\^\\[\\]\\$\\(\\)\\{\\}\\?\\*\\.\\+\\\\]/g, function (c) {\n        return '\\\\' + c;\n    });\n}\n\n/**\n * 解析文本\n *\n * @param {string} source 源码\n * @param {Array?} delimiters 分隔符。默认为 ['{{', '}}']\n * @return {Object}\n */\nfunction parseText(source, delimiters) {\n    delimiters = delimiters || ['{{', '}}'];\n    var exprStartReg = new RegExp(\n        regexpLiteral(delimiters[0]) + '\\\\s*([\\\\s\\\\S]+?)\\\\s*' + regexpLiteral(delimiters[1]),\n        'ig'\n    );\n\n    var exprMatch;\n\n    var walker = new Walker(source);\n    var beforeIndex = 0;\n\n    var expr = {\n        type: ExprType.TEXT,\n        segs: []\n    };\n\n    function pushStringToSeg(text) {\n        text && expr.segs.push({\n            type: ExprType.STRING,\n            literal: text,\n            value: decodeHTMLEntity(text)\n        });\n    }\n\n    var delimEndLen = delimiters[1].length;\n    while ((exprMatch = walker.match(exprStartReg)) != null) {\n        var interpSource = exprMatch[1];\n        var interpLen = exprMatch[0].length;\n        if (walker.cut(walker.index + 1 - delimEndLen, walker.index + 1) === delimiters[1]) {\n            interpSource += walker.cut(walker.index, walker.index + 1);\n            walker.go(1);\n            interpLen++;\n        }\n\n        pushStringToSeg(walker.cut(\n            beforeIndex,\n            walker.index - interpLen\n        ));\n\n        var interp = parseInterp(interpSource);\n        expr.original = expr.original || interp.original;\n        expr.segs.push(interp);\n\n        beforeIndex = walker.index;\n    }\n\n    pushStringToSeg(walker.cut(beforeIndex));\n\n\n\n    if (expr.segs.length === 1 && expr.segs[0].type === ExprType.STRING) {\n        expr.value = expr.segs[0].value;\n    }\n\n    return expr;\n}\n\n// exports = module.exports = parseText;\n\n\n/**\n * @file 解析指令\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var Walker = require('./walker');\n// var parseExpr = require('./parse-expr');\n// var parseCall = require('./parse-call');\n// var parseText = require('./parse-text');\n// var readAccessor = require('./read-accessor');\n// var readUnaryExpr = require('./read-unary-expr');\n\n/**\n * 指令解析器\n *\n * @inner\n * @type {Object}\n */\nvar directiveParsers = {\n    'for': function (value) {\n        var walker = new Walker(value);\n        var match = walker.match(/^\\s*([\\$0-9a-z_]+)(\\s*,\\s*([\\$0-9a-z_]+))?\\s+in\\s+/ig, 1);\n\n        if (match) {\n            var directive = {\n                item: parseExpr(match[1]),\n                index: parseExpr(match[3] || '$index'),\n                value: readUnaryExpr(walker)\n            };\n\n            if (walker.match(/\\s+trackby\\s+/ig, 1)) {\n                var start = walker.index;\n                directive.trackBy = readAccessor(walker);\n                directive.trackBy.raw = walker.cut(start, walker.index);\n            }\n            return directive;\n        }\n\n        // #[begin] error\n        throw new Error('[SAN FATAL] for syntax error: ' + value);\n        // #[end]\n    },\n\n    'ref': function (value, options) {\n        return {\n            value: parseText(value, options.delimiters)\n        };\n    },\n\n    'if': function (value) {\n        return {\n            value: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n        };\n    },\n\n    'elif': function (value) {\n        return {\n            value: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n        };\n    },\n\n    'else': function (value) {\n        return {\n            value: {}\n        };\n    },\n\n    'bind': function (value) {\n        return {\n            value: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n        };\n    },\n\n    'html': function (value) {\n        return {\n            value: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n        };\n    },\n\n    'transition': function (value) {\n        return {\n            value: parseCall(value)\n        };\n    }\n};\n\n/**\n * 解析指令\n *\n * @param {ANode} aNode 抽象节点\n * @param {string} name 指令名称\n * @param {string} value 指令值\n * @param {Object} options 解析参数\n * @param {Array?} options.delimiters 插值分隔符列表\n */\nfunction parseDirective(aNode, name, value, options) {\n    if (name === 'else-if') {\n        name = 'elif';\n    }\n\n    var parser = directiveParsers[name];\n    if (parser) {\n        (aNode.directives[name] = parser(value, options)).raw = value;\n    }\n}\n\n// exports = module.exports = parseDirective;\n\n\n/**\n * @file 对属性信息进行处理\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n\n/**\n * 对属性信息进行处理\n * 对组件的 binds 或者特殊的属性（比如 input 的 checked）需要处理\n *\n * 扁平化：\n * 当 text 解析只有一项时，要么就是 string，要么就是 interp\n * interp 有可能是绑定到组件属性的表达式，不希望被 eval text 成 string\n * 所以这里做个处理，只有一项时直接抽出来\n *\n * bool属性：\n * 当绑定项没有值时，默认为true\n *\n * @param {Object} prop 属性对象\n */\nfunction postProp(prop) {\n    var expr = prop.expr;\n\n    if (expr.type === ExprType.TEXT) {\n        switch (expr.segs.length) {\n            case 0:\n                prop.expr = {\n                    type: ExprType.BOOL,\n                    value: true\n                };\n                break;\n\n            case 1:\n                expr = prop.expr = expr.segs[0];\n                if (expr.type === ExprType.INTERP && expr.filters.length === 0) {\n                    prop.expr = expr.expr;\n                }\n        }\n    }\n}\n\n// exports = module.exports = postProp;\n\n\n/**\n * @file 解析抽象节点属性\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var kebab2camel = require('../util/kebab2camel');\n// var ExprType = require('./expr-type');\n// var createAccessor = require('./create-accessor');\n// var parseExpr = require('./parse-expr');\n// var parseCall = require('./parse-call');\n// var parseText = require('./parse-text');\n// var parseDirective = require('./parse-directive');\n// var postProp = require('./post-prop');\n\n\n/**\n * 解析抽象节点属性\n *\n * @param {ANode} aNode 抽象节点\n * @param {string} name 属性名称\n * @param {string} value 属性值\n * @param {Object} options 解析参数\n * @param {Array?} options.delimiters 插值分隔符列表\n */\nfunction integrateAttr(aNode, name, value, options) {\n    var prefixIndex = name.indexOf('-');\n    var realName;\n    var prefix;\n\n    if (prefixIndex > 0) {\n        prefix = name.slice(0, prefixIndex);\n        realName = name.slice(prefixIndex + 1);\n    }\n\n    switch (prefix) {\n        case 'on':\n            var event = {\n                name: realName,\n                modifier: {}\n            };\n            aNode.events.push(event);\n\n            var colonIndex;\n            while ((colonIndex = value.indexOf(':')) > 0) {\n                var modifier = value.slice(0, colonIndex);\n\n                // eventHandler(\"dd:aa\") 这种情况不能算modifier，需要辨识\n                if (!/^[a-z]+$/i.test(modifier)) {\n                    break;\n                }\n\n                event.modifier[modifier] = true;\n                value = value.slice(colonIndex + 1);\n            }\n\n            event.expr = parseCall(value, [\n                createAccessor([\n                    { type: ExprType.STRING, value: '$event' }\n                ])\n            ]);\n            break;\n\n        case 'san':\n        case 's':\n            parseDirective(aNode, realName, value, options);\n            break;\n\n        case 'prop':\n            integrateProp(aNode, realName, value, options);\n            break;\n\n        case 'var':\n            if (!aNode.vars) {\n                aNode.vars = [];\n            }\n\n            realName = kebab2camel(realName);\n            aNode.vars.push({\n                name: realName,\n                expr: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n            });\n            break;\n\n        default:\n            integrateProp(aNode, name, value, options);\n    }\n}\n\n/**\n * 解析抽象节点绑定属性\n *\n * @inner\n * @param {ANode} aNode 抽象节点\n * @param {string} name 属性名称\n * @param {string} value 属性值\n * @param {Object} options 解析参数\n * @param {Array?} options.delimiters 插值分隔符列表\n */\nfunction integrateProp(aNode, name, value, options) {\n    // parse two way binding, e.g. value=\"{=ident=}\"\n    var xMatch = value.match(/^\\{=\\s*(.*?)\\s*=\\}$/);\n\n    if (xMatch) {\n        aNode.props.push({\n            name: name,\n            expr: parseExpr(xMatch[1]),\n            x: 1,\n            raw: value\n        });\n\n        return;\n    }\n\n    // parse normal prop\n    var prop = {\n        name: name,\n        expr: parseText(value, options.delimiters),\n        raw: value\n    };\n\n    // 这里不能把只有一个插值的属性抽取\n    // 因为插值里的值可能是html片段，容易被注入\n    // 组件的数据绑定在组件init时做抽取\n    switch (name) {\n        case 'class':\n        case 'style':\n            each(prop.expr.segs, function (seg) {\n                if (seg.type === ExprType.INTERP) {\n                    seg.filters.push({\n                        type: ExprType.CALL,\n                        name: createAccessor([\n                            {\n                                type: ExprType.STRING,\n                                value: '_' + prop.name\n                            }\n                        ]),\n                        args: []\n                    });\n                }\n            });\n            break;\n\n        case 'checked':\n            if (aNode.tagName === 'input') {\n                postProp(prop);\n            }\n            break;\n    }\n\n    aNode.props.push(prop);\n}\n\n\n// exports = module.exports = integrateAttr;\n\n\n/**\n * @file 解析模板\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var createANode = require('./create-a-node');\n// var Walker = require('./walker');\n// var integrateAttr = require('./integrate-attr');\n// var parseText = require('./parse-text');\n// var autoCloseTags = require('../browser/auto-close-tags');\n\n// #[begin] error\nfunction getXPath(stack, currentTagName) {\n    var path = ['ROOT'];\n    for (var i = 1, len = stack.length; i < len; i++) {\n        path.push(stack[i].tagName);\n    }\n    if (currentTagName) {\n        path.push(currentTagName);\n    }\n    return path.join('>');\n}\n// #[end]\n\n/* eslint-disable fecs-max-statements */\n\n/**\n * 解析 template\n *\n * @param {string} source template源码\n * @param {Object?} options 解析参数\n * @param {string?} options.trimWhitespace 空白文本的处理策略。none|blank|all\n * @param {Array?} options.delimiters 插值分隔符列表\n * @return {ANode}\n */\nfunction parseTemplate(source, options) {\n    options = options || {};\n    options.trimWhitespace = options.trimWhitespace || 'none';\n\n    var rootNode = createANode();\n\n    if (typeof source !== 'string') {\n        return rootNode;\n    }\n\n    source = source.replace(/<!--([\\s\\S]*?)-->/mg, '').replace(/(^\\s+|\\s+$)/g, '');\n    var walker = new Walker(source);\n\n    var tagReg = /<(\\/)?([a-z0-9-]+)\\s*/ig;\n    var attrReg = /([-:0-9a-z\\(\\)\\[\\]]+)(\\s*=\\s*(['\"])([^\\3]*?)\\3)?\\s*/ig;\n\n    var tagMatch;\n    var currentNode = rootNode;\n    var stack = [rootNode];\n    var stackIndex = 0;\n    var beforeLastIndex = 0;\n\n    while ((tagMatch = walker.match(tagReg)) != null) {\n        var tagEnd = tagMatch[1];\n        var tagName = tagMatch[2].toLowerCase();\n\n        pushTextNode(source.slice(\n            beforeLastIndex,\n            walker.index - tagMatch[0].length\n        ));\n\n        // 62: >\n        // 47: /\n        // 处理 </xxxx >\n        if (tagEnd && walker.currentCode() === 62) {\n            // 满足关闭标签的条件时，关闭标签\n            // 向上查找到对应标签，找不到时忽略关闭\n            var closeIndex = stackIndex;\n\n            // #[begin] error\n            // 如果正在闭合一个自闭合的标签，例如 </input>，报错\n            if (autoCloseTags[tagName]) {\n                throw new Error(''\n                    + '[SAN ERROR] ' + getXPath(stack, tagName) + ' is a `auto closed` tag, '\n                    + 'so it cannot be closed with </' + tagName + '>'\n                );\n            }\n\n            // 如果关闭的 tag 和当前打开的不一致，报错\n            if (\n                stack[closeIndex].tagName !== tagName\n                // 这里要把 table 自动添加 tbody 的情况给去掉\n                && !(tagName === 'table' && stack[closeIndex].tagName === 'tbody')\n            ) {\n                throw new Error('[SAN ERROR] ' + getXPath(stack) + ' is closed with ' + tagName);\n            }\n            // #[end]\n\n            while (closeIndex > 0 && stack[closeIndex].tagName !== tagName) {\n                closeIndex--;\n            }\n\n            if (closeIndex > 0) {\n                stackIndex = closeIndex - 1;\n                currentNode = stack[stackIndex];\n            }\n            walker.go(1);\n        }\n\n        // #[begin] error\n        // 处理 </xxx 非正常闭合标签\n        else if (tagEnd) {\n\n            // 如果闭合标签时，匹配后的下一个字符是 <，即下一个标签的开始，那么当前闭合标签未闭合\n            if (walker.currentCode() === 60) {\n                throw new Error(''\n                    + '[SAN ERROR] ' + getXPath(stack)\n                    + '\\'s close tag not closed'\n                );\n            }\n\n            // 闭合标签有属性\n            throw new Error(''\n                + '[SAN ERROR] ' + getXPath(stack)\n                + '\\'s close tag has attributes'\n            );\n\n        }\n        // #[end]\n\n        else if (!tagEnd) {\n            var aElement = createANode({\n                tagName: tagName\n            });\n            var tagClose = autoCloseTags[tagName];\n\n            // 解析 attributes\n\n            /* eslint-disable no-constant-condition */\n            while (1) {\n            /* eslint-enable no-constant-condition */\n\n                var nextCharCode = walker.currentCode();\n\n                // 标签结束时跳出 attributes 读取\n                // 标签可能直接结束或闭合结束\n                if (nextCharCode === 62) {\n                    walker.go(1);\n                    break;\n                }\n                // 遇到 /> 按闭合处理\n                else if (nextCharCode === 47\n                    && walker.charCode(walker.index + 1) === 62\n                ) {\n                    walker.go(2);\n                    tagClose = 1;\n                    break;\n                }\n\n                // #[begin] error\n                // 在处理一个 open 标签时，如果遇到了 <， 即下一个标签的开始，则当前标签未能正常闭合，报错\n                if (nextCharCode === 60) {\n                    throw new Error('[SAN ERROR] ' + getXPath(stack, tagName) + ' is not closed');\n                }\n                // #[end]\n\n                // 读取 attribute\n                var attrMatch = walker.match(attrReg);\n                if (attrMatch) {\n\n                    // #[begin] error\n                    // 如果属性有 =，但没取到 value，报错\n                    if (\n                        walker.charCode(attrMatch.index + attrMatch[1].length) === 61\n                        && !attrMatch[2]\n                    ) {\n                        throw new Error(''\n                            + '[SAN ERROR] ' + getXPath(stack, tagName) + ' attribute `'\n                            + attrMatch[1] + '` is not wrapped with \"\"'\n                        );\n                    }\n                    // #[end]\n\n                    integrateAttr(\n                        aElement,\n                        attrMatch[1],\n                        attrMatch[2] ? attrMatch[4] : '',\n                        options\n                    );\n                }\n\n            }\n\n            // match if directive for else/elif directive\n            var elseDirective = aElement.directives['else'] || aElement.directives.elif; // eslint-disable-line dot-notation\n            if (elseDirective) {\n                var parentChildrenLen = currentNode.children.length;\n\n                while (parentChildrenLen--) {\n                    var parentChild = currentNode.children[parentChildrenLen];\n                    if (parentChild.textExpr) {\n                        currentNode.children.splice(parentChildrenLen, 1);\n                        continue;\n                    }\n\n                    // #[begin] error\n                    if (!parentChild.directives['if']) { // eslint-disable-line dot-notation\n                        throw new Error('[SAN FATEL] else not match if.');\n                    }\n                    // #[end]\n\n                    parentChild.elses = parentChild.elses || [];\n                    parentChild.elses.push(aElement);\n\n                    break;\n                }\n            }\n            else {\n                if (aElement.tagName === 'tr' && currentNode.tagName === 'table') {\n                    var tbodyNode = createANode({\n                        tagName: 'tbody'\n                    });\n                    currentNode.children.push(tbodyNode);\n                    currentNode = tbodyNode;\n                    stack[++stackIndex] = tbodyNode;\n                }\n\n                currentNode.children.push(aElement);\n            }\n\n            if (!tagClose) {\n                currentNode = aElement;\n                stack[++stackIndex] = aElement;\n            }\n        }\n\n        beforeLastIndex = walker.index;\n    }\n\n    pushTextNode(walker.cut(beforeLastIndex));\n\n    return rootNode;\n\n    /**\n     * 在读取栈中添加文本节点\n     *\n     * @inner\n     * @param {string} text 文本内容\n     */\n    function pushTextNode(text) {\n        switch (options.trimWhitespace) {\n            case 'blank':\n                if (/^\\s+$/.test(text)) {\n                    text = null;\n                }\n                break;\n\n            case 'all':\n                text = text.replace(/(^\\s+|\\s+$)/g, '');\n                break;\n        }\n\n        if (text) {\n            currentNode.children.push(createANode({\n                textExpr: parseText(text, options.delimiters)\n            }));\n        }\n    }\n}\n\n/* eslint-enable fecs-max-statements */\n\n// exports = module.exports = parseTemplate;\n\n\n/**\n * @file 默认filter\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/* eslint-disable fecs-camelcase */\n/* eslint-disable guard-for-in */\n\n/**\n * 默认filter\n *\n * @const\n * @type {Object}\n */\nvar DEFAULT_FILTERS = {\n\n    /**\n     * URL编码filter\n     *\n     * @param {string} source 源串\n     * @return {string} 替换结果串\n     */\n    url: encodeURIComponent,\n\n    _class: function (source) {\n        if (source instanceof Array) {\n            return source.join(' ');\n        }\n\n        return source;\n    },\n\n    _style: function (source) {\n        if (typeof source === 'object') {\n            var result = '';\n            for (var key in source) {\n                result += key + ':' + source[key] + ';';\n            }\n\n            return result;\n        }\n\n        return source;\n    },\n\n    _sep: function (source, sep) {\n        return source ? sep + source : source;\n    }\n};\n/* eslint-enable fecs-camelcase */\n\n// exports = module.exports = DEFAULT_FILTERS;\n\n\n/**\n * @file 表达式计算\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var extend = require('../util/extend');\n// var DEFAULT_FILTERS = require('./default-filters');\n// var evalArgs = require('./eval-args');\n// var dataCache = require('./data-cache');\n\n/**\n * 计算表达式的值\n *\n * @param {Object} expr 表达式对象\n * @param {Data} data 数据容器对象\n * @param {Component=} owner 所属组件环境\n * @return {*}\n */\nfunction evalExpr(expr, data, owner) {\n    if (expr.value != null) {\n        return expr.value;\n    }\n\n    var value = dataCache.get(data, expr);\n\n    if (value == null) {\n        switch (expr.type) {\n            case ExprType.UNARY:\n                value = !evalExpr(expr.expr, data, owner);\n                break;\n\n            case ExprType.BINARY:\n                var leftValue = evalExpr(expr.segs[0], data, owner);\n                var rightValue = evalExpr(expr.segs[1], data, owner);\n\n                /* eslint-disable eqeqeq */\n                switch (expr.operator) {\n                    case 37:\n                        value = leftValue % rightValue;\n                        break;\n                    case 43:\n                        value = leftValue + rightValue;\n                        break;\n                    case 45:\n                        value = leftValue - rightValue;\n                        break;\n                    case 42:\n                        value = leftValue * rightValue;\n                        break;\n                    case 47:\n                        value = leftValue / rightValue;\n                        break;\n                    case 60:\n                        value = leftValue < rightValue;\n                        break;\n                    case 62:\n                        value = leftValue > rightValue;\n                        break;\n                    case 76:\n                        value = leftValue && rightValue;\n                        break;\n                    case 94:\n                        value = leftValue != rightValue;\n                        break;\n                    case 121:\n                        value = leftValue <= rightValue;\n                        break;\n                    case 122:\n                        value = leftValue == rightValue;\n                        break;\n                    case 123:\n                        value = leftValue >= rightValue;\n                        break;\n                    case 155:\n                        value = leftValue !== rightValue;\n                        break;\n                    case 183:\n                        value = leftValue === rightValue;\n                        break;\n                    case 248:\n                        value = leftValue || rightValue;\n                        break;\n                }\n                /* eslint-enable eqeqeq */\n                break;\n\n            case ExprType.TERTIARY:\n                value = evalExpr(\n                    expr.segs[evalExpr(expr.segs[0], data, owner) ? 1 : 2],\n                    data,\n                    owner\n                );\n                break;\n\n            case ExprType.ARRAY:\n                value = [];\n                for (var i = 0, l = expr.items.length; i < l; i++) {\n                    var item = expr.items[i];\n                    var itemValue = evalExpr(item.expr, data, owner);\n\n                    if (item.spread) {\n                        itemValue && (value = value.concat(itemValue));\n                    }\n                    else {\n                        value.push(itemValue);\n                    }\n                }\n                break;\n\n            case ExprType.OBJECT:\n                value = {};\n                for (var i = 0, l = expr.items.length; i < l; i++) {\n                    var item = expr.items[i];\n                    var itemValue = evalExpr(item.expr, data, owner);\n\n                    if (item.spread) {\n                        itemValue && extend(value, itemValue);\n                    }\n                    else {\n                        value[evalExpr(item.name, data, owner)] = itemValue;\n                    }\n                }\n                break;\n\n            case ExprType.ACCESSOR:\n                value = data.get(expr);\n                break;\n\n            case ExprType.INTERP:\n                value = evalExpr(expr.expr, data, owner);\n\n                if (owner) {\n                    for (var i = 0, l = expr.filters.length; i < l; i++) {\n                        var filter = expr.filters[i];\n                        var filterName = filter.name.paths[0].value;\n\n                        if (owner.filters[filterName]) {\n                            value = owner.filters[filterName].apply(\n                                owner,\n                                [value].concat(evalArgs(filter.args, data, owner))\n                            );\n                        }\n                        else if (DEFAULT_FILTERS[filterName]) {\n                            value = DEFAULT_FILTERS[filterName](\n                                value,\n                                filter.args[0] ? filter.args[0].value : ''\n                            );\n                        }\n                    }\n                }\n\n                if (value == null) {\n                    value = '';\n                }\n\n                break;\n\n            /* eslint-disable no-redeclare */\n            case ExprType.TEXT:\n                var buf = '';\n                for (var i = 0, l = expr.segs.length; i < l; i++) {\n                    var seg = expr.segs[i];\n                    buf += seg.value || evalExpr(seg, data, owner);\n                }\n                return buf;\n        }\n\n        dataCache.set(data, expr, value);\n    }\n\n    return value;\n}\n\n// exports = module.exports = evalExpr;\n\n\n/**\n * @file 为函数调用计算参数数组的值\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var evalExpr = require('./eval-expr');\n\n/**\n * 为函数调用计算参数数组的值\n *\n * @param {Array} args 参数表达式列表\n * @param {Data} data 数据环境\n * @param {Component} owner 组件环境\n * @return {Array}\n */\nfunction evalArgs(args, data, owner) {\n    var result = [];\n    for (var i = 0; i < args.length; i++) {\n        result.push(evalExpr(args[i], data, owner));\n    }\n\n    return result;\n}\n\n// exports = module.exports = evalArgs;\n\n\n/**\n * @file 数据缓存管理器\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n\nvar dataCacheSource = {};\nvar dataCacheClearly = 1;\n\n/**\n * 数据缓存管理器\n *\n * @const\n * @type {Object}\n */\nvar dataCache = {\n    clear: function () {\n        if (!dataCacheClearly) {\n            dataCacheClearly = 1;\n            dataCacheSource = {};\n        }\n    },\n\n    set: function (data, expr, value) {\n        if (expr.raw) {\n            dataCacheClearly = 0;\n            (dataCacheSource[data.id] = dataCacheSource[data.id] || {})[expr.raw] = value;\n        }\n    },\n\n    get: function (data, expr) {\n        if (expr.raw && dataCacheSource[data.id]) {\n            return dataCacheSource[data.id][expr.raw];\n        }\n    }\n};\n\n\n// exports = module.exports = dataCache;\n\n\n/**\n * @file 比较变更表达式与目标表达式之间的关系\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var evalExpr = require('./eval-expr');\n// var each = require('../util/each');\n\n/**\n * 判断变更表达式与多个表达式之间的关系，0为完全没关系，1为有关系\n *\n * @inner\n * @param {Object} changeExpr 目标表达式\n * @param {Array} exprs 多个源表达式\n * @param {Data} data 表达式所属数据环境\n * @return {number}\n */\nfunction changeExprCompareExprs(changeExpr, exprs, data) {\n    for (var i = 0, l = exprs.length; i < l; i++) {\n        if (changeExprCompare(changeExpr, exprs[i], data)) {\n            return 1;\n        }\n    }\n\n    return 0;\n}\n\n/**\n * 比较变更表达式与目标表达式之间的关系，用于视图更新判断\n * 视图更新需要根据其关系，做出相应的更新行为\n *\n * 0: 完全没关系\n * 1: 变更表达式是目标表达式的母项(如a与a.b) 或 表示需要完全变化\n * 2: 变更表达式是目标表达式相等\n * >2: 变更表达式是目标表达式的子项，如a.b.c与a.b\n *\n * @param {Object} changeExpr 变更表达式\n * @param {Object} expr 要比较的目标表达式\n * @param {Data} data 表达式所属数据环境\n * @return {number}\n */\nfunction changeExprCompare(changeExpr, expr, data) {\n    switch (expr.type) {\n        case ExprType.ACCESSOR:\n            var paths = expr.paths;\n            var len = paths.length;\n            var changePaths = changeExpr.paths;\n            var changeLen = changePaths.length;\n\n            var result = 1;\n            for (var i = 0; i < len; i++) {\n                var pathExpr = paths[i];\n\n                if (pathExpr.type === ExprType.ACCESSOR\n                    && changeExprCompare(changeExpr, pathExpr, data)\n                ) {\n                    return 1;\n                }\n\n                if (result && i < changeLen\n                    /* eslint-disable eqeqeq */\n                    && (pathExpr.value || evalExpr(pathExpr, data))\n                        != (changePaths[i].value || evalExpr(changePaths[i], data))\n                    /* eslint-enable eqeqeq */\n                ) {\n                    result = 0;\n                }\n            }\n\n            if (result) {\n                result = Math.max(1, changeLen - len + 2);\n            }\n            return result;\n\n        case ExprType.UNARY:\n            return changeExprCompare(changeExpr, expr.expr, data) ? 1 : 0;\n\n\n        case ExprType.TEXT:\n        case ExprType.BINARY:\n        case ExprType.TERTIARY:\n            return changeExprCompareExprs(changeExpr, expr.segs, data);\n\n        case ExprType.ARRAY:\n        case ExprType.OBJECT:\n            for (var i = 0, l = expr.items.length; i < l; i++) {\n                if (changeExprCompare(changeExpr, expr.items[i].expr, data)) {\n                    return 1;\n                }\n            }\n\n            return 0;\n\n        case ExprType.INTERP:\n            if (!changeExprCompare(changeExpr, expr.expr, data)) {\n                var filterResult;\n                each(expr.filters, function (filter) {\n                    filterResult = changeExprCompareExprs(changeExpr, filter.args, data);\n                    return !filterResult;\n                });\n\n                return filterResult ? 1 : 0;\n            }\n\n            return 1;\n    }\n\n    return 0;\n}\n\n// exports = module.exports = changeExprCompare;\n\n\n/**\n * @file 数据变更类型枚举\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 数据变更类型枚举\n *\n * @const\n * @type {Object}\n */\nvar DataChangeType = {\n    SET: 1,\n    SPLICE: 2\n};\n\n// exports = module.exports = DataChangeType;\n\n\n/**\n * @file 生命周期类\n * @author errorrik(errorrik@gmail.com)\n */\n\nfunction lifeCycleOwnIs(name) {\n    return this[name];\n}\n\n/* eslint-disable fecs-valid-var-jsdoc */\n/**\n * 节点生命周期信息\n *\n * @inner\n * @type {Object}\n */\nvar LifeCycle = {\n    start: {},\n\n    compiled: {\n        is: lifeCycleOwnIs,\n        compiled: true\n    },\n\n    inited: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true\n    },\n\n    created: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true\n    },\n\n    attached: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true,\n        attached: true\n    },\n\n    leaving: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true,\n        attached: true,\n        leaving: true\n    },\n\n    detached: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true,\n        detached: true\n    },\n\n    disposed: {\n        is: lifeCycleOwnIs,\n        disposed: true\n    }\n};\n/* eslint-enable fecs-valid-var-jsdoc */\n\n\n// exports = module.exports = LifeCycle;\n\n\n/**\n * @file 节点类型\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 节点类型\n *\n * @const\n * @type {Object}\n */\nvar NodeType = {\n    TEXT: 1,\n    IF: 2,\n    FOR: 3,\n    ELEM: 4,\n    CMPT: 5,\n    SLOT: 6,\n    TPL: 7\n};\n\n// exports = module.exports = NodeType;\n\n\n/**\n * @file 获取 ANode props 数组中相应 name 的项\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 获取 ANode props 数组中相应 name 的项\n *\n * @param {Object} aNode ANode对象\n * @param {string} name name属性匹配串\n * @return {Object}\n */\nfunction getANodeProp(aNode, name) {\n    var index = aNode.hotspot.props[name];\n    if (index != null) {\n        return aNode.props[index];\n    }\n}\n\n// exports = module.exports = getANodeProp;\n\n\n/**\n * @file 获取属性处理对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var contains = require('../util/contains');\n// var empty = require('../util/empty');\n// var svgTags = require('../browser/svg-tags');\n// var evalExpr = require('../runtime/eval-expr');\n// var getANodeProp = require('./get-a-node-prop');\n// var NodeType = require('./node-type');\n\n\n/**\n * HTML 属性和 DOM 操作属性的对照表\n *\n * @inner\n * @const\n * @type {Object}\n */\nvar HTML_ATTR_PROP_MAP = {\n    'readonly': 'readOnly',\n    'cellpadding': 'cellPadding',\n    'cellspacing': 'cellSpacing',\n    'colspan': 'colSpan',\n    'rowspan': 'rowSpan',\n    'valign': 'vAlign',\n    'usemap': 'useMap',\n    'frameborder': 'frameBorder',\n    'for': 'htmlFor'\n};\n\n/**\n * 默认的元素的属性设置的变换方法\n *\n * @inner\n * @type {Object}\n */\nvar defaultElementPropHandler = {\n    prop: function (el, value, name, element) {\n        var propName = HTML_ATTR_PROP_MAP[name] || name;\n        value = value == null ? '' : value\n\n        // input 的 type 是个特殊属性，其实也应该用 setAttribute\n        // 但是 type 不应该运行时动态改变，否则会有兼容性问题\n        // 所以这里直接就不管了\n        if (propName in el) {\n            el[propName] = value;\n        }\n        else {\n            el.setAttribute(name, value);\n        }\n\n        // attribute 绑定的是 text，所以不会出现 null 的情况，这里无需处理\n        // 换句话来说，san 是做不到 attribute 时有时无的\n        // if (value == null) {\n        //     el.removeAttribute(name);\n        // }\n    },\n\n    output: function (element, bindInfo, data) {\n        data.set(bindInfo.expr, element.el[bindInfo.name], {\n            target: {\n                id: element.id,\n                prop: bindInfo.name\n            }\n        });\n    }\n};\n\nvar svgPropHandler = {\n    prop: function (el, value, name) {\n        el.setAttribute(name, value);\n    }\n};\n\nvar boolPropHandler = {\n    prop: function (el, value, name, element, prop) {\n        var propName = HTML_ATTR_PROP_MAP[name] || name;\n        el[propName] = !!(prop && prop.raw === ''\n            || value && value !== 'false' && value !== '0');\n    }\n};\n\n/* eslint-disable fecs-properties-quote */\n/**\n * 默认的属性设置变换方法\n *\n * @inner\n * @type {Object}\n */\nvar defaultElementPropHandlers = {\n    style: {\n        prop: function (el, value) {\n            el.style.cssText = value;\n        }\n    },\n\n    'class': { // eslint-disable-line\n        prop: function (el, value) {\n            el.className = value;\n        }\n    },\n\n    slot: {\n        prop: empty\n    },\n\n    readonly: boolPropHandler,\n    disabled: boolPropHandler,\n    autofocus: boolPropHandler,\n    required: boolPropHandler,\n    draggable: boolPropHandler\n};\n/* eslint-enable fecs-properties-quote */\n\nvar analInputChecker = {\n    checkbox: contains,\n    radio: function (a, b) {\n        return a === b;\n    }\n};\n\nfunction analInputCheckedState(element, value, oper) {\n    var bindValue = getANodeProp(element.aNode, 'value');\n    var bindType = getANodeProp(element.aNode, 'type');\n\n    if (bindValue && bindType) {\n        var type = evalExpr(bindType.expr, element.scope, element.owner);\n\n        if (analInputChecker[type]) {\n            var bindChecked = getANodeProp(element.aNode, 'checked');\n            if (!bindChecked.hintExpr) {\n                bindChecked.hintExpr = bindValue.expr;\n            }\n\n            return !!analInputChecker[type](\n                value,\n                evalExpr(bindValue.expr, element.scope, element.owner)\n            );\n        }\n    }\n}\n\nvar elementPropHandlers = {\n    input: {\n        multiple: boolPropHandler,\n        checked: {\n            prop: function (el, value, name, element) {\n                var state = analInputCheckedState(element, value);\n\n                boolPropHandler.prop(\n                    el,\n                    state != null ? state : value,\n                    'checked',\n                    element\n                );\n            },\n\n            output: function (element, bindInfo, data) {\n                var el = element.el;\n                var bindValue = getANodeProp(element.aNode, 'value');\n                var bindType = getANodeProp(element.aNode, 'type') || {};\n\n                if (bindValue && bindType) {\n                    switch (el.type.toLowerCase()) {\n                        case 'checkbox':\n                            data[el.checked ? 'push' : 'remove'](bindInfo.expr, el.value);\n                            return;\n\n                        case 'radio':\n                            el.checked && data.set(bindInfo.expr, el.value, {\n                                target: {\n                                    id: element.id,\n                                    prop: bindInfo.name\n                                }\n                            });\n                            return;\n                    }\n                }\n\n                defaultElementPropHandler.output(element, bindInfo, data);\n            }\n        }\n    },\n\n    option: {\n        value: {\n            prop: function (el, value, name, element) {\n                defaultElementPropHandler.prop(el, value, name, element);\n\n                if (isOptionSelected(element, value)) {\n                    el.selected = true;\n                }\n            }\n        }\n    },\n\n    select: {\n        value: {\n            prop: function (el, value) {\n                el.value = value || '';\n            },\n\n            output: defaultElementPropHandler.output\n        }\n    }\n};\n\nfunction isOptionSelected(element, value) {\n    var parentSelect = element.parent;\n    while (parentSelect) {\n        if (parentSelect.tagName === 'select') {\n            break;\n        }\n\n        parentSelect = parentSelect.parent;\n    }\n\n\n    if (parentSelect) {\n        var selectValue = null;\n        var prop;\n        var expr;\n\n        if ((prop = getANodeProp(parentSelect.aNode, 'value'))\n            && (expr = prop.expr)\n        ) {\n            selectValue = parentSelect.nodeType === NodeType.CMPT\n                ? evalExpr(expr, parentSelect.data, parentSelect)\n                : evalExpr(expr, parentSelect.scope, parentSelect.owner)\n                || '';\n        }\n\n        if (selectValue === value) {\n            return 1;\n        }\n    }\n}\n\n\n/**\n * 获取属性处理对象\n *\n * @param {string} tagName 元素tag\n * @param {string} attrName 属性名\n * @return {Object}\n */\nfunction getPropHandler(tagName, attrName) {\n    if (svgTags[tagName]) {\n        return svgPropHandler;\n    }\n\n    var tagPropHandlers = elementPropHandlers[tagName];\n    if (!tagPropHandlers) {\n        tagPropHandlers = elementPropHandlers[tagName] = {};\n    }\n\n    var propHandler = tagPropHandlers[attrName];\n    if (!propHandler) {\n        propHandler = defaultElementPropHandlers[attrName] || defaultElementPropHandler;\n        tagPropHandlers[attrName] = propHandler;\n    }\n\n    return propHandler;\n}\n\n// exports = module.exports = getPropHandler;\n\n\n/**\n * @file 判断变更是否来源于元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 判断变更是否来源于元素，来源于元素时，视图更新需要阻断\n *\n * @param {Object} change 变更对象\n * @param {Element} element 元素\n * @param {string?} propName 属性名，可选。需要精确判断是否来源于此属性时传入\n * @return {boolean}\n */\nfunction isDataChangeByElement(change, element, propName) {\n    var changeTarget = change.option.target;\n    return changeTarget && changeTarget.id === element.id\n        && (!propName || changeTarget.prop === propName);\n}\n\n// exports = module.exports = isDataChangeByElement;\n\n\n/**\n * @file 在对象上使用accessor表达式查找方法\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var evalExpr = require('../runtime/eval-expr');\n\n/**\n * 在对象上使用accessor表达式查找方法\n *\n * @param {Object} source 源对象\n * @param {Object} nameExpr 表达式\n * @param {Data} data 所属数据环境\n * @return {Function}\n */\nfunction findMethod(source, nameExpr, data) {\n    var method = source;\n\n    for (var i = 0; method != null && i < nameExpr.paths.length; i++) {\n        method = method[evalExpr(nameExpr.paths[i], data)];\n    }\n\n    return method;\n}\n\n// exports = module.exports = findMethod;\n\n\n/**\n * @file 数据类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var evalExpr = require('./eval-expr');\n// var DataChangeType = require('./data-change-type');\n// var createAccessor = require('../parser/create-accessor');\n// var parseExpr = require('../parser/parse-expr');\n// var guid = require('../util/guid');\n// var dataCache = require('./data-cache');\n\n/**\n * 数据类\n *\n * @class\n * @param {Object?} data 初始数据\n * @param {Model?} parent 父级数据容器\n */\nfunction Data(data, parent) {\n    this.id = guid();\n    this.parent = parent;\n    this.raw = data || {};\n    this.listeners = [];\n}\n\n// #[begin] error\n// 以下两个函数只在开发模式下可用，在生产模式下不存在\n/**\n * DataTypes 检测\n */\nData.prototype.checkDataTypes = function () {\n    if (this.typeChecker) {\n        this.typeChecker(this.raw);\n    }\n};\n\n/**\n * 设置 type checker\n *\n * @param  {Function} typeChecker 类型校验器\n */\nData.prototype.setTypeChecker = function (typeChecker) {\n    this.typeChecker = typeChecker;\n};\n\n// #[end]\n\n/**\n * 添加数据变更的事件监听器\n *\n * @param {Function} listener 监听函数\n */\nData.prototype.listen = function (listener) {\n    if (typeof listener === 'function') {\n        this.listeners.push(listener);\n    }\n};\n\n/**\n * 移除数据变更的事件监听器\n *\n * @param {Function} listener 监听函数\n */\nData.prototype.unlisten = function (listener) {\n    var len = this.listeners.length;\n    while (len--) {\n        if (!listener || this.listeners[len] === listener) {\n            this.listeners.splice(len, 1);\n        }\n    }\n};\n\n/**\n * 触发数据变更\n *\n * @param {Object} change 变更信息对象\n */\nData.prototype.fire = function (change) {\n    if (change.option.silent || change.option.silence || change.option.quiet) {\n        return;\n    }\n\n    for (var i = 0; i < this.listeners.length; i++) {\n        this.listeners[i].call(this, change);\n    }\n};\n\n/**\n * 获取数据项\n *\n * @param {string|Object?} expr 数据项路径\n * @param {Data?} callee 当前数据获取的调用环境\n * @return {*}\n */\nData.prototype.get = function (expr, callee) {\n    var value = this.raw;\n    if (!expr) {\n        return value;\n    }\n\n    expr = parseExpr(expr);\n\n    var paths = expr.paths;\n    callee = callee || this;\n\n    value = value[paths[0].value];\n\n    if (value == null && this.parent) {\n        value = this.parent.get(expr, callee);\n    }\n    else {\n        for (var i = 1, l = paths.length; value != null && i < l; i++) {\n            value = value[paths[i].value || evalExpr(paths[i], callee)];\n        }\n    }\n\n    return value;\n};\n\n\n/**\n * 数据对象变更操作\n *\n * @inner\n * @param {Object|Array} source 要变更的源数据\n * @param {Array} exprPaths 属性路径\n * @param {*} value 变更属性值\n * @param {Data} data 对应的Data对象\n * @return {*} 变更后的新数据\n */\nfunction immutableSet(source, exprPaths, value, data) {\n    if (exprPaths.length === 0) {\n        return value;\n    }\n\n    var prop = evalExpr(exprPaths[0], data);\n    var result;\n\n    if (source instanceof Array) {\n        var index = +prop;\n\n        result = source.slice(0);\n        result[isNaN(index) ? prop : index] = immutableSet(source[index], exprPaths.slice(1), value, data);\n\n        return result;\n    }\n    else if (typeof source === 'object') {\n        result = {};\n\n        for (var key in source) {\n            if (key !== prop) {\n                result[key] = source[key];\n            }\n        }\n\n        result[prop] = immutableSet(source[prop] || {}, exprPaths.slice(1), value, data);\n\n        return result;\n    }\n\n    return source;\n}\n\n/**\n * 设置数据项\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} value 数据值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.set = function (expr, value, option) {\n    option = option || {};\n\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== ExprType.ACCESSOR) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data set: ' + exprRaw);\n    }\n    // #[end]\n\n    if (this.get(expr) === value && !option.force) {\n        return;\n    }\n\n    dataCache.clear();\n    this.raw = immutableSet(this.raw, expr.paths, value, this);\n    this.fire({\n        type: DataChangeType.SET,\n        expr: expr,\n        value: value,\n        option: option\n    });\n\n    // #[begin] error\n    this.checkDataTypes();\n    // #[end]\n\n};\n\n/**\n * 合并更新数据项\n *\n * @param {string|Object} expr 数据项路径\n * @param {Object} source 待合并的数据值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.merge = function (expr, source, option) {\n    option = option || {};\n\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== ExprType.ACCESSOR) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data merge: ' + exprRaw);\n    }\n\n    if (typeof this.get(expr) !== 'object') {\n        throw new Error('[SAN ERROR] Merge Expects a Target of Type \\'object\\'; got ' + typeof oldValue);\n    }\n\n    if (typeof source !== 'object') {\n        throw new Error('[SAN ERROR] Merge Expects a Source of Type \\'object\\'; got ' + typeof source);\n    }\n    // #[end]\n\n    for (var key in source) { // eslint-disable-line\n        this.set(\n            createAccessor(\n                expr.paths.concat(\n                    [\n                        {\n                            type: ExprType.STRING,\n                            value: key\n                        }\n                    ]\n                )\n            ),\n            source[key],\n            option\n        );\n    }\n};\n\n/**\n * 基于更新函数更新数据项\n *\n * @param {string|Object} expr 数据项路径\n * @param {Function} fn 数据处理函数\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.apply = function (expr, fn, option) {\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== ExprType.ACCESSOR) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data apply: ' + exprRaw);\n    }\n    // #[end]\n\n    var oldValue = this.get(expr);\n\n    // #[begin] error\n    if (typeof fn !== 'function') {\n        throw new Error(\n            '[SAN ERROR] Invalid Argument\\'s Type in Data apply: '\n            + 'Expected Function but got ' + typeof fn\n        );\n    }\n    // #[end]\n\n    this.set(expr, fn(oldValue), option);\n};\n\n/**\n * 数组数据项splice操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {Array} args splice 接受的参数列表，数组项与Array.prototype.splice的参数一致\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {Array} 新数组\n */\nData.prototype.splice = function (expr, args, option) {\n    option = option || {};\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== ExprType.ACCESSOR) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data splice: ' + exprRaw);\n    }\n    // #[end]\n\n    var target = this.get(expr);\n    var returnValue = [];\n\n    if (target instanceof Array) {\n        var index = args[0];\n        var len = target.length;\n        if (index > len) {\n            index = len;\n        }\n        else if (index < 0) {\n            index = len + index;\n            if (index < 0) {\n                index = 0;\n            }\n        }\n\n        var newArray = target.slice(0);\n        returnValue = newArray.splice.apply(newArray, args);\n        dataCache.clear();\n        this.raw = immutableSet(this.raw, expr.paths, newArray, this);\n\n        this.fire({\n            expr: expr,\n            type: DataChangeType.SPLICE,\n            index: index,\n            deleteCount: returnValue.length,\n            value: returnValue,\n            insertions: args.slice(2),\n            option: option\n        });\n    }\n\n    // #[begin] error\n    this.checkDataTypes();\n    // #[end]\n\n    return returnValue;\n};\n\n/**\n * 数组数据项push操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} item 要push的值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {number} 新数组的length属性\n */\nData.prototype.push = function (expr, item, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        this.splice(expr, [target.length, 0, item], option);\n        return target.length + 1;\n    }\n};\n\n/**\n * 数组数据项pop操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {*}\n */\nData.prototype.pop = function (expr, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        var len = target.length;\n        if (len) {\n            return this.splice(expr, [len - 1, 1], option)[0];\n        }\n    }\n};\n\n/**\n * 数组数据项shift操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {*}\n */\nData.prototype.shift = function (expr, option) {\n    return this.splice(expr, [0, 1], option)[0];\n};\n\n/**\n * 数组数据项unshift操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} item 要unshift的值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {number} 新数组的length属性\n */\nData.prototype.unshift = function (expr, item, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        this.splice(expr, [0, 0, item], option);\n        return target.length + 1;\n    }\n};\n\n/**\n * 数组数据项移除操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {number} index 要移除项的索引\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.removeAt = function (expr, index, option) {\n    this.splice(expr, [index, 1], option);\n};\n\n/**\n * 数组数据项移除操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} value 要移除的项\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.remove = function (expr, value, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        var len = target.length;\n        while (len--) {\n            if (target[len] === value) {\n                this.splice(expr, [len, 1], option);\n                break;\n            }\n        }\n    }\n};\n\n// exports = module.exports = Data;\n\n\n/**\n * @file 声明式事件的监听函数\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var evalArgs = require('../runtime/eval-args');\n// var findMethod = require('../runtime/find-method');\n// var Data = require('../runtime/data');\n\n/**\n * 声明式事件的监听函数\n *\n * @param {Object} eventBind 绑定信息对象\n * @param {boolean} isComponentEvent 是否组件自定义事件\n * @param {Data} data 数据环境\n * @param {Event} e 事件对象\n */\nfunction eventDeclarationListener(eventBind, isComponentEvent, data, e) {\n    var method = findMethod(this, eventBind.expr.name, data);\n\n    if (typeof method === 'function') {\n        var scope = new Data(\n            {$event: isComponentEvent ? e : e || window.event},\n            data\n        );\n        method.apply(this, evalArgs(eventBind.expr.args, scope, this));\n    }\n}\n\n// exports = module.exports = eventDeclarationListener;\n\n\n/**\n * @file 是否浏览器环境\n * @author errorrik(errorrik@gmail.com)\n */\n\nvar isBrowser = typeof window !== 'undefined';\n\n// exports = module.exports = isBrowser;\n\n\n/**\n * @file insertBefore 方法的兼容性封装\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * insertBefore 方法的兼容性封装\n *\n * @param {HTMLNode} targetEl 要插入的节点\n * @param {HTMLElement} parentEl 父元素\n * @param {HTMLElement?} beforeEl 在此元素之前插入\n */\nfunction insertBefore(targetEl, parentEl, beforeEl) {\n    if (parentEl) {\n        if (beforeEl) {\n            parentEl.insertBefore(targetEl, beforeEl);\n        }\n        else {\n            parentEl.appendChild(targetEl);\n        }\n    }\n}\n\n// exports = module.exports = insertBefore;\n\n\n/**\n * @file 判断元素是否不允许设置HTML\n * @author errorrik(errorrik@gmail.com)\n */\n\n// some html elements cannot set innerHTML in old ie\n// see: https://msdn.microsoft.com/en-us/library/ms533897(VS.85).aspx\n\n/**\n * 判断元素是否不允许设置HTML\n *\n * @param {HTMLElement} el 要判断的元素\n * @return {boolean}\n */\nfunction noSetHTML(el) {\n    return /^(col|colgroup|frameset|style|table|tbody|tfoot|thead|tr|select)$/i.test(el.tagName);\n}\n\n// exports = module.exports = noSetHTML;\n\n\n/**\n * @file  获取节点 stump 的 comment\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var noSetHTML = require('../browser/no-set-html');\n\n// #[begin] error\n/**\n * 获取节点 stump 的 comment\n *\n * @param {HTMLElement} el HTML元素\n */\nfunction warnSetHTML(el) {\n    // dont warn if not in browser runtime\n    if (!(typeof window !== 'undefined' && typeof navigator !== 'undefined' && window.document)) {\n        return;\n    }\n\n    // some html elements cannot set innerHTML in old ie\n    // see: https://msdn.microsoft.com/en-us/library/ms533897(VS.85).aspx\n    if (noSetHTML(el)) {\n        var message = '[SAN WARNING] set html for element \"' + el.tagName\n            + '\" may cause an error in old IE';\n        /* eslint-disable no-console */\n        if (typeof console === 'object' && console.warn) {\n            console.warn(message);\n        }\n        else {\n            throw new Error(message);\n        }\n        /* eslint-enable no-console */\n    }\n}\n// #[end]\n\n// exports = module.exports = warnSetHTML;\n\n\n/**\n * @file 判断是否结束桩\n * @author errorrik(errorrik@gmail.com)\n */\n\n// #[begin] reverse\n/**\n * 判断是否结束桩\n *\n * @param {HTMLElement|HTMLComment} target 要判断的元素\n * @param {string} type 桩类型\n * @return {boolean}\n */\nfunction isEndStump(target, type) {\n    return target.nodeType === 8 && target.data === '/s-' + type;\n}\n// #[end]\n\n// exports = module.exports = isEndStump;\n\n\n/**\n * @file 获取节点在组件树中的路径\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var NodeType = require('./node-type');\n\n// #[begin] reverse\n/**\n * 获取节点在组件树中的路径\n *\n * @param {Node} node 节点对象\n * @return {Array}\n */\nfunction getNodePath(node) {\n    var nodePaths = [];\n    var nodeParent = node;\n    while (nodeParent) {\n        switch (nodeParent.nodeType) {\n            case NodeType.ELEM:\n                nodePaths.unshift(nodeParent.tagName);\n                break;\n\n            case NodeType.IF:\n                nodePaths.unshift('if');\n                break;\n\n            case NodeType.FOR:\n                nodePaths.unshift('for[' + nodeParent.anode.directives['for'].raw + ']'); // eslint-disable-line dot-notation\n                break;\n\n            case NodeType.SLOT:\n                nodePaths.unshift('slot[' + (nodeParent.name || 'default') + ']');\n                break;\n\n            case NodeType.TPL:\n                nodePaths.unshift('template');\n                break;\n\n            case NodeType.CMPT:\n                nodePaths.unshift('component[' + (nodeParent.subTag || 'root') + ']');\n                break;\n\n            case NodeType.TEXT:\n                nodePaths.unshift('text');\n                break;\n        }\n\n        nodeParent = nodeParent.parent;\n    }\n\n    return nodePaths;\n}\n// #[end]\n\n// exports = module.exports = getNodePath;\n\n\n/**\n * @file text 节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var isBrowser = require('../browser/is-browser');\n// var removeEl = require('../browser/remove-el');\n// var insertBefore = require('../browser/insert-before');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var evalExpr = require('../runtime/eval-expr');\n// var NodeType = require('./node-type');\n// var warnSetHTML = require('./warn-set-html');\n// var isEndStump = require('./is-end-stump');\n// var getNodePath = require('./get-node-path');\n\n\n/**\n * text 节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction TextNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        var currentNode = reverseWalker.current;\n        if (currentNode) {\n            switch (currentNode.nodeType) {\n                case 8:\n                    if (currentNode.data === 's-text') {\n                        this.sel = currentNode;\n                        currentNode.data = this.id;\n                        reverseWalker.goNext();\n\n                        while (1) { // eslint-disable-line\n                            currentNode = reverseWalker.current;\n                            if (!currentNode) {\n                                throw new Error('[SAN REVERSE ERROR] Text end flag not found. \\nPaths: '\n                                    + getNodePath(this).join(' > '));\n                            }\n\n                            if (isEndStump(currentNode, 'text')) {\n                                this.el = currentNode;\n                                reverseWalker.goNext();\n                                currentNode.data = this.id;\n                                break;\n                            }\n\n                            reverseWalker.goNext();\n                        }\n                    }\n                    break;\n\n                case 3:\n                    reverseWalker.goNext();\n                    if (!this.aNode.textExpr.original) {\n                        this.el = currentNode;\n                    }\n                    break;\n            }\n        }\n        else {\n            this.el = document.createTextNode('');\n            insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n        }\n    }\n    // #[end]\n}\n\nTextNode.prototype.nodeType = NodeType.TEXT;\n\n/**\n * 将text attach到页面\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nTextNode.prototype.attach = function (parentEl, beforeEl) {\n    this.content = evalExpr(this.aNode.textExpr, this.scope, this.owner);\n\n    if (this.aNode.textExpr.original) {\n        this.sel = document.createComment(this.id);\n        insertBefore(this.sel, parentEl, beforeEl);\n\n        this.el = document.createComment(this.id);\n        insertBefore(this.el, parentEl, beforeEl);\n\n        var tempFlag = document.createElement('script');\n        parentEl.insertBefore(tempFlag, this.el);\n        tempFlag.insertAdjacentHTML('beforebegin', this.content);\n        parentEl.removeChild(tempFlag);\n    }\n    else {\n        this.el = document.createTextNode(this.content);\n        insertBefore(this.el, parentEl, beforeEl);\n    }\n};\n\n/**\n * 销毁 text 节点\n */\nTextNode.prototype.dispose = function () {\n    this._prev = null;\n    this.el = null;\n    this.sel = null;\n};\n\nvar textUpdateProp = isBrowser\n    && (typeof document.createTextNode('').textContent === 'string'\n        ? 'textContent'\n        : 'data');\n\n/**\n * 更新 text 节点的视图\n *\n * @param {Array} changes 数据变化信息\n */\nTextNode.prototype._update = function (changes) {\n    if (this.aNode.textExpr.value) {\n        return;\n    }\n\n    var len = changes ? changes.length : 0;\n    while (len--) {\n        if (changeExprCompare(changes[len].expr, this.aNode.textExpr, this.scope)) {\n            var text = evalExpr(this.aNode.textExpr, this.scope, this.owner);\n\n            if (text !== this.content) {\n                this.content = text;\n\n                if (this.aNode.textExpr.original) {\n                    var startRemoveEl = this.sel.nextSibling;\n                    var parentEl = this.el.parentNode;\n\n                    while (startRemoveEl !== this.el) {\n                        var removeTarget = startRemoveEl;\n                        startRemoveEl = startRemoveEl.nextSibling;\n                        removeEl(removeTarget);\n                    }\n\n                    // #[begin] error\n                    warnSetHTML(parentEl);\n                    // #[end]\n\n                    var tempFlag = document.createElement('script');\n                    parentEl.insertBefore(tempFlag, this.el);\n                    tempFlag.insertAdjacentHTML('beforebegin', text);\n                    parentEl.removeChild(tempFlag);\n                }\n                else {\n                    this.el[textUpdateProp] = text;\n                }\n            }\n\n            return;\n        }\n    }\n};\n\n// exports = module.exports = TextNode;\n\n\n/**\n * @file 计算两个对象 key 的并集\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 计算两个对象 key 的并集\n *\n * @param {Object} obj1 目标对象\n * @param {Object} obj2 源对象\n * @return {Array}\n */\nfunction unionKeys(obj1, obj2) {\n    var result = [];\n\n    for (var key in obj1) {\n        result.push(key);\n    }\n\n    for (var key in obj2) {\n        !obj1[key] && result.push(key);\n    }\n\n    return result;\n}\n\n// exports = module.exports = unionKeys;\n\n\n/**\n * @file 判断变更数组是否影响到数据引用摘要\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 判断变更数组是否影响到数据引用摘要\n *\n * @param {Array} changes 变更数组\n * @param {Object} dataRef 数据引用摘要\n * @return {boolean}\n */\nfunction changesIsInDataRef(changes, dataRef) {\n    for (var i = 0; i < changes.length; i++) {\n        var change = changes[i];\n\n        if (!change.overview) {\n            var paths = change.expr.paths;\n            change.overview = paths[0].value;\n\n            if (paths.length > 1) {\n                change.extOverview = paths[0].value + '.' + paths[1].value;\n                change.wildOverview = paths[0].value + '.*';\n            }\n        }\n\n        if (dataRef[change.overview]\n            || change.wildOverview && dataRef[change.wildOverview]\n            || change.extOverview && dataRef[change.extOverview]\n        ) {\n            return true;\n        }\n    }\n}\n\n// exports = module.exports = changesIsInDataRef;\n\n\n/**\n * @file 元素子节点遍历操作类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var removeEl = require('../browser/remove-el');\n\n// #[begin] reverse\n/**\n * 元素子节点遍历操作类\n *\n * @inner\n * @class\n * @param {HTMLElement} el 要遍历的元素\n */\nfunction DOMChildrenWalker(el) {\n    this.raw = [];\n    this.index = 0;\n    this.target = el;\n\n    var child = el.firstChild;\n    var next;\n    while (child) {\n        next = child.nextSibling;\n\n        switch (child.nodeType) {\n            case 3:\n                if (/^\\s*$/.test(child.data || child.textContent)) {\n                    removeEl(child);\n                }\n                else {\n                    this.raw.push(child);\n                }\n                break;\n\n            case 1:\n            case 8:\n                this.raw.push(child);\n        }\n\n        child = next;\n    }\n\n    this.current = this.raw[this.index];\n    this.next = this.raw[this.index + 1];\n}\n\n/**\n * 往下走一个元素\n */\nDOMChildrenWalker.prototype.goNext = function () {\n    this.current = this.raw[++this.index];\n    this.next = this.raw[this.index + 1];\n};\n// #[end]\n\n// exports = module.exports = DOMChildrenWalker;\n\n\n/**\n * @file 元素节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var unionKeys = require('../util/union-keys');\n// var removeEl = require('../browser/remove-el');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var changesIsInDataRef = require('../runtime/changes-is-in-data-ref');\n// var evalExpr = require('../runtime/eval-expr');\n// var LifeCycle = require('./life-cycle');\n// var NodeType = require('./node-type');\n// var reverseElementChildren = require('./reverse-element-children');\n// var isDataChangeByElement = require('./is-data-change-by-element');\n// var elementUpdateChildren = require('./element-update-children');\n// var elementOwnCreate = require('./element-own-create');\n// var elementOwnAttach = require('./element-own-attach');\n// var elementOwnDetach = require('./element-own-detach');\n// var elementOwnDispose = require('./element-own-dispose');\n// var elementOwnOnEl = require('./element-own-on-el');\n// var elementOwnToPhase = require('./element-own-to-phase');\n// var elementOwnAttached = require('./element-own-attached');\n// var elementDispose = require('./element-dispose');\n// var elementInitTagName = require('./element-init-tag-name');\n// var nodeSBindInit = require('./node-s-bind-init');\n// var nodeSBindUpdate = require('./node-s-bind-update');\n// var handleProp = require('./handle-prop');\n// var warnSetHTML = require('./warn-set-html');\n// var getNodePath = require('./get-node-path');\n\n/**\n * 元素节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction Element(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n    this._elFns = [];\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n\n    elementInitTagName(this);\n\n    nodeSBindInit(this, aNode.directives.bind);\n\n    this._toPhase('inited');\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        var currentNode = reverseWalker.current;\n\n        if (!currentNode) {\n            throw new Error('[SAN REVERSE ERROR] Element not found. \\nPaths: '\n                + getNodePath(this).join(' > '));\n        }\n\n        if (currentNode.nodeType !== 1) {\n            throw new Error('[SAN REVERSE ERROR] Element type not match, expect 1 but '\n                + currentNode.nodeType + '.\\nPaths: '\n                + getNodePath(this).join(' > '));\n        }\n\n        if (currentNode.tagName.toLowerCase() !== this.tagName) {\n            throw new Error('[SAN REVERSE ERROR] Element tagName not match, expect '\n                + this.tagName + ' but meat ' + currentNode.tagName.toLowerCase() + '.\\nPaths: '\n                + getNodePath(this).join(' > '));\n        }\n\n        this.el = currentNode;\n        reverseWalker.goNext();\n\n        reverseElementChildren(this);\n\n        this._attached();\n    }\n    // #[end]\n}\n\n\n\nElement.prototype.nodeType = NodeType.ELEM;\n\n\nElement.prototype.attach = elementOwnAttach;\nElement.prototype.detach = elementOwnDetach;\nElement.prototype.dispose = elementOwnDispose;\nElement.prototype._create = elementOwnCreate;\nElement.prototype._toPhase = elementOwnToPhase;\nElement.prototype._onEl = elementOwnOnEl;\n\nElement.prototype._doneLeave = function () {\n    if (this.leaveDispose) {\n        if (!this.lifeCycle.disposed) {\n            elementDispose(\n                this,\n                this.disposeNoDetach,\n                this.disposeNoTransition\n            );\n        }\n    }\n    else if (this.lifeCycle.attached) {\n        removeEl(this.el);\n        this._toPhase('detached');\n    }\n};\n\n/**\n * 视图更新\n *\n * @param {Array} changes 数据变化信息\n */\nElement.prototype._update = function (changes) {\n    if (!changesIsInDataRef(changes, this.aNode.hotspot.data)) {\n        return;\n    }\n\n    // update s-bind\n    var me = this;\n    nodeSBindUpdate(\n        this,\n        this.aNode.directives.bind,\n        changes,\n        function (name, value) {\n            if (name in me.aNode.hotspot.props) {\n                return;\n            }\n\n            getPropHandler(me.tagName, name).prop(me.el, value, name, me);\n        }\n    );\n\n    // update prop\n    var dynamicProps = this.aNode.hotspot.dynamicProps;\n    for (var i = 0, l = dynamicProps.length; i < l; i++) {\n        var prop = dynamicProps[i];\n\n        for (var j = 0, changeLen = changes.length; j < changeLen; j++) {\n            var change = changes[j];\n\n            if (!isDataChangeByElement(change, this, prop.name)\n                && (\n                    changeExprCompare(change.expr, prop.expr, this.scope)\n                    || prop.hintExpr && changeExprCompare(change.expr, prop.hintExpr, this.scope)\n                )\n            ) {\n                handleProp(this, evalExpr(prop.expr, this.scope, this.owner), prop);\n                break;\n            }\n        }\n    }\n\n    // update content\n    var htmlDirective = this.aNode.directives.html;\n    if (htmlDirective) {\n        var len = changes.length;\n        while (len--) {\n            if (changeExprCompare(changes[len].expr, htmlDirective.value, this.scope)) {\n                // #[begin] error\n                warnSetHTML(this.el);\n                // #[end]\n\n                this.el.innerHTML = evalExpr(htmlDirective.value, this.scope, this.owner);\n                return false;\n            }\n        }\n    }\n    else {\n        elementUpdateChildren(this, changes);\n    }\n};\n\n/**\n * 执行完成attached状态的行为\n */\nElement.prototype._attached = elementOwnAttached;\n\n// exports = module.exports = Element;\n\n\n/**\n * @file 销毁节点，清空节点上的无用成员\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 销毁节点\n *\n * @param {Object} node 节点对象\n */\nfunction nodeDispose(node) {\n    node.el = null;\n    node.sel = null;\n    node.owner = null;\n    node.scope = null;\n    node.aNode = null;\n    node.parent = null;\n    node.parentComponent = null;\n    node.children = null;\n\n    if (node._toPhase) {\n        node._toPhase('disposed');\n    }\n\n    if (node._ondisposed) {\n        node._ondisposed();\n    }\n}\n\n// exports = module.exports = nodeDispose;\n\n\n/**\n * @file 初始化节点的 s-bind 数据\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var evalExpr = require('../runtime/eval-expr');\n\n/**\n * 初始化节点的 s-bind 数据\n *\n * @param {Object} node 节点对象\n */\nfunction nodeSBindInit(node, sBind) {\n    if (sBind && node.scope) {\n        node._sbindData = evalExpr(sBind.value, node.scope, node.owner);\n        return true;\n    }\n}\n\n// exports = module.exports = nodeSBindInit;\n\n\n/**\n * @file 更新节点的 s-bind 数据\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var unionKeys = require('../util/union-keys');\n// var evalExpr = require('../runtime/eval-expr');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n\n/**\n * 初始化节点的 s-bind 数据\n *\n * @param {Object} node 节点对象\n */\nfunction nodeSBindUpdate(node, sBind, changes, updater) {\n    if (sBind) {\n        var len = changes.length;\n\n        while (len--) {\n            if (changeExprCompare(changes[len].expr, sBind.value, node.scope)) {\n                var newBindData = evalExpr(sBind.value, node.scope, node.owner);\n                var keys = unionKeys(newBindData, node._sbindData);\n\n                for (var i = 0, l = keys.length; i < l; i++) {\n                    var key = keys[i];\n                    var value = newBindData[key];\n\n                    if (value !== node._sbindData[key]) {\n                        updater(key, value);\n                    }\n                }\n\n                node._sbindData = newBindData;\n                break;\n            }\n\n        }\n    }\n}\n\n// exports = module.exports = nodeSBindUpdate;\n\n\n/**\n * @file 通过组件反解创建节点的工厂方法\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var NodeType = require('./node-type');\n// var TextNode = require('./text-node');\n// var Element = require('./element');\n// var SlotNode = require('./slot-node');\n// var ForNode = require('./for-node');\n// var IfNode = require('./if-node');\n// var TemplateNode = require('./template-node');\n\n// #[begin] reverse\n/**\n * 通过组件反解创建节点\n *\n * @param {ANode} aNode 抽象节点\n * @param {DOMChildrenWalker} reverseWalker 子元素遍历对象\n * @param {Node} parent 父亲节点\n * @param {Model=} scope 所属数据环境\n * @return {Node}\n */\nfunction createReverseNode(aNode, reverseWalker, parent, scope) {\n    var parentIsComponent = parent.nodeType === NodeType.CMPT;\n    var owner = parentIsComponent ? parent : (parent.childOwner || parent.owner);\n    scope = scope || (parentIsComponent ? parent.data : (parent.childScope || parent.scope));\n\n    if (aNode.textExpr) {\n        return new TextNode(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    if (aNode.directives['if']) { // eslint-disable-line dot-notation\n        return new IfNode(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    if (aNode.directives['for']) { // eslint-disable-line dot-notation\n        return new ForNode(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    switch (aNode.tagName) {\n        case 'slot':\n            return new SlotNode(aNode, owner, scope, parent, reverseWalker);\n\n        case 'template':\n            return new TemplateNode(aNode, owner, scope, parent, reverseWalker);\n\n        default:\n            var ComponentType = owner.getComponentType\n                ? owner.getComponentType(aNode)\n                : owner.components[aNode.tagName];\n\n            if (ComponentType) {\n                return new ComponentType({\n                    aNode: aNode,\n                    owner: owner,\n                    scope: scope,\n                    parent: parent,\n                    subTag: aNode.tagName,\n                    reverseWalker: reverseWalker\n                });\n            }\n    }\n\n    return new Element(aNode, owner, scope, parent, reverseWalker);\n}\n// #[end]\n\n// exports = module.exports = createReverseNode;\n\n\n/**\n * @file 销毁释放元素的子元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 销毁释放元素的子元素\n *\n * @param {Object} element 元素节点\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nfunction elementDisposeChildren(element, noDetach, noTransition) {\n    var children = element.children;\n    var len = children && children.length;\n    while (len--) {\n        children[len].dispose(noDetach, noTransition);\n    }\n}\n\n// exports = module.exports = elementDisposeChildren;\n\n\n/**\n * @file 更新元素的子元素视图\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 更新元素的子元素视图\n *\n * @param {Object} element 要更新的元素\n * @param {Array} changes 数据变化信息\n */\nfunction elementUpdateChildren(element, changes) {\n    for (var i = 0, l = element.children.length; i < l; i++) {\n        element.children[i]._update(changes);\n    }\n}\n\n// exports = module.exports = elementUpdateChildren;\n\n\n/**\n * @file 使元素节点到达相应的生命周期\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var LifeCycle = require('./life-cycle');\n\n/**\n * 使元素节点到达相应的生命周期\n *\n * @param {string} name 生命周期名称\n */\nfunction elementOwnToPhase(name) {\n    this.lifeCycle = LifeCycle[name] || this.lifeCycle;\n}\n\n// exports = module.exports = elementOwnToPhase;\n\n\n/**\n * @file 创建节点的工厂方法\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var NodeType = require('./node-type');\n// var TextNode = require('./text-node');\n// var Element = require('./element');\n// var SlotNode = require('./slot-node');\n// var ForNode = require('./for-node');\n// var IfNode = require('./if-node');\n// var TemplateNode = require('./template-node');\n\n\n/**\n * 创建节点\n *\n * @param {ANode} aNode 抽象节点\n * @param {Node} parent 父亲节点\n * @param {Model=} scope 所属数据环境\n * @return {Node}\n */\nfunction createNode(aNode, parent, scope) {\n    var parentIsComponent = parent.nodeType === NodeType.CMPT;\n    var owner = parentIsComponent ? parent : (parent.childOwner || parent.owner);\n    scope = scope || (parentIsComponent ? parent.data : (parent.childScope || parent.scope));\n\n\n    if (aNode.textExpr) {\n        return new TextNode(aNode, owner, scope, parent);\n    }\n\n    if (aNode.directives['if']) { // eslint-disable-line dot-notation\n        return new IfNode(aNode, owner, scope, parent);\n    }\n\n    if (aNode.directives['for']) { // eslint-disable-line dot-notation\n        return new ForNode(aNode, owner, scope, parent);\n    }\n\n    switch (aNode.tagName) {\n        case 'slot':\n            return new SlotNode(aNode, owner, scope, parent);\n\n        case 'template':\n            return new TemplateNode(aNode, owner, scope, parent);\n\n        default:\n            var ComponentType = owner.getComponentType\n                ? owner.getComponentType(aNode)\n                : owner.components[aNode.tagName];\n\n            if (ComponentType) {\n                return new ComponentType({\n                    aNode: aNode,\n                    owner: owner,\n                    scope: scope,\n                    parent: parent,\n                    subTag: aNode.tagName\n                });\n            }\n    }\n\n    return new Element(aNode, owner, scope, parent);\n}\n\n// exports = module.exports = createNode;\n\n\n/**\n * @file 生成子元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var createNode = require('./create-node');\n\n/**\n * 生成子元素\n *\n * @param {Element} element 元素\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction genElementChildren(element, parentEl, beforeEl) {\n    parentEl = parentEl || element.el;\n\n    var aNodeChildren = element.aNode.children;\n    for (var i = 0; i < aNodeChildren.length; i++) {\n        var child = createNode(aNodeChildren[i], element);\n        element.children.push(child);\n        child.attach(parentEl, beforeEl);\n    }\n}\n\n// exports = module.exports = genElementChildren;\n\n\n/**\n * @file 将没有 root 只有 children 的元素 attach 到页面\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var insertBefore = require('../browser/insert-before');\n// var genElementChildren = require('./gen-element-children');\n\n\n/**\n * 将没有 root 只有 children 的元素 attach 到页面\n * 主要用于 slot 和 template\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction nodeOwnOnlyChildrenAttach(parentEl, beforeEl) {\n    this.sel = document.createComment(this.id);\n    insertBefore(this.sel, parentEl, beforeEl);\n\n    genElementChildren(this, parentEl, beforeEl);\n\n    this.el = document.createComment(this.id);\n    insertBefore(this.el, parentEl, beforeEl);\n\n    this._toPhase('attached');\n}\n\n// exports = module.exports = nodeOwnOnlyChildrenAttach;\n\n\n/**\n * @file slot 节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var createANode = require('../parser/create-a-node');\n// var ExprType = require('../parser/expr-type');\n// var createAccessor = require('../parser/create-accessor');\n// var evalExpr = require('../runtime/eval-expr');\n// var Data = require('../runtime/data');\n// var DataChangeType = require('../runtime/data-change-type');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var insertBefore = require('../browser/insert-before');\n// var NodeType = require('./node-type');\n// var LifeCycle = require('./life-cycle');\n// var getANodeProp = require('./get-a-node-prop');\n// var nodeDispose = require('./node-dispose');\n// var nodeSBindInit = require('./node-s-bind-init');\n// var nodeSBindUpdate = require('./node-s-bind-update');\n// var createReverseNode = require('./create-reverse-node');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var elementUpdateChildren = require('./element-update-children');\n// var elementOwnToPhase = require('./element-own-to-phase');\n// var nodeOwnOnlyChildrenAttach = require('./node-own-only-children-attach');\n\n\n/**\n * slot 节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction SlotNode(aNode, owner, scope, parent, reverseWalker) {\n    var realANode = createANode();\n    this.aNode = realANode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n\n    // calc slot name\n    this.nameBind = getANodeProp(aNode, 'name');\n    if (this.nameBind) {\n        this.isNamed = true;\n        this.name = evalExpr(this.nameBind.expr, this.scope, this.owner);\n    }\n\n    // calc aNode children\n    var givenSlots = owner.givenSlots;\n    var givenChildren;\n    if (givenSlots) {\n        givenChildren = this.isNamed ? givenSlots.named[this.name] : givenSlots.noname;\n    }\n\n    if (givenChildren) {\n        this.isInserted = true;\n    }\n\n    realANode.children = givenChildren || aNode.children.slice(0);\n\n    var me = this;\n\n    // calc scoped slot vars\n    realANode.vars = aNode.vars;\n    realANode.directives = aNode.directives;\n\n    var initData;\n    if (nodeSBindInit(this, aNode.directives.bind)) {\n        initData = extend({}, me._sbindData);\n    }\n\n    if (realANode.vars) {\n        initData = initData || {};\n        each(realANode.vars, function (varItem) {\n            initData[varItem.name] = evalExpr(varItem.expr, scope, owner);\n        });\n    }\n\n    // child owner & child scope\n    if (this.isInserted) {\n        this.childOwner = owner.owner;\n        this.childScope = owner.scope;\n    }\n\n    if (initData) {\n        this.isScoped = true;\n        this.childScope = new Data(initData, this.childScope || this.scope);\n    }\n\n\n    owner.slotChildren.push(this);\n\n    // #[begin] reverse\n    if (reverseWalker) {\n\n        this.sel = document.createComment(this.id);\n        insertBefore(this.sel, reverseWalker.target, reverseWalker.current);\n\n        each(this.aNode.children, function (aNodeChild) {\n            me.children.push(createReverseNode(aNodeChild, reverseWalker, me));\n        });\n\n        this.el = document.createComment(this.id);\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n\n        this._toPhase('attached');\n    }\n    // #[end]\n}\n\nSlotNode.prototype.nodeType = NodeType.SLOT;\n\n/**\n * 销毁释放 slot\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nSlotNode.prototype.dispose = function (noDetach, noTransition) {\n    this.childOwner = null;\n    this.childScope = null;\n\n    elementDisposeChildren(this, noDetach, noTransition);\n    nodeDispose(this);\n};\n\nSlotNode.prototype.attach = nodeOwnOnlyChildrenAttach;\nSlotNode.prototype._toPhase = elementOwnToPhase;\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n * @param {boolean=} isFromOuter 变化信息是否来源于父组件之外的组件\n * @return {boolean}\n */\nSlotNode.prototype._update = function (changes, isFromOuter) {\n    var me = this;\n\n    if (this.nameBind && evalExpr(this.nameBind.expr, this.scope, this.owner) !== me.name) {\n        this.owner._notifyNeedReload();\n        return false;\n    }\n\n    if (isFromOuter) {\n        if (this.isInserted) {\n            elementUpdateChildren(this, changes);\n        }\n    }\n    else {\n        if (this.isScoped) {\n            var varKeys = {};\n            each(this.aNode.vars, function (varItem) {\n                varKeys[varItem.name] = 1;\n                me.childScope.set(varItem.name, evalExpr(varItem.expr, me.scope, me.owner));\n            });\n\n            var scopedChanges = [];\n\n            nodeSBindUpdate(\n                this,\n                this.aNode.directives.bind,\n                changes,\n                function (name, value) {\n                    if (varKeys[name]) {\n                        return;\n                    }\n\n                    me.childScope.set(name, value);\n                    scopedChanges.push({\n                        type: DataChangeType.SET,\n                        expr: createAccessor([\n                            { type: ExprType.STRING, value: name }\n                        ]),\n                        value: value,\n                        option: {}\n                    });\n                }\n            );\n\n            each(changes, function (change) {\n                if (!me.isInserted) {\n                    scopedChanges.push(change);\n                }\n\n                each(me.aNode.vars, function (varItem) {\n                    var name = varItem.name;\n                    var relation = changeExprCompare(change.expr, varItem.expr, me.scope);\n\n                    if (relation < 1) {\n                        return;\n                    }\n\n                    if (change.type !== DataChangeType.SPLICE) {\n                        scopedChanges.push({\n                            type: DataChangeType.SET,\n                            expr: createAccessor([\n                                {type: ExprType.STRING, value: name}\n                            ]),\n                            value: me.childScope.get(name),\n                            option: change.option\n                        });\n                    }\n                    else if (relation === 2) {\n                        scopedChanges.push({\n                            expr: createAccessor([\n                                {type: ExprType.STRING, value: name}\n                            ]),\n                            type: DataChangeType.SPLICE,\n                            index: change.index,\n                            deleteCount: change.deleteCount,\n                            value: change.value,\n                            insertions: change.insertions,\n                            option: change.option\n                        });\n                    }\n                });\n            });\n\n            elementUpdateChildren(this, scopedChanges);\n        }\n        else if (!this.isInserted) {\n            elementUpdateChildren(this, changes);\n        }\n    }\n};\n\n// exports = module.exports = SlotNode;\n\n\n/**\n * @file 复制指令集合对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 复制指令集合对象\n *\n * @param {Object} source 要复制的指令集合对象\n * @param {Object=} excludes 需要排除的key集合\n * @return {Object}\n */\nfunction cloneDirectives(source, excludes) {\n    var result = {};\n    excludes = excludes || {};\n\n    for (var key in source) {\n        if (!excludes[key]) {\n            result[key] = source[key];\n        }\n    }\n\n    return result;\n}\n\n// exports = module.exports = cloneDirectives;\n\n\n/**\n * @file 简单执行销毁节点的行为\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var removeEl = require('../browser/remove-el');\n// var nodeDispose = require('./node-dispose');\n// var elementDisposeChildren = require('./element-dispose-children');\n\n/**\n * 简单执行销毁节点的行为\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n */\nfunction nodeOwnSimpleDispose(noDetach) {\n    elementDisposeChildren(this, noDetach, 1);\n\n    if (!noDetach) {\n        removeEl(this.el);\n    }\n\n    nodeDispose(this);\n}\n\n// exports = module.exports = nodeOwnSimpleDispose;\n\n\n/**\n * @file 创建节点对应的 stump comment 元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n\n/**\n * 创建节点对应的 stump comment 主元素\n */\nfunction nodeOwnCreateStump() {\n    this.el = this.el || document.createComment(this.id);\n}\n\n// exports = module.exports = nodeOwnCreateStump;\n\n\n/**\n * @file for 指令节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var inherits = require('../util/inherits');\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var createANode = require('../parser/create-a-node');\n// var ExprType = require('../parser/expr-type');\n// var parseExpr = require('../parser/parse-expr');\n// var createAccessor = require('../parser/create-accessor');\n// var cloneDirectives = require('../parser/clone-directives');\n// var Data = require('../runtime/data');\n// var DataChangeType = require('../runtime/data-change-type');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var evalExpr = require('../runtime/eval-expr');\n// var changesIsInDataRef = require('../runtime/changes-is-in-data-ref');\n// var removeEl = require('../browser/remove-el');\n// var insertBefore = require('../browser/insert-before');\n// var LifeCycle = require('./life-cycle');\n// var NodeType = require('./node-type');\n// var createNode = require('./create-node');\n// var createReverseNode = require('./create-reverse-node');\n// var nodeOwnSimpleDispose = require('./node-own-simple-dispose');\n// var nodeOwnCreateStump = require('./node-own-create-stump');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var dataCache = require('../runtime/data-cache');\n\n\n/**\n * 循环项的数据容器类\n *\n * @inner\n * @class\n * @param {Object} forElement for元素对象\n * @param {*} item 当前项的数据\n * @param {number} index 当前项的索引\n */\nfunction ForItemData(forElement, item, index) {\n    this.id = guid();\n    this.parent = forElement.scope;\n    this.raw = {};\n    this.listeners = [];\n\n    this.directive = forElement.aNode.directives['for']; // eslint-disable-line dot-notation\n    this.raw[this.directive.item.raw] = item;\n    this.raw[this.directive.index.raw] = index;\n}\n\n/**\n * 将数据操作的表达式，转换成为对parent数据操作的表达式\n * 主要是对item和index进行处理\n *\n * @param {Object} expr 表达式\n * @return {Object}\n */\nForItemData.prototype.exprResolve = function (expr) {\n    var directive = this.directive;\n    var me = this;\n\n    function resolveItem(expr) {\n        if (expr.type === ExprType.ACCESSOR\n            && expr.paths[0].value === directive.item.paths[0].value\n        ) {\n            return createAccessor(\n                directive.value.paths.concat(\n                    {\n                        type: ExprType.NUMBER,\n                        value: me.get(directive.index)\n                    },\n                    expr.paths.slice(1)\n                )\n            );\n        }\n\n        return expr;\n    }\n\n    expr = resolveItem(expr);\n\n    var resolvedPaths = [];\n\n    each(expr.paths, function (item) {\n        resolvedPaths.push(\n            item.type === ExprType.ACCESSOR\n                && item.paths[0].value === directive.index.paths[0].value\n            ? {\n                type: ExprType.NUMBER,\n                value: me.get(directive.index)\n            }\n            : resolveItem(item)\n        );\n    });\n\n    return createAccessor(resolvedPaths);\n};\n\n// 代理数据操作方法\ninherits(ForItemData, Data);\neach(\n    ['set', 'remove', 'unshift', 'shift', 'push', 'pop', 'splice'],\n    function (method) {\n        ForItemData.prototype['_' + method] = Data.prototype[method];\n        ForItemData.prototype[method] = function (expr) {\n            expr = this.exprResolve(parseExpr(expr));\n            dataCache.clear();\n            this.parent[method].apply(\n                this.parent,\n                [expr].concat(Array.prototype.slice.call(arguments, 1))\n            );\n        };\n    }\n);\n\n/**\n * 创建 for 指令元素的子元素\n *\n * @inner\n * @param {ForDirective} forElement for 指令元素对象\n * @param {*} item 子元素对应数据\n * @param {number} index 子元素对应序号\n * @return {Element}\n */\nfunction createForDirectiveChild(forElement, item, index) {\n    var itemScope = new ForItemData(forElement, item, index);\n    return createNode(forElement.itemANode, forElement, itemScope);\n}\n\n/**\n * for 指令节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction ForNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n    this.children = [];\n\n    this.itemANode = createANode({\n        children: aNode.children,\n        props: aNode.props,\n        events: aNode.events,\n        tagName: aNode.tagName,\n        vars: aNode.vars,\n        hotspot: aNode.hotspot,\n        directives: cloneDirectives(aNode.directives, {\n            'for': 1\n        })\n    });\n\n    this.param = aNode.directives['for']; // eslint-disable-line dot-notation\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        var me = this;\n        this.listData = evalExpr(this.param.value, this.scope, this.owner);\n        eachForData(\n            this,\n            function (item, i) {\n                var itemScope = new ForItemData(me, item, i);\n                var child = createReverseNode(me.itemANode, reverseWalker, me, itemScope);\n                me.children.push(child);\n            }\n        );\n\n        this._create();\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n    }\n    // #[end]\n}\n\n\nForNode.prototype.nodeType = NodeType.FOR;\nForNode.prototype._create = nodeOwnCreateStump;\nForNode.prototype.dispose = nodeOwnSimpleDispose;\n\n/**\n * 对 for 节点数据进行遍历\n *\n * @inner\n * @param {ForNode} forNode for节点对象\n * @param {Function} fn 数据遍历函数\n */\nfunction eachForData(forNode, fn) {\n    var listData = forNode.listData;\n\n    if (listData instanceof Array) {\n        for (var i = 0; i < listData.length; i++) {\n            fn(listData[i], i);\n        }\n    }\n    else if (listData && typeof listData === 'object') {\n        for (var i in listData) {\n            if (listData.hasOwnProperty(i)) {\n                (listData[i] != null) && fn(listData[i], i);\n            }\n        }\n    }\n}\n\n/**\n * 将元素attach到页面的行为\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nForNode.prototype.attach = function (parentEl, beforeEl) {\n    this._create();\n    insertBefore(this.el, parentEl, beforeEl);\n    this.listData = evalExpr(this.param.value, this.scope, this.owner);\n\n    this._createChildren();\n};\n\n/**\n * 创建子元素\n */\nForNode.prototype._createChildren = function () {\n    var me = this;\n    var parentEl = me.el.parentNode;\n\n    eachForData(this, function (value, i) {\n        var child = createForDirectiveChild(me, value, i);\n        me.children.push(child);\n        child.attach(parentEl, me.el);\n    });\n};\n\n/**\n * 将元素从页面上移除的行为\n */\nForNode.prototype.detach = function () {\n    if (this.lifeCycle.attached) {\n        elementDisposeChildren(this);\n        this.children = [];\n        removeEl(this.el);\n        this.lifeCycle = LifeCycle.detached;\n    }\n};\n\n/* eslint-disable fecs-max-statements */\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n */\nForNode.prototype._update = function (changes) {\n    var listData = evalExpr(this.param.value, this.scope, this.owner);\n    var oldIsArr = this.listData instanceof Array;\n    var newIsArr = listData instanceof Array;\n\n    if (this.children.length) {\n        if (!listData || newIsArr && listData.length === 0) {\n            this._disposeChildren();\n            this.listData = listData;\n            return;\n        }\n\n        // 就是这么暴力\n        // 不推荐使用for遍历object，用的话自己负责\n        if (oldIsArr !== newIsArr || !newIsArr) {\n            this.listData = listData;\n            var me = this;\n            this._disposeChildren(null, function () {\n                me._createChildren();\n            });\n            return;\n        }\n\n        this._updateArray(changes, listData);\n        this.listData = listData;\n    }\n    else {\n        this.listData = listData;\n        this._createChildren();\n    }\n};\n\n/**\n * 销毁释放子元素\n *\n * @param {Array?} children 要销毁的子元素，默认为自身的children\n * @param {Function} callback 释放完成的回调函数\n */\nForNode.prototype._disposeChildren = function (children, callback) {\n    var parentEl = this.el.parentNode;\n    var parentFirstChild = parentEl.firstChild;\n    var parentLastChild = parentEl.lastChild;\n\n    var len = this.children.length;\n\n    var violentClear = !this.aNode.directives.transition\n        && !children\n        // 是否 parent 的唯一 child\n        && (len\n                && parentFirstChild === this.children[0].el\n                && (parentLastChild === this.el\n                    || parentLastChild === this.children[len - 1].el)\n            || len === 0\n                && parentFirstChild === this.el\n                && parentLastChild === this.el\n        );\n\n    if (!children) {\n        children = this.children;\n        this.children = [];\n    }\n\n\n    var me = this;\n    var disposedChildCount = 0;\n    len = children.length;\n    if (!len) {\n        childDisposed();\n    }\n    else {\n        for (var i = 0; i < len; i++) {\n            var disposeChild = children[i];\n            if (disposeChild) {\n                disposeChild._ondisposed = childDisposed;\n                disposeChild.dispose(violentClear, violentClear);\n            }\n            else {\n                childDisposed();\n            }\n        }\n    }\n\n    function childDisposed() {\n        disposedChildCount++;\n        if (disposedChildCount >= len) {\n            if (violentClear) {\n                // cloneNode + replaceChild is faster\n                // parentEl.innerHTML = '';\n                var replaceNode = parentEl.cloneNode(false);\n                parentEl.parentNode.replaceChild(replaceNode, parentEl);\n                me.el = document.createComment(me.id);\n                replaceNode.appendChild(me.el);\n            }\n\n            callback && callback();\n        }\n    }\n};\n\n/**\n * 数组类型的视图更新\n *\n * @param {Array} changes 数据变化信息\n * @param {Array} newList 新数组数据\n */\nForNode.prototype._updateArray = function (changes, newList) {\n    var oldChildrenLen = this.children.length;\n    var childrenChanges = new Array(oldChildrenLen);\n\n    function pushToChildrenChanges(change) {\n        for (var i = 0, l = childrenChanges.length; i < l; i++) {\n            (childrenChanges[i] = childrenChanges[i] || []).push(change);\n        }\n    }\n\n    var disposeChildren = [];\n\n    // 控制列表是否整体更新的变量\n    var isChildrenRebuild;\n\n    // var newList = evalExpr(this.param.value, this.scope, this.owner) || [];\n    var newLen = newList.length;\n\n    /* eslint-disable no-redeclare */\n    for (var cIndex = 0; cIndex < changes.length; cIndex++) {\n        var change = changes[cIndex];\n        var relation = changeExprCompare(change.expr, this.param.value, this.scope);\n\n        if (!relation) {\n            // 无关时，直接传递给子元素更新，列表本身不需要动\n            pushToChildrenChanges(change);\n        }\n        else if (relation > 2) {\n            // 变更表达式是list绑定表达式的子项\n            // 只需要对相应的子项进行更新\n            var changePaths = change.expr.paths;\n            var forLen = this.param.value.paths.length;\n            var changeIndex = +evalExpr(changePaths[forLen], this.scope, this.owner);\n\n            if (isNaN(changeIndex)) {\n                pushToChildrenChanges(change);\n            }\n            else {\n                change = {\n                    type: change.type,\n                    expr: createAccessor(\n                        this.param.item.paths.concat(changePaths.slice(forLen + 1))\n                    ),\n                    value: change.value,\n                    index: change.index,\n                    deleteCount: change.deleteCount,\n                    insertions: change.insertions,\n                    option: change.option\n                };\n\n                (childrenChanges[changeIndex] = childrenChanges[changeIndex] || [])\n                    .push(change);\n\n                if (this.children[changeIndex]) {\n                    if (change.type === DataChangeType.SPLICE) {\n                        this.children[changeIndex].scope._splice(\n                            change.expr,\n                            [].concat(change.index, change.deleteCount, change.insertions),\n                            { silent: 1 }\n                        );\n                    }\n                    else {\n                        this.children[changeIndex].scope._set(\n                            change.expr,\n                            change.value,\n                            { silent: 1 }\n                        );\n                    }\n                }\n            }\n        }\n        else if (change.type !== DataChangeType.SPLICE) {\n            // 变更表达式是list绑定表达式本身或母项的重新设值\n            // 此时需要更新整个列表\n\n            var getItemKey = this.aNode.hotspot.getForKey;\n            if (getItemKey && newLen && oldChildrenLen) {\n                // 如果设置了trackBy，用lcs更新。开始 ====\n                var lcsFlags = [];\n                var newListKeys = [];\n                var oldListKeys = [];\n\n                each(newList, function (item) {\n                    newListKeys.push(getItemKey(item));\n                });\n\n                each(this.listData, function (item) {\n                    oldListKeys.push(getItemKey(item));\n                });\n\n\n                var newIndex;\n                var oldIndex;\n                for (oldIndex = 0; oldIndex <= oldChildrenLen; oldIndex++) {\n                    lcsFlags.push([]);\n\n                    for (newIndex = 0; newIndex <= newLen; newIndex++) {\n                        var lcsFlag = 0;\n                        if (newIndex && oldIndex) {\n                            lcsFlag = newListKeys[newIndex - 1] === oldListKeys[oldIndex - 1]\n                                ? lcsFlags[oldIndex - 1][newIndex - 1] + 1\n                                : Math.max(lcsFlags[oldIndex - 1][newIndex], lcsFlags[oldIndex][newIndex - 1]);\n                        }\n\n                        lcsFlags[oldIndex].push(lcsFlag);\n                    }\n                }\n\n                newIndex--;\n                oldIndex--;\n                while (1) {\n                    if (oldIndex && newIndex && oldListKeys[oldIndex - 1] === newListKeys[newIndex - 1]) {\n                        newIndex--;\n                        oldIndex--;\n\n                        // 如果数据本身引用发生变化，设置变更\n                        if (this.listData[oldIndex] !== newList[newIndex]) {\n                            (childrenChanges[oldIndex] = childrenChanges[oldIndex] || []).push({\n                                type: DataChangeType.SET,\n                                option: change.option,\n                                expr: createAccessor(this.param.item.paths.slice(0)),\n                                value: newList[newIndex]\n                            });\n                        }\n\n                        // 对list更上级数据的直接设置\n                        if (relation < 2) {\n                            (childrenChanges[oldIndex] = childrenChanges[oldIndex] || []).push(change);\n                        }\n                    }\n                    else if (newIndex && (!oldIndex || lcsFlags[oldIndex][newIndex - 1] >= lcsFlags[oldIndex - 1][newIndex])) {\n                        newIndex--;\n                        childrenChanges.splice(oldIndex, 0, 0);\n                        this.children.splice(oldIndex, 0, 0);\n                    }\n                    else if (oldIndex && (!newIndex || lcsFlags[oldIndex][newIndex - 1] < lcsFlags[oldIndex - 1][newIndex])) {\n                        oldIndex--;\n                        disposeChildren.push(this.children[oldIndex]);\n                        childrenChanges.splice(oldIndex, 1);\n                        this.children.splice(oldIndex, 1);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                // 如果设置了trackBy，用lcs更新。结束 ====\n            }\n            else {\n                // 老的比新的多的部分，标记需要dispose\n                if (oldChildrenLen > newLen) {\n                    disposeChildren = disposeChildren.concat(this.children.slice(newLen));\n                    childrenChanges = childrenChanges.slice(0, newLen);\n                    this.children = this.children.slice(0, newLen);\n                }\n\n                // 剩下的部分整项变更\n                for (var i = 0; i < newLen; i++) {\n                    (childrenChanges[i] = childrenChanges[i] || []).push({\n                        type: DataChangeType.SET,\n                        option: change.option,\n                        expr: createAccessor(this.param.item.paths.slice(0)),\n                        value: newList[i]\n                    });\n\n                    // 对list更上级数据的直接设置\n                    if (relation < 2) {\n                        childrenChanges[i].push(change);\n                    }\n\n                    if (this.children[i]) {\n                        this.children[i].scope._set(\n                            this.param.item,\n                            newList[i],\n                            {silent: 1}\n                        );\n                    }\n                    else {\n                        this.children[i] = 0;\n                    }\n                }\n            }\n\n            isChildrenRebuild = 1;\n        }\n        else if (relation === 2 && change.type === DataChangeType.SPLICE && !isChildrenRebuild) {\n            // 变更表达式是list绑定表达式本身数组的splice操作\n            // 此时需要删除部分项，创建部分项\n            var changeStart = change.index;\n            var deleteCount = change.deleteCount;\n            var insertionsLen = change.insertions.length;\n            var newCount = insertionsLen - deleteCount;\n\n            if (newCount) {\n                var indexChange = {\n                    type: DataChangeType.SET,\n                    option: change.option,\n                    expr: this.param.index\n                };\n\n                for (var i = changeStart + deleteCount; i < this.children.length; i++) {\n                    (childrenChanges[i] = childrenChanges[i] || []).push(indexChange);\n                    this.children[i] && this.children[i].scope._set(\n                        indexChange.expr,\n                        i - deleteCount + insertionsLen,\n                        {silent: 1}\n                    );\n                }\n            }\n\n            var deleteLen = deleteCount;\n            while (deleteLen--) {\n                if (deleteLen < insertionsLen) {\n                    var i = changeStart + deleteLen;\n                    // update\n                    (childrenChanges[i] = childrenChanges[i] || []).push({\n                        type: DataChangeType.SET,\n                        option: change.option,\n                        expr: createAccessor(this.param.item.paths.slice(0)),\n                        value: change.insertions[deleteLen]\n                    });\n                    if (this.children[i]) {\n                        this.children[i].scope._set(\n                            this.param.item,\n                            change.insertions[deleteLen],\n                            {silent: 1}\n                        );\n                    }\n                }\n            }\n\n            if (newCount < 0) {\n                disposeChildren = disposeChildren.concat(this.children.splice(changeStart + insertionsLen, -newCount));\n                childrenChanges.splice(changeStart + insertionsLen, -newCount);\n            }\n            else if (newCount > 0) {\n                var spliceArgs = [changeStart + deleteCount, 0].concat(new Array(newCount));\n                this.children.splice.apply(this.children, spliceArgs);\n                childrenChanges.splice.apply(childrenChanges, spliceArgs);\n            }\n        }\n    }\n\n    var newChildrenLen = this.children.length;\n\n    // 标记 length 是否发生变化\n    if (newChildrenLen !== oldChildrenLen && this.param.value.paths) {\n        var lengthChange = {\n            type: DataChangeType.SET,\n            option: {},\n            expr: createAccessor(\n                this.param.value.paths.concat({\n                    type: ExprType.STRING,\n                    value: 'length'\n                })\n            )\n        };\n\n        if (changesIsInDataRef([lengthChange], this.aNode.hotspot.data)) {\n            pushToChildrenChanges(lengthChange);\n        }\n    }\n\n    // 执行视图更新，先删再刷新\n    this._doCreateAndUpdate = doCreateAndUpdate;\n\n    var me = this;\n    if (disposeChildren.length === 0) {\n        doCreateAndUpdate();\n    }\n    else {\n        this._disposeChildren(disposeChildren, function () {\n            if (doCreateAndUpdate === me._doCreateAndUpdate) {\n                doCreateAndUpdate();\n            }\n        });\n    }\n\n    function doCreateAndUpdate() {\n        me._doCreateAndUpdate = null;\n\n        var beforeEl = me.el;\n        var parentEl = beforeEl.parentNode;\n\n        // 对相应的项进行更新\n        // 如果不attached则直接创建，如果存在则调用更新函数\n        var j = -1;\n        for (var i = 0; i < newChildrenLen; i++) {\n            var child = me.children[i];\n\n            if (child) {\n                childrenChanges[i] && child._update(childrenChanges[i]);\n            }\n            else {\n                if (j < i) {\n                    j = i + 1;\n                    beforeEl = null;\n                    while (j < newChildrenLen) {\n                        var nextChild = me.children[j];\n                        if (nextChild) {\n                            beforeEl = nextChild.sel || nextChild.el;\n                            break;\n                        }\n                        j++;\n                    }\n                }\n\n                me.children[i] = createForDirectiveChild(me, newList[i], i);\n                me.children[i].attach(parentEl, beforeEl || me.el);\n            }\n        }\n    }\n};\n\n\n// exports = module.exports = ForNode;\n\n\n/**\n * @file 清洗条件 aNode\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var createANode = require('../parser/create-a-node');\n// var cloneDirectives = require('../parser/clone-directives');\n\n\n/**\n * 清洗条件 aNode，返回纯净无条件指令的 aNode\n *\n * @param {ANode} aNode 条件节点对象\n * @return {ANode}\n */\nfunction rinseCondANode(aNode) {\n    var clearANode = createANode({\n        children: aNode.children,\n        props: aNode.props,\n        events: aNode.events,\n        tagName: aNode.tagName,\n        vars: aNode.vars,\n        hotspot: aNode.hotspot,\n        directives: cloneDirectives(aNode.directives, {\n            'if': 1,\n            'else': 1,\n            'elif': 1\n        })\n    });\n\n    return clearANode;\n}\n\n// exports = module.exports = rinseCondANode;\n\n\n/**\n * @file if 指令节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var insertBefore = require('../browser/insert-before');\n// var evalExpr = require('../runtime/eval-expr');\n// var NodeType = require('./node-type');\n// var rinseCondANode = require('./rinse-cond-anode');\n// var createNode = require('./create-node');\n// var createReverseNode = require('./create-reverse-node');\n// var nodeOwnCreateStump = require('./node-own-create-stump');\n// var elementUpdateChildren = require('./element-update-children');\n// var nodeOwnSimpleDispose = require('./node-own-simple-dispose');\n\n/**\n * if 指令节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction IfNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n    this.children = [];\n\n    this.cond = this.aNode.directives['if'].value; // eslint-disable-line dot-notation\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        if (evalExpr(this.cond, this.scope, this.owner)) {\n            this.elseIndex = -1;\n            this.children[0] = createReverseNode(\n                rinseCondANode(aNode),\n                reverseWalker,\n                this\n            );\n        }\n        else {\n            var me = this;\n            each(aNode.elses, function (elseANode, index) {\n                var elif = elseANode.directives.elif;\n\n                if (!elif || elif && evalExpr(elif.value, me.scope, me.owner)) {\n                    me.elseIndex = index;\n                    me.children[0] = createReverseNode(\n                        rinseCondANode(elseANode),\n                        reverseWalker,\n                        me\n                    );\n                    return false;\n                }\n            });\n        }\n\n        this._create();\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n    }\n    // #[end]\n}\n\nIfNode.prototype.nodeType = NodeType.IF;\n\nIfNode.prototype._create = nodeOwnCreateStump;\nIfNode.prototype.dispose = nodeOwnSimpleDispose;\n\nIfNode.prototype.attach = function (parentEl, beforeEl) {\n    var me = this;\n    var elseIndex;\n    var child;\n\n    if (evalExpr(this.cond, this.scope, this.owner)) {\n        child = createNode(rinseCondANode(me.aNode), me);\n        elseIndex = -1;\n    }\n    else {\n        each(me.aNode.elses, function (elseANode, index) {\n            var elif = elseANode.directives.elif;\n\n            if (!elif || elif && evalExpr(elif.value, me.scope, me.owner)) {\n                child = createNode(rinseCondANode(elseANode), me);\n                elseIndex = index;\n                return false;\n            }\n        });\n    }\n\n    if (child) {\n        me.children[0] = child;\n        child.attach(parentEl, beforeEl);\n        me.elseIndex = elseIndex;\n    }\n\n\n    this._create();\n    insertBefore(this.el, parentEl, beforeEl);\n};\n\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n */\nIfNode.prototype._update = function (changes) {\n    var me = this;\n    var childANode = me.aNode;\n    var elseIndex;\n\n    if (evalExpr(this.cond, this.scope, this.owner)) {\n        elseIndex = -1;\n    }\n    else {\n        each(me.aNode.elses, function (elseANode, index) {\n            var elif = elseANode.directives.elif;\n\n            if (elif && evalExpr(elif.value, me.scope, me.owner) || !elif) {\n                elseIndex = index;\n                childANode = elseANode;\n                return false;\n            }\n        });\n    }\n\n    if (elseIndex === me.elseIndex) {\n        elementUpdateChildren(me, changes);\n    }\n    else {\n        var child = me.children[0];\n        me.children = [];\n        if (child) {\n            child._ondisposed = newChild;\n            child.dispose();\n        }\n        else {\n            newChild();\n        }\n\n        me.elseIndex = elseIndex;\n    }\n\n    function newChild() {\n        if (typeof elseIndex !== 'undefined') {\n            var child = createNode(rinseCondANode(childANode), me);\n            // var parentEl = getNodeStumpParent(me);\n            child.attach(me.el.parentNode, me.el);\n\n            me.children[0] = child;\n        }\n    }\n};\n\n// exports = module.exports = IfNode;\n\n\n/**\n * @file template 节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var insertBefore = require('../browser/insert-before');\n// var NodeType = require('./node-type');\n// var LifeCycle = require('./life-cycle');\n// var nodeDispose = require('./node-dispose');\n// var createReverseNode = require('./create-reverse-node');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var elementOwnToPhase = require('./element-own-to-phase');\n// var elementUpdateChildren = require('./element-update-children');\n// var nodeOwnOnlyChildrenAttach = require('./node-own-only-children-attach');\n\n/**\n * template 节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction TemplateNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        this.sel = document.createComment(this.id);\n        insertBefore(this.sel, reverseWalker.target, reverseWalker.current);\n\n        var me = this;\n        each(this.aNode.children, function (aNodeChild) {\n            me.children.push(createReverseNode(aNodeChild, reverseWalker, me));\n        });\n\n        this.el = document.createComment(this.id);\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n\n        this._toPhase('attached');\n    }\n    // #[end]\n}\n\n\n\nTemplateNode.prototype.nodeType = NodeType.TPL;\n\nTemplateNode.prototype.attach = nodeOwnOnlyChildrenAttach;\n\n/**\n * 销毁释放\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nTemplateNode.prototype.dispose = function (noDetach, noTransition) {\n    elementDisposeChildren(this, noDetach, noTransition);\n    nodeDispose(this);\n};\n\n\nTemplateNode.prototype._toPhase = elementOwnToPhase;\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n */\nTemplateNode.prototype._update = function (changes) {\n    elementUpdateChildren(this, changes);\n};\n\n// exports = module.exports = TemplateNode;\n\n\n/**\n * @file 对元素的子节点进行反解\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var each = require('../util/each');\n// var DOMChildrenWalker = require('./dom-children-walker');\n// var createReverseNode = require('./create-reverse-node');\n\n// #[begin] reverse\n\n/**\n * 对元素的子节点进行反解\n *\n * @param {Object} element 元素\n */\nfunction reverseElementChildren(element) {\n    var htmlDirective = element.aNode.directives.html;\n\n    if (!htmlDirective) {\n        var reverseWalker = new DOMChildrenWalker(element.el);\n\n        each(element.aNode.children, function (aNodeChild) {\n            element.children.push(createReverseNode(aNodeChild, reverseWalker, element));\n        });\n    }\n}\n// #[end]\n\n// exports = module.exports = reverseElementChildren;\n\n\n/**\n * @file 处理元素的属性操作\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var getPropHandler = require('./get-prop-handler');\n\n/**\n * 处理元素属性操作\n *\n * @param {Object} element 元素对象\n * @param {*} value 属性值\n * @param {Object} prop 属性信息对象\n */\nfunction handleProp(element, value, prop) {\n    var name = prop.name;\n    getPropHandler(element.tagName, name).prop(element.el, value, name, element, prop);\n}\n\n// exports = module.exports = handleProp;\n\n\n/**\n * @file 创建节点对应的 HTMLElement 主元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var evalExpr = require('../runtime/eval-expr');\n// var createEl = require('../browser/create-el');\n// var handleProp = require('./handle-prop');\n// var LifeCycle = require('./life-cycle');\n// var NodeType = require('./node-type');\n\nvar emptyPropWhenCreate = {\n    'class': 1,\n    'style': 1,\n    'id': 1\n};\n\n/**\n * 创建节点对应的 HTMLElement 主元素\n */\nfunction elementOwnCreate() {\n    if (!this.lifeCycle.created) {\n        var isComponent = this.nodeType === NodeType.CMPT;\n        var sourceNode = this.aNode.hotspot.sourceNode;\n        var props = this.aNode.props;\n\n        if (sourceNode) {\n            this.el = sourceNode.cloneNode();\n            props = this.aNode.hotspot.dynamicProps;\n        }\n        else {\n            this.el = createEl(this.tagName);\n        }\n\n        for (var key in this._sbindData) {\n            getPropHandler(this.tagName, key).prop(this.el, this._sbindData[key], key, this);\n        }\n\n        for (var i = 0, l = props.length; i < l; i++) {\n            var prop = props[i];\n            var value = isComponent\n                ? evalExpr(prop.expr, this.data, this)\n                : evalExpr(prop.expr, this.scope, this.owner);\n\n            if (value || !emptyPropWhenCreate[prop.name]) {\n                handleProp(this, value, prop);\n            }\n        }\n\n        this._toPhase('created');\n    }\n}\n\n// exports = module.exports = elementOwnCreate;\n\n\n/**\n * @file 将元素attach到页面\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var createNode = require('./create-node');\n// var evalExpr = require('../runtime/eval-expr');\n// var insertBefore = require('../browser/insert-before');\n\n/**\n * 将元素attach到页面\n *\n * @param {Object} element 元素节点\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction elementAttach(element, parentEl, beforeEl) {\n    element._create();\n    insertBefore(element.el, parentEl, beforeEl);\n\n    if (!element._contentReady) {\n        var htmlDirective = element.aNode.directives.html;\n\n        if (htmlDirective) {\n            element.el.innerHTML = evalExpr(htmlDirective.value, element.scope, element.owner);\n        }\n        else {\n            var aNodeChildren = element.aNode.children;\n            for (var i = 0; i < aNodeChildren.length; i++) {\n                var child = createNode(aNodeChildren[i], element);\n                element.children.push(child);\n                child.attach(element.el);\n            }\n        }\n\n        element._contentReady = 1;\n    }\n}\n\n\n// exports = module.exports = elementAttach;\n\n\n/**\n * @file 将元素attach到页面\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var elementAttach = require('./element-attach');\n\n/**\n * 将元素attach到页面\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction elementOwnAttach(parentEl, beforeEl) {\n    if (!this.lifeCycle.attached) {\n        elementAttach(this, parentEl, beforeEl);\n        this._attached();\n    }\n}\n\n// exports = module.exports = elementOwnAttach;\n\n\n/**\n * @file 获取 element 的 transition 控制对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var evalArgs = require('../runtime/eval-args');\n// var findMethod = require('../runtime/find-method');\n// var NodeType = require('./node-type');\n\n/**\n * 获取 element 的 transition 控制对象\n *\n * @param {Object} element 元素\n * @return {Object?}\n */\nfunction elementGetTransition(element) {\n    var directive = element.aNode.directives.transition;\n    var owner = element.owner;\n\n    if (element.nodeType === NodeType.CMPT) {\n        var cmptGivenTransition = element.givenANode && element.givenANode.directives.transition;\n        if (cmptGivenTransition) {\n            directive = cmptGivenTransition;\n        }\n        else {\n            owner = element;\n        }\n    }\n\n    var transition;\n    if (directive && owner) {\n        transition = findMethod(owner, directive.value.name);\n\n        if (typeof transition === 'function') {\n            transition = transition.apply(\n                owner,\n                evalArgs(directive.value.args, element.scope, owner)\n            );\n        }\n    }\n\n    return transition || element.transition;\n}\n\n// exports = module.exports = elementGetTransition;\n\n\n/**\n * @file 元素节点执行leave行为\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var elementGetTransition = require('./element-get-transition');\n\n\n/**\n * 元素节点执行leave行为\n *\n * @param {Object} element 元素\n */\nfunction elementLeave(element) {\n    var lifeCycle = element.lifeCycle;\n    if (lifeCycle.leaving) {\n        return;\n    }\n\n    if (element.disposeNoTransition) {\n        element._doneLeave();\n    }\n    else {\n        var transition = elementGetTransition(element);\n\n        if (transition && transition.leave) {\n            element._toPhase('leaving');\n            transition.leave(element.el, function () {\n                element._doneLeave();\n            });\n        }\n        else {\n            element._doneLeave();\n        }\n    }\n}\n\n// exports = module.exports = elementLeave;\n\n\n/**\n * @file 将元素从页面上移除\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var elementLeave = require('./element-leave');\n\n/**\n * 将元素从页面上移除\n */\nfunction elementOwnDetach() {\n    elementLeave(this);\n}\n\n\n// exports = module.exports = elementOwnDetach;\n\n\n/**\n * @file 销毁释放元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var elementLeave = require('./element-leave');\n\n/**\n * 销毁释放元素\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nfunction elementOwnDispose(noDetach, noTransition) {\n    this.leaveDispose = 1;\n    this.disposeNoDetach = noDetach;\n    this.disposeNoTransition = noTransition;\n\n    elementLeave(this);\n}\n\n// exports = module.exports = elementOwnDispose;\n\n\n/**\n * @file 为元素的 el 绑定事件\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var on = require('../browser/on');\n\n/**\n * 为元素的 el 绑定事件\n *\n * @param {string} name 事件名\n * @param {Function} listener 监听器\n * @param {boolean} capture 是否是捕获阶段触发\n */\nfunction elementOwnOnEl(name, listener, capture) {\n    if (typeof listener === 'function') {\n        capture = !!capture;\n        this._elFns.push([name, listener, capture]);\n        on(this.el, name, listener, capture);\n    }\n}\n\n// exports = module.exports = elementOwnOnEl;\n\n\n/**\n * @file  事件绑定不存在的 warning\n * @author varsha(wangshuonpu@gmail.com)\n */\n\n// var each = require('../util/each');\n\n// #[begin] error\n/**\n * 事件绑定不存在的 warning\n *\n * @param {Object} eventBind 事件绑定对象\n * @param {Component} owner 所属的组件对象\n */\nfunction warnEventListenMethod(eventBind, owner) {\n    var valid = true;\n    var method = owner;\n    each(eventBind.expr.name.paths, function (path) {\n        if (!path.value) {\n            return false;\n        }\n\n        method = method[path.value];\n        valid = !!method;\n        return valid;\n    });\n\n    if (!valid) {\n        var paths = [];\n        each(eventBind.expr.name.paths, function (path) {\n            paths.push(path.value);\n        });\n        var message = '[SAN WARNING] ' + eventBind.name + ' listen fail,\"' + paths.join('.') + '\" not exist';\n\n        /* eslint-disable no-console */\n        if (typeof console === 'object' && console.warn) {\n            console.warn(message);\n        }\n        else {\n            throw new Error(message);\n        }\n        /* eslint-enable no-console */\n    }\n}\n// #[end]\n\n// exports = module.exports = warnEventListenMethod;\n\n\n/**\n * @file 完成元素 attached 后的行为\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var bind = require('../util/bind');\n// var empty = require('../util/empty');\n// var isBrowser = require('../browser/is-browser');\n// var trigger = require('../browser/trigger');\n// var NodeType = require('./node-type');\n// var elementGetTransition = require('./element-get-transition');\n// var eventDeclarationListener = require('./event-declaration-listener');\n// var getPropHandler = require('./get-prop-handler');\n// var warnEventListenMethod = require('./warn-event-listen-method');\n\n/**\n * 双绑输入框CompositionEnd事件监听函数\n *\n * @inner\n */\nfunction inputOnCompositionEnd() {\n    if (!this.composing) {\n        return;\n    }\n\n    this.composing = 0;\n\n    trigger(this, 'input');\n}\n\n/**\n * 双绑输入框CompositionStart事件监听函数\n *\n * @inner\n */\nfunction inputOnCompositionStart() {\n    this.composing = 1;\n}\n\nfunction xPropOutputer(xProp, data) {\n    getPropHandler(this.tagName, xProp.name).output(this, xProp, data);\n}\n\nfunction inputXPropOutputer(element, xProp, data) {\n    var outputer = bind(xPropOutputer, element, xProp, data);\n    return function (e) {\n        if (!this.composing) {\n            outputer(e);\n        }\n    };\n}\n\n/**\n * 完成元素 attached 后的行为\n *\n * @param {Object} element 元素节点\n */\nfunction elementOwnAttached() {\n    this._toPhase('created');\n\n    var isComponent = this.nodeType === NodeType.CMPT;\n    var data = isComponent ? this.data : this.scope;\n\n    /* eslint-disable no-redeclare */\n\n    // 处理自身变化时双向绑定的逻辑\n    var xProps = this.aNode.hotspot.xProps;\n    for (var i = 0, l = xProps.length; i < l; i++) {\n        var xProp = xProps[i];\n\n        switch (xProp.name) {\n            case 'value':\n                switch (this.tagName) {\n                    case 'input':\n                    case 'textarea':\n                        if (isBrowser && window.CompositionEvent) {\n                            this._onEl('change', inputOnCompositionEnd);\n                            this._onEl('compositionstart', inputOnCompositionStart);\n                            this._onEl('compositionend', inputOnCompositionEnd);\n                        }\n\n                        this._onEl(\n                            ('oninput' in this.el) ? 'input' : 'propertychange',\n                            inputXPropOutputer(this, xProp, data)\n                        );\n\n                        break;\n\n                    case 'select':\n                        this._onEl('change', bind(xPropOutputer, this, xProp, data));\n                        break;\n                }\n                break;\n\n            case 'checked':\n                switch (this.tagName) {\n                    case 'input':\n                        switch (this.el.type) {\n                            case 'checkbox':\n                            case 'radio':\n                                this._onEl('click', bind(xPropOutputer, this, xProp, data));\n                        }\n                }\n                break;\n        }\n    }\n\n    // bind events\n    var events = isComponent\n        ? this.aNode.events.concat(this.nativeEvents)\n        : this.aNode.events;\n\n    for (var i = 0, l = events.length; i < l; i++) {\n        var eventBind = events[i];\n        var owner = isComponent ? this : this.owner;\n\n        // 判断是否是nativeEvent，下面的warn方法和事件绑定都需要\n        // 依此指定eventBind.expr.name位于owner还是owner.owner上\n        if (eventBind.modifier.native) {\n            owner = owner.owner;\n            data = this.scope || owner.data;\n        }\n\n        // #[begin] error\n        warnEventListenMethod(eventBind, owner);\n        // #[end]\n\n        this._onEl(\n            eventBind.name,\n            bind(\n                eventDeclarationListener,\n                owner,\n                eventBind,\n                0,\n                data\n            ),\n            eventBind.modifier.capture\n        );\n    }\n\n    this._toPhase('attached');\n\n\n    if (this._isInitFromEl) {\n        this._isInitFromEl = false;\n    }\n    else {\n        var transition = elementGetTransition(this);\n        if (transition && transition.enter) {\n            transition.enter(this.el, empty);\n        }\n    }\n}\n\n// exports = module.exports = elementOwnAttached;\n\n\n/**\n * @file 销毁元素节点\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var un = require('../browser/un');\n// var removeEl = require('../browser/remove-el');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var nodeDispose = require('./node-dispose');\n\n/**\n * 销毁元素节点\n *\n * @param {Object} element 要销毁的元素节点\n * @param {Object=} options 销毁行为的参数\n */\nfunction elementDispose(element) {\n    elementDisposeChildren(element, 1, 1);\n\n    // el 事件解绑\n    var len = element._elFns.length;\n    while (len--) {\n        var fn = element._elFns[len];\n        un(element.el, fn[0], fn[1], fn[2]);\n    }\n    element._elFns = null;\n\n\n    // 如果没有parent，说明是一个root component，一定要从dom树中remove\n    if (!element.disposeNoDetach || !element.parent) {\n        removeEl(element.el);\n    }\n\n    if (element._toPhase) {\n        element._toPhase('detached');\n    }\n\n    nodeDispose(element);\n}\n\n\n// exports = module.exports = elementDispose;\n\n\n/**\n * @file 初始化 element 节点的 tagName 处理\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ieOldThan9 = require('../browser/ie-old-than-9');\n\n/**\n * 初始化 element 节点的 tagName 处理\n *\n * @param {Object} node 节点对象\n */\nfunction elementInitTagName(node) {\n    node.tagName = node.tagName || node.aNode.tagName || 'div';\n\n    // #[begin] allua\n    // ie8- 不支持innerHTML输出自定义标签\n    if (ieOldThan9 && node.tagName.indexOf('-') > 0) {\n        node.tagName = 'div';\n    }\n    // #[end]\n}\n\n\n// exports = module.exports = elementInitTagName;\n\n\n/**\n * @file 给 devtool 发通知消息\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var isBrowser = require('../browser/is-browser');\n\n// #[begin] devtool\nvar san4devtool;\n\n/**\n * 给 devtool 发通知消息\n *\n * @param {string} name 消息名称\n * @param {*} arg 消息参数\n */\nfunction emitDevtool(name, arg) {\n    if (isBrowser && san4devtool && san4devtool.debug && window.__san_devtool__) {\n        window.__san_devtool__.emit(name, arg);\n    }\n}\n\nemitDevtool.start = function (main) {\n    san4devtool = main;\n    emitDevtool('san', main);\n};\n// #[end]\n\n// exports = module.exports = emitDevtool;\n\n\n/**\n * @file 组件类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var bind = require('../util/bind');\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var extend = require('../util/extend');\n// var nextTick = require('../util/next-tick');\n// var emitDevtool = require('../util/emit-devtool');\n// var ExprType = require('../parser/expr-type');\n// var parseExpr = require('../parser/parse-expr');\n// var createAccessor = require('../parser/create-accessor');\n// var postProp = require('../parser/post-prop');\n// var removeEl = require('../browser/remove-el');\n// var Data = require('../runtime/data');\n// var evalExpr = require('../runtime/eval-expr');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var DataChangeType = require('../runtime/data-change-type');\n// var compileComponent = require('./compile-component');\n// var componentPreheat = require('./component-preheat');\n// var LifeCycle = require('./life-cycle');\n// var getANodeProp = require('./get-a-node-prop');\n// var isDataChangeByElement = require('./is-data-change-by-element');\n// var eventDeclarationListener = require('./event-declaration-listener');\n// var reverseElementChildren = require('./reverse-element-children');\n// var camelComponentBinds = require('./camel-component-binds');\n// var NodeType = require('./node-type');\n// var nodeSBindInit = require('./node-s-bind-init');\n// var nodeSBindUpdate = require('./node-s-bind-update');\n// var elementInitTagName = require('./element-init-tag-name');\n// var elementOwnAttached = require('./element-own-attached');\n// var elementDispose = require('./element-dispose');\n// var elementUpdateChildren = require('./element-update-children');\n// var elementOwnOnEl = require('./element-own-on-el');\n// var elementOwnCreate = require('./element-own-create');\n// var elementOwnAttach = require('./element-own-attach');\n// var elementOwnDetach = require('./element-own-detach');\n// var elementOwnDispose = require('./element-own-dispose');\n// var warnEventListenMethod = require('./warn-event-listen-method');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var elementAttach = require('./element-attach');\n// var handleProp = require('./handle-prop');\n// var createDataTypesChecker = require('../util/create-data-types-checker');\n\n\n\n\n/**\n * 组件类\n *\n * @class\n * @param {Object} options 初始化参数\n */\nfunction Component(options) { // eslint-disable-line\n    options = options || {};\n\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n    this._elFns = [];\n    this.listeners = {};\n    this.slotChildren = [];\n\n    var clazz = this.constructor;\n\n    this.filters = this.filters || clazz.filters || {};\n    this.computed = this.computed || clazz.computed || {};\n    this.messages = this.messages || clazz.messages || {};\n\n    if (options.transition) {\n        this.transition = options.transition;\n    }\n\n    this.subTag = options.subTag;\n\n    // compile\n    compileComponent(clazz);\n    componentPreheat(clazz);\n\n    var me = this;\n    var protoANode = clazz.prototype.aNode;\n\n    me.givenANode = options.aNode;\n    me.givenNamedSlotBinds = [];\n    me.givenSlots = {\n        named: {}\n    };\n\n    this.owner = options.owner;\n    this.scope = options.scope;\n    this.el = options.el;\n\n    var parent = options.parent;\n    if (parent) {\n        this.parent = parent;\n        this.parentComponent = parent.nodeType === NodeType.CMPT\n            ? parent\n            : parent && parent.parentComponent;\n    }\n\n    this.id = guid();\n\n    // #[begin] reverse\n    if (this.el) {\n        var firstCommentNode = this.el.firstChild;\n        if (firstCommentNode.nodeType === 3) {\n            firstCommentNode = firstCommentNode.nextSibling;\n        }\n\n        if (firstCommentNode && firstCommentNode.nodeType === 8) {\n            var stumpMatch = firstCommentNode.data.match(/^\\s*s-data:([\\s\\S]+)?$/);\n            if (stumpMatch) {\n                var stumpText = stumpMatch[1];\n\n                // fill component data\n                options.data = (new Function(\n                    'return ' + stumpText.replace(/^[\\s\\n]*/, '')\n                ))();\n\n                if (firstCommentNode.previousSibling) {\n                    removeEl(firstCommentNode.previousSibling);\n                }\n                removeEl(firstCommentNode);\n            }\n        }\n    }\n    // #[end]\n\n    // native事件数组\n    this.nativeEvents = [];\n\n    if (this.givenANode) {\n        // 组件运行时传入的结构，做slot解析\n        this._createGivenSlots();\n\n        each(this.givenANode.events, function (eventBind) {\n            // 保存当前实例的native事件，下面创建aNode时候做合并\n            if (eventBind.modifier.native) {\n                me.nativeEvents.push(eventBind);\n                return;\n            }\n\n            // #[begin] error\n            warnEventListenMethod(eventBind, options.owner);\n            // #[end]\n\n            me.on(\n                eventBind.name,\n                bind(eventDeclarationListener, options.owner, eventBind, 1, options.scope),\n                eventBind\n            );\n        });\n\n        this.tagName = protoANode.tagName || me.givenANode.tagName;\n        this.binds = camelComponentBinds(this.givenANode.props);\n\n        // init s-bind data\n        nodeSBindInit(this, this.givenANode.directives.bind);\n    }\n\n    this._toPhase('compiled');\n\n    // init data\n    this.data = new Data(\n        extend(\n            typeof this.initData === 'function' && this.initData() || {},\n            options.data || this._sbindData\n        )\n    );\n\n    elementInitTagName(this);\n\n    each(this.binds, function (bind) {\n        postProp(bind);\n\n        if (me.scope) {\n            var value = evalExpr(bind.expr, me.scope, me.owner);\n            if (typeof value !== 'undefined') {\n                // See: https://github.com/ecomfe/san/issues/191\n                me.data.set(bind.name, value);\n            }\n        }\n    });\n\n    // #[begin] error\n    // 在初始化 + 数据绑定后，开始数据校验\n    // NOTE: 只在开发版本中进行属性校验\n    var dataTypes = this.dataTypes || clazz.dataTypes;\n    if (dataTypes) {\n        var dataTypeChecker = createDataTypesChecker(\n            dataTypes,\n            this.subTag || this.name || clazz.name\n        );\n        this.data.setTypeChecker(dataTypeChecker);\n        this.data.checkDataTypes();\n    }\n    // #[end]\n\n    this.computedDeps = {};\n    /* eslint-disable guard-for-in */\n    for (var expr in this.computed) {\n        if (!this.computedDeps[expr]) {\n            this._calcComputed(expr);\n        }\n    }\n    /* eslint-enable guard-for-in */\n\n    if (!this.dataChanger) {\n        this.dataChanger = bind(this._dataChanger, this);\n        this.data.listen(this.dataChanger);\n    }\n    this._toPhase('inited');\n\n    // #[begin] reverse\n    if (this.el) {\n        reverseElementChildren(this);\n        this._attached();\n    }\n\n    var walker = options.reverseWalker;\n    if (walker) {\n        var currentNode = walker.current;\n        if (currentNode && currentNode.nodeType === 1) {\n            this.el = currentNode;\n            walker.goNext();\n        }\n\n        reverseElementChildren(this);\n\n        this._attached();\n    }\n    // #[end]\n}\n\n\n/**\n * 初始化创建组件外部传入的插槽对象\n *\n * @protected\n */\nComponent.prototype._createGivenSlots = function () {\n    var me = this;\n    me.givenSlots.named = {};\n\n    // 组件运行时传入的结构，做slot解析\n    me.givenANode && me.scope && each(me.givenANode.children, function (child) {\n        var target;\n\n        var slotBind = !child.textExpr && getANodeProp(child, 'slot');\n        if (slotBind) {\n            !me.givenSlotInited && me.givenNamedSlotBinds.push(slotBind);\n\n            var slotName = evalExpr(slotBind.expr, me.scope, me.owner);\n            target = me.givenSlots.named[slotName];\n            if (!target) {\n                target = me.givenSlots.named[slotName] = [];\n            }\n        }\n        else if (!me.givenSlotInited) {\n            target = me.givenSlots.noname;\n            if (!target) {\n                target = me.givenSlots.noname = [];\n            }\n        }\n\n        target && target.push(child);\n    });\n\n    me.givenSlotInited = true;\n};\n\n/**\n * 类型标识\n *\n * @type {string}\n */\nComponent.prototype.nodeType = NodeType.CMPT;\n\n/**\n * 在下一个更新周期运行函数\n *\n * @param {Function} fn 要运行的函数\n */\nComponent.prototype.nextTick = nextTick;\n\n/* eslint-disable operator-linebreak */\n/**\n * 使节点到达相应的生命周期\n *\n * @protected\n * @param {string} name 生命周期名称\n */\nComponent.prototype._callHook =\nComponent.prototype._toPhase = function (name) {\n    if (!this.lifeCycle[name]) {\n        this.lifeCycle = LifeCycle[name] || this.lifeCycle;\n        if (typeof this[name] === 'function') {\n            this[name]();\n        }\n        this['_after' + name] = 1;\n\n        // 通知devtool\n        // #[begin] devtool\n        emitDevtool('comp-' + name, this);\n        // #[end]\n    }\n};\n/* eslint-enable operator-linebreak */\n\n\n/**\n * 添加事件监听器\n *\n * @param {string} name 事件名\n * @param {Function} listener 监听器\n * @param {string?} declaration 声明式\n */\nComponent.prototype.on = function (name, listener, declaration) {\n    if (typeof listener === 'function') {\n        if (!this.listeners[name]) {\n            this.listeners[name] = [];\n        }\n        this.listeners[name].push({fn: listener, declaration: declaration});\n    }\n};\n\n/**\n * 移除事件监听器\n *\n * @param {string} name 事件名\n * @param {Function=} listener 监听器\n */\nComponent.prototype.un = function (name, listener) {\n    var nameListeners = this.listeners[name];\n    var len = nameListeners && nameListeners.length;\n\n    while (len--) {\n        if (!listener || listener === nameListeners[len].fn) {\n            nameListeners.splice(len, 1);\n        }\n    }\n};\n\n\n/**\n * 派发事件\n *\n * @param {string} name 事件名\n * @param {Object} event 事件对象\n */\nComponent.prototype.fire = function (name, event) {\n    var me = this;\n    each(this.listeners[name], function (listener) {\n        listener.fn.call(me, event);\n    });\n};\n\n/**\n * 计算 computed 属性的值\n *\n * @private\n * @param {string} computedExpr computed表达式串\n */\nComponent.prototype._calcComputed = function (computedExpr) {\n    var computedDeps = this.computedDeps[computedExpr];\n    if (!computedDeps) {\n        computedDeps = this.computedDeps[computedExpr] = {};\n    }\n\n    this.data.set(computedExpr, this.computed[computedExpr].call({\n        data: {\n            get: bind(function (expr) {\n                // #[begin] error\n                if (!expr) {\n                    throw new Error('[SAN ERROR] call get method in computed need argument');\n                }\n                // #[end]\n\n                if (!computedDeps[expr]) {\n                    computedDeps[expr] = 1;\n\n                    if (this.computed[expr]) {\n                        this._calcComputed(expr);\n                    }\n\n                    this.watch(expr, function () {\n                        this._calcComputed(computedExpr);\n                    });\n                }\n\n                return this.data.get(expr);\n            }, this)\n        }\n    }));\n};\n\n/**\n * 派发消息\n * 组件可以派发消息，消息将沿着组件树向上传递，直到遇上第一个处理消息的组件\n *\n * @param {string} name 消息名称\n * @param {*?} value 消息值\n */\nComponent.prototype.dispatch = function (name, value) {\n    var parentComponent = this.parentComponent;\n\n    while (parentComponent) {\n        var receiver = parentComponent.messages[name] || parentComponent.messages['*'];\n        if (typeof receiver === 'function') {\n            receiver.call(\n                parentComponent,\n                {target: this, value: value, name: name}\n            );\n            break;\n        }\n\n        parentComponent = parentComponent.parentComponent;\n    }\n};\n\n/**\n * 获取组件内部的 slot\n *\n * @param {string=} name slot名称，空为default slot\n * @return {Array}\n */\nComponent.prototype.slot = function (name) {\n    var result = [];\n    var me = this;\n\n    function childrenTraversal(children) {\n        each(children, function (child) {\n            if (child.nodeType === NodeType.SLOT && child.owner === me) {\n                if (child.isNamed && child.name === name\n                    || !child.isNamed && !name\n                ) {\n                    result.push(child);\n                }\n            }\n            else {\n                childrenTraversal(child.children);\n            }\n        });\n    }\n\n    childrenTraversal(this.children);\n    return result;\n};\n\n/**\n * 获取带有 san-ref 指令的子组件引用\n *\n * @param {string} name 子组件的引用名\n * @return {Component}\n */\nComponent.prototype.ref = function (name) {\n    var refTarget;\n    var owner = this;\n\n    function childrenTraversal(children) {\n        each(children, function (child) {\n            elementTraversal(child);\n            return !refTarget;\n        });\n    }\n\n    function elementTraversal(element) {\n        var nodeType = element.nodeType;\n        if (nodeType === NodeType.TEXT) {\n            return;\n        }\n\n        if (element.owner === owner) {\n            var ref;\n            switch (element.nodeType) {\n                case NodeType.ELEM:\n                    ref = element.aNode.directives.ref;\n                    if (ref && evalExpr(ref.value, element.scope, owner) === name) {\n                        refTarget = element.el;\n                    }\n                    break;\n\n                case NodeType.CMPT:\n                    ref = element.givenANode.directives.ref;\n                    if (ref && evalExpr(ref.value, element.scope, owner) === name) {\n                        refTarget = element;\n                    }\n            }\n\n            !refTarget && childrenTraversal(element.slotChildren);\n        }\n\n        !refTarget && childrenTraversal(element.children);\n    }\n\n    childrenTraversal(this.children);\n\n    return refTarget;\n};\n\n\n/**\n * 视图更新函数\n *\n * @param {Array?} changes 数据变化信息\n */\nComponent.prototype._update = function (changes) {\n    if (this.lifeCycle.disposed) {\n        return;\n    }\n\n    var me = this;\n\n\n    var needReloadForSlot = false;\n    this._notifyNeedReload = function () {\n        needReloadForSlot = true;\n    };\n\n    if (changes) {\n        nodeSBindUpdate(\n            this,\n            this.givenANode.directives.bind,\n            changes,\n            function (name, value) {\n                if (name in me.givenANode.hotspot.props) {\n                    return;\n                }\n\n                me.data.set(name, value, {\n                    target: {\n                        id: me.owner.id\n                    }\n                });\n            }\n        );\n\n\n        each(changes, function (change) {\n            var changeExpr = change.expr;\n\n            each(me.binds, function (bindItem) {\n                var relation;\n                var setExpr = bindItem.name;\n                var updateExpr = bindItem.expr;\n\n                if (!isDataChangeByElement(change, me, setExpr)\n                    && (relation = changeExprCompare(changeExpr, updateExpr, me.scope))\n                ) {\n                    if (relation > 2) {\n                        setExpr = createAccessor(\n                            [\n                                {\n                                    type: ExprType.STRING,\n                                    value: setExpr\n                                }\n                            ].concat(changeExpr.paths.slice(updateExpr.paths.length))\n                        );\n                        updateExpr = changeExpr;\n                    }\n\n                    if (relation >= 2 && change.type === DataChangeType.SPLICE) {\n                        me.data.splice(setExpr, [change.index, change.deleteCount].concat(change.insertions), {\n                            target: {\n                                id: me.owner.id\n                            }\n                        });\n                    }\n                    else {\n                        me.data.set(setExpr, evalExpr(updateExpr, me.scope, me.owner), {\n                            target: {\n                                id: me.owner.id\n                            }\n                        });\n                    }\n                }\n            });\n\n            each(me.givenNamedSlotBinds, function (bindItem) {\n                needReloadForSlot = needReloadForSlot || changeExprCompare(changeExpr, bindItem.expr, me.scope);\n                return !needReloadForSlot;\n            });\n        });\n\n        if (needReloadForSlot) {\n            this._createGivenSlots();\n            this._repaintChildren();\n        }\n        else {\n            var slotChildrenLen = this.slotChildren.length;\n            while (slotChildrenLen--) {\n                var slotChild = this.slotChildren[slotChildrenLen];\n\n                if (slotChild.lifeCycle.disposed) {\n                    this.slotChildren.splice(slotChildrenLen, 1);\n                }\n                else if (slotChild.isInserted) {\n                    slotChild._update(changes, 1);\n                }\n            }\n        }\n    }\n\n    var dataChanges = this.dataChanges;\n    if (dataChanges) {\n        this.dataChanges = null;\n        each(this.aNode.hotspot.dynamicProps, function (prop) {\n            each(dataChanges, function (change) {\n                if (changeExprCompare(change.expr, prop.expr, me.data)\n                    || prop.hintExpr && changeExprCompare(change.expr, prop.hintExpr, me.data)\n                ) {\n                    handleProp(me, evalExpr(prop.expr, me.data, me), prop);\n                    return false;\n                }\n            });\n        });\n\n        elementUpdateChildren(this, dataChanges);\n        if (needReloadForSlot) {\n            this._createGivenSlots();\n            this._repaintChildren();\n        }\n\n        this._toPhase('updated');\n\n        if (this.owner) {\n            this._updateBindxOwner(dataChanges);\n            this.owner._update();\n        }\n    }\n\n    this._notifyNeedReload = null;\n};\n\nComponent.prototype._updateBindxOwner = function (dataChanges) {\n    var me = this;\n\n    if (this.owner) {\n        each(dataChanges, function (change) {\n            each(me.binds, function (bindItem) {\n                var changeExpr = change.expr;\n                if (bindItem.x\n                    && !isDataChangeByElement(change, me.owner)\n                    && changeExprCompare(changeExpr, parseExpr(bindItem.name), me.data)\n                ) {\n                    var updateScopeExpr = bindItem.expr;\n                    if (changeExpr.paths.length > 1) {\n                        updateScopeExpr = createAccessor(\n                            bindItem.expr.paths.concat(changeExpr.paths.slice(1))\n                        );\n                    }\n\n                    me.scope.set(\n                        updateScopeExpr,\n                        evalExpr(changeExpr, me.data, me),\n                        {\n                            target: {\n                                id: me.id,\n                                prop: bindItem.name\n                            }\n                        }\n                    );\n                }\n            });\n        });\n    }\n};\n\n/**\n * 重新绘制组件的内容\n * 当 dynamic slot name 发生变更或 slot 匹配发生变化时，重新绘制\n * 在组件级别重绘有点粗暴，但是能保证视图结果正确性\n */\nComponent.prototype._repaintChildren = function () {\n    elementDisposeChildren(this, 0, 1);\n    this.children = [];\n\n    this._contentReady = 0;\n    this.slotChildren = [];\n    elementAttach(this);\n};\n\n\n/**\n * 组件内部监听数据变化的函数\n *\n * @private\n * @param {Object} change 数据变化信息\n */\nComponent.prototype._dataChanger = function (change) {\n    if (this.lifeCycle.created && this._aftercreated) {\n        if (!this.dataChanges) {\n            nextTick(this._update, this);\n            this.dataChanges = [];\n        }\n\n        this.dataChanges.push(change);\n    }\n    else if (this.lifeCycle.inited && this.owner) {\n        this._updateBindxOwner([change]);\n    }\n};\n\n\n/**\n * 监听组件的数据变化\n *\n * @param {string} dataName 变化的数据项\n * @param {Function} listener 监听函数\n */\nComponent.prototype.watch = function (dataName, listener) {\n    var dataExpr = parseExpr(dataName);\n\n    this.data.listen(bind(function (change) {\n        if (changeExprCompare(change.expr, dataExpr, this.data)) {\n            listener.call(this, evalExpr(dataExpr, this.data, this), change);\n        }\n    }, this));\n};\n\n/**\n * 组件销毁的行为\n *\n * @param {Object} options 销毁行为的参数\n */\nComponent.prototype.dispose = elementOwnDispose;\n\nComponent.prototype._doneLeave = function () {\n    if (this.leaveDispose) {\n        if (!this.lifeCycle.disposed) {\n            // 这里不用挨个调用 dispose 了，因为 children 释放链会调用的\n            this.slotChildren = null;\n\n            this.data.unlisten();\n            this.dataChanger = null;\n            this.dataChanges = null;\n\n            elementDispose(\n                this,\n                this.disposeNoDetach,\n                this.disposeNoTransition\n            );\n            this.listeners = null;\n\n            this.givenANode = null;\n            this.givenSlots = null;\n            this.givenNamedSlotBinds = null;\n        }\n    }\n    else if (this.lifeCycle.attached) {\n        removeEl(this.el);\n        this._toPhase('detached');\n    }\n};\n\n/**\n * 完成组件 attached 后的行为\n *\n * @param {Object} element 元素节点\n */\nComponent.prototype._attached = elementOwnAttached;\n\nComponent.prototype.attach = elementOwnAttach;\nComponent.prototype.detach = elementOwnDetach;\nComponent.prototype._create = elementOwnCreate;\nComponent.prototype._onEl = elementOwnOnEl;\n\n\n// exports = module.exports = Component;\n\n\n/**\n * @file 创建组件类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Component = require('./component');\n// var inherits = require('../util/inherits');\n\n/**\n * 创建组件类\n *\n * @param {Object} proto 组件类的方法表\n * @return {Function}\n */\nfunction defineComponent(proto) {\n    // 如果传入一个不是 san component 的 constructor，直接返回不是组件构造函数\n    // 这种场景导致的错误 san 不予考虑\n    if (typeof proto === 'function') {\n        return proto;\n    }\n\n    // #[begin] error\n    if (typeof proto !== 'object') {\n        throw new Error('[SAN FATAL] param must be a plain object.');\n    }\n    // #[end]\n\n    function ComponentClass(option) { // eslint-disable-line\n        Component.call(this, option);\n    }\n\n    ComponentClass.prototype = proto;\n    inherits(ComponentClass, Component);\n\n    return ComponentClass;\n}\n\n// exports = module.exports = defineComponent;\n\n\n/**\n * @file 编译组件类\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var createANode = require('../parser/create-a-node');\n// var parseTemplate = require('../parser/parse-template');\n// var parseText = require('../parser/parse-text');\n// var defineComponent = require('./define-component');\n\n\n/**\n * 编译组件类。预解析template和components\n *\n * @param {Function} ComponentClass 组件类\n */\nfunction compileComponent(ComponentClass) {\n    var proto = ComponentClass.prototype;\n\n    // pre define components class\n    if (!proto.hasOwnProperty('_cmptReady')) {\n        proto.components = ComponentClass.components || proto.components || {};\n        var components = proto.components;\n\n        for (var key in components) { // eslint-disable-line\n            var componentClass = components[key];\n\n            if (typeof componentClass === 'object') {\n                components[key] = defineComponent(componentClass);\n            }\n            else if (componentClass === 'self') {\n                components[key] = ComponentClass;\n            }\n        }\n\n        proto._cmptReady = 1;\n    }\n\n\n    // pre compile template\n    if (!proto.hasOwnProperty('aNode')) {\n        proto.aNode = createANode();\n\n        var tpl = ComponentClass.template || proto.template;\n        if (tpl) {\n            var aNode = parseTemplate(tpl, {\n                trimWhitespace: proto.trimWhitespace || ComponentClass.trimWhitespace,\n                delimiters: proto.delimiters || ComponentClass.delimiters\n            });\n            var firstChild = aNode.children[0];\n\n            // #[begin] error\n            if (aNode.children.length !== 1 || firstChild.textExpr) {\n                throw new Error('[SAN FATAL] template must have a root element.');\n            }\n            // #[end]\n\n            proto.aNode = firstChild;\n            if (firstChild.tagName === 'template') {\n                firstChild.tagName = null;\n            }\n\n            var componentPropExtra = {\n                'class': {name: 'class', expr: parseText('{{class | _class | _sep(\" \")}}')},\n                'style': {name: 'style', expr: parseText('{{style | _style | _sep(\";\")}}')},\n                'id': {name: 'id', expr: parseText('{{id}}')}\n            };\n\n            var len = firstChild.props.length;\n            while (len--) {\n                var prop = firstChild.props[len];\n                var extra = componentPropExtra[prop.name];\n\n                if (extra) {\n                    firstChild.props.splice(len, 1);\n                    componentPropExtra[prop.name] = prop;\n\n                    if (prop.name !== 'id') {\n                        prop.expr.segs.push(extra.expr.segs[0]);\n                        prop.expr.value = null;\n                    }\n                }\n            }\n\n            firstChild.props.push(\n                componentPropExtra['class'], // eslint-disable-line dot-notation\n                componentPropExtra.style,\n                componentPropExtra.id\n            );\n        }\n    }\n}\n\n// exports = module.exports = compileComponent;\n\n\n/**\n * @file 组件预热\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var each = require('../util/each');\n// var createEl = require('../browser/create-el');\n// var getPropHandler = require('./get-prop-handler');\n// var getANodeProp = require('./get-a-node-prop');\n// var isBrowser = require('../browser/is-browser');\n\n/**\n * 组件预热，分析组件aNode的数据引用等信息\n *\n * @param {Function} ComponentClass 组件类\n */\nfunction componentPreheat(ComponentClass) {\n    var stack = [];\n\n    function recordHotspotData(refs, notContentData) {\n        var len = stack.length;\n        each(stack, function (aNode, index) {\n            if (!notContentData || index !== len - 1) {\n                each(refs, function (ref) {\n                    aNode.hotspot.data[ref] = 1;\n                });\n            }\n        });\n    }\n\n\n    function analyseANodeHotspot(aNode) {\n        if (!aNode.hotspot) {\n            stack.push(aNode);\n\n\n            if (aNode.textExpr) {\n                aNode.hotspot = {data: {}};\n                recordHotspotData(analyseExprDataHotspot(aNode.textExpr));\n            }\n            else {\n                var sourceNode;\n                if (isBrowser && aNode.tagName && !/^(template|slot|select|input|option)$/i.test(aNode.tagName)) {\n                    sourceNode = createEl(aNode.tagName);\n                }\n\n                aNode.hotspot = {\n                    data: {},\n                    dynamicProps: [],\n                    xProps: [],\n                    props: {},\n                    sourceNode: sourceNode\n                };\n\n\n                // === analyse hotspot data: start\n                each(aNode.vars, function (varItem) {\n                    recordHotspotData(analyseExprDataHotspot(varItem.expr));\n                });\n\n                each(aNode.props, function (prop) {\n                    recordHotspotData(analyseExprDataHotspot(prop.expr));\n                });\n\n                /* eslint-disable guard-for-in */\n                for (var key in aNode.directives) {\n                    var directive = aNode.directives[key];\n                    recordHotspotData(analyseExprDataHotspot(directive.value), !/^(html|bind)$/.test(key));\n\n                    // init trackBy getKey function\n                    if (key === 'for') {\n                        var trackBy = directive.trackBy;\n                        if (trackBy\n                            && trackBy.type === ExprType.ACCESSOR\n                            && trackBy.paths[0].value === directive.item.raw\n                        ) {\n                            aNode.hotspot.getForKey = new Function(\n                                directive.item.raw,\n                                'return ' + trackBy.raw\n                            );\n                        }\n                    }\n                }\n                /* eslint-enable guard-for-in */\n\n                each(aNode.elses, function (child) {\n                    analyseANodeHotspot(child);\n                });\n\n                each(aNode.children, function (child) {\n                    analyseANodeHotspot(child);\n                });\n                // === analyse hotspot data: end\n\n\n                // === analyse hotspot props: start\n                each(aNode.props, function (prop, index) {\n                    aNode.hotspot.props[prop.name] = index;\n\n                    if (prop.name === 'id') {\n                        prop.id = true;\n                        aNode.hotspot.idProp = prop;\n                        aNode.hotspot.dynamicProps.push(prop);\n                    }\n                    else if (prop.expr.value != null) {\n                        if (sourceNode) {\n                            getPropHandler(aNode.tagName, prop.name)\n                                .prop(sourceNode, prop.expr.value, prop.name, aNode);\n                        }\n                    }\n                    else {\n                        if (prop.x) {\n                            aNode.hotspot.xProps.push(prop);\n                        }\n                        aNode.hotspot.dynamicProps.push(prop);\n                    }\n                });\n\n                // ie 下，如果 option 没有 value 属性，select.value = xx 操作不会选中 option\n                // 所以没有设置 value 时，默认把 option 的内容作为 value\n                if (aNode.tagName === 'option'\n                    && !getANodeProp(aNode, 'value')\n                    && aNode.children[0]\n                ) {\n                    var valueProp = {\n                        name: 'value',\n                        expr: aNode.children[0].textExpr\n                    };\n                    aNode.props.push(valueProp);\n                    aNode.hotspot.dynamicProps.push(valueProp);\n                    aNode.hotspot.props.value = aNode.props.length - 1;\n                }\n                // === analyse hotspot props: end\n            }\n\n            stack.pop();\n        }\n    }\n\n    analyseANodeHotspot(ComponentClass.prototype.aNode);\n}\n\n/**\n * 分析表达式的数据引用\n *\n * @param {Object} expr 要分析的表达式\n * @return {Array}\n */\nfunction analyseExprDataHotspot(expr) {\n    var refs = [];\n\n    function analyseExprs(exprs) {\n        each(exprs, function (expr) {\n            refs = refs.concat(analyseExprDataHotspot(expr));\n        });\n    }\n\n    switch (expr.type) {\n        case ExprType.ACCESSOR:\n            var paths = expr.paths;\n            refs.push(paths[0].value);\n\n            if (paths.length > 1) {\n                refs.push(paths[0].value + '.' + (paths[1].value || '*'));\n            }\n\n            analyseExprs(paths.slice(1));\n            break;\n\n        case ExprType.UNARY:\n            return analyseExprDataHotspot(expr.expr);\n\n        case ExprType.TEXT:\n        case ExprType.BINARY:\n        case ExprType.TERTIARY:\n            analyseExprs(expr.segs);\n            break;\n\n        case ExprType.INTERP:\n            refs = analyseExprDataHotspot(expr.expr);\n\n            each(expr.filters, function (filter) {\n                analyseExprs(filter.name.paths);\n                analyseExprs(filter.args);\n            });\n\n            break;\n\n    }\n\n    return refs;\n}\n\n// exports = module.exports = componentPreheat;\n\n\n/**\n * @file 将 binds 的 name 从 kebabcase 转换成 camelcase\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var kebab2camel = require('../util/kebab2camel');\n// var each = require('../util/each');\n\n/**\n * 将 binds 的 name 从 kebabcase 转换成 camelcase\n *\n * @param {Array} binds binds集合\n * @return {Array}\n */\nfunction camelComponentBinds(binds) {\n    var result = [];\n    each(binds, function (bind) {\n        result.push({\n            name: kebab2camel(bind.name),\n            expr: bind.expr,\n            x: bind.x,\n            raw: bind.raw\n        });\n    });\n\n    return result;\n}\n\n// exports = module.exports = camelComponentBinds;\n\n\n/**\n * @file 编译源码的 helper 方法集合\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var ExprType = require('../parser/expr-type');\n\n// #[begin] ssr\n// \n// /**\n//  * 编译源码的 helper 方法集合对象\n//  */\n// var compileExprSource = {\n// \n//     /**\n//      * 字符串字面化\n//      *\n//      * @param {string} source 需要字面化的字符串\n//      * @return {string} 字符串字面化结果\n//      */\n//     stringLiteralize: function (source) {\n//         return '\"'\n//             + source\n//                 .replace(/\\x5C/g, '\\\\\\\\')\n//                 .replace(/\"/g, '\\\\\"')\n//                 .replace(/\\x0A/g, '\\\\n')\n//                 .replace(/\\x09/g, '\\\\t')\n//                 .replace(/\\x0D/g, '\\\\r')\n//                 // .replace( /\\x08/g, '\\\\b' )\n//                 // .replace( /\\x0C/g, '\\\\f' )\n//             + '\"';\n//     },\n// \n//     /**\n//      * 生成数据访问表达式代码\n//      *\n//      * @param {Object?} accessorExpr accessor表达式对象\n//      * @return {string}\n//      */\n//     dataAccess: function (accessorExpr) {\n//         var code = 'componentCtx.data';\n//         if (accessorExpr) {\n//             each(accessorExpr.paths, function (path) {\n//                 if (path.type === ExprType.ACCESSOR) {\n//                     code += '[' + compileExprSource.dataAccess(path) + ']';\n//                     return;\n//                 }\n// \n//                 switch (typeof path.value) {\n//                     case 'string':\n//                         code += '.' + path.value;\n//                         break;\n// \n//                     case 'number':\n//                         code += '[' + path.value + ']';\n//                         break;\n//                 }\n//             });\n//         }\n// \n//         return code;\n//     },\n// \n//     /**\n//      * 生成插值代码\n//      *\n//      * @param {Object} interpExpr 插值表达式对象\n//      * @return {string}\n//      */\n//     interp: function (interpExpr) {\n//         var code = compileExprSource.expr(interpExpr.expr);\n// \n// \n//         each(interpExpr.filters, function (filter) {\n//             code = 'componentCtx.callFilter(\"' + filter.name.paths[0].value + '\", [' + code;\n//             each(filter.args, function (arg) {\n//                 code += ', ' + compileExprSource.expr(arg);\n//             });\n//             code += '])';\n//         });\n// \n//         if (!interpExpr.original) {\n//             return 'escapeHTML(' + code + ')';\n//         }\n// \n//         return code;\n//     },\n// \n//     /**\n//      * 生成文本片段代码\n//      *\n//      * @param {Object} textExpr 文本片段表达式对象\n//      * @return {string}\n//      */\n//     text: function (textExpr) {\n//         if (textExpr.segs.length === 0) {\n//             return '\"\"';\n//         }\n// \n//         var code = '';\n// \n//         each(textExpr.segs, function (seg) {\n//             var segCode = compileExprSource.expr(seg);\n//             code += code ? ' + ' + segCode : segCode;\n//         });\n// \n//         return code;\n//     },\n// \n//     /**\n//      * 生成数组字面量代码\n//      *\n//      * @param {Object} arrayExpr 数组字面量表达式对象\n//      * @return {string}\n//      */\n//     array: function (arrayExpr) {\n//         var code = [];\n// \n//         each(arrayExpr.items, function (item) {\n//             code.push((item.spread ? '...' : '') + compileExprSource.expr(item.expr));\n//         });\n// \n//         return '[\\n' + code.join(',\\n') + '\\n]';\n//     },\n// \n//     /**\n//      * 生成对象字面量代码\n//      *\n//      * @param {Object} objExpr 对象字面量表达式对象\n//      * @return {string}\n//      */\n//     object: function (objExpr) {\n//         var code = [];\n// \n//         each(objExpr.items, function (item) {\n//             if (item.spread) {\n//                 code.push('...' + compileExprSource.expr(item.expr));\n//             }\n//             else {\n//                 code.push(compileExprSource.expr(item.name) + ':' + compileExprSource.expr(item.expr));\n//             }\n//         });\n// \n//         return '{\\n' + code.join(',\\n') + '\\n}';\n//     },\n// \n//     /**\n//      * 二元表达式操作符映射表\n//      *\n//      * @type {Object}\n//      */\n//     binaryOp: {\n//         /* eslint-disable */\n//         43: '+',\n//         45: '-',\n//         42: '*',\n//         47: '/',\n//         60: '<',\n//         62: '>',\n//         76: '&&',\n//         94: '!=',\n//         121: '<=',\n//         122: '==',\n//         123: '>=',\n//         155: '!==',\n//         183: '===',\n//         248: '||'\n//         /* eslint-enable */\n//     },\n// \n//     /**\n//      * 生成表达式代码\n//      *\n//      * @param {Object} expr 表达式对象\n//      * @return {string}\n//      */\n//     expr: function (expr) {\n//         switch (expr.type) {\n//             case ExprType.UNARY:\n//                 return '!' + compileExprSource.expr(expr.expr);\n// \n//             case ExprType.BINARY:\n//                 return compileExprSource.expr(expr.segs[0])\n//                     + compileExprSource.binaryOp[expr.operator]\n//                     + compileExprSource.expr(expr.segs[1]);\n// \n//             case ExprType.TERTIARY:\n//                 return compileExprSource.expr(expr.segs[0])\n//                     + '?' + compileExprSource.expr(expr.segs[1])\n//                     + ':' + compileExprSource.expr(expr.segs[2]);\n// \n//             case ExprType.STRING:\n//                 return compileExprSource.stringLiteralize(expr.literal || expr.value);\n// \n//             case ExprType.NUMBER:\n//                 return expr.value;\n// \n//             case ExprType.BOOL:\n//                 return expr.value ? 'true' : 'false';\n// \n//             case ExprType.ACCESSOR:\n//                 return compileExprSource.dataAccess(expr);\n// \n//             case ExprType.INTERP:\n//                 return compileExprSource.interp(expr);\n// \n//             case ExprType.TEXT:\n//                 return compileExprSource.text(expr);\n// \n//             case ExprType.ARRAY:\n//                 return compileExprSource.array(expr);\n// \n//             case ExprType.OBJECT:\n//                 return compileExprSource.object(expr);\n//         }\n//     }\n// };\n// #[end]\n\n// exports = module.exports = compileExprSource;\n\n\n/**\n * @file 编译源码的中间buffer类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var compileExprSource = require('./compile-expr-source');\n\n\n// #[begin] ssr\n// /**\n//  * 编译源码的中间buffer类\n//  *\n//  * @class\n//  */\n// function CompileSourceBuffer() {\n//     this.segs = [];\n// }\n// \n// /**\n//  * 添加原始代码，将原封不动输出\n//  *\n//  * @param {string} code 原始代码\n//  */\n// CompileSourceBuffer.prototype.addRaw = function (code) {\n//     this.segs.push({\n//         type: 'RAW',\n//         code: code\n//     });\n// };\n// \n// /**\n//  * 添加被拼接为html的原始代码\n//  *\n//  * @param {string} code 原始代码\n//  */\n// CompileSourceBuffer.prototype.joinRaw = function (code) {\n//     this.segs.push({\n//         type: 'JOIN_RAW',\n//         code: code\n//     });\n// };\n// \n// /**\n//  * 添加renderer方法的起始源码\n//  */\n// CompileSourceBuffer.prototype.addRendererStart = function () {\n//     this.addRaw('function (data, parentCtx, givenSlots) {');\n//     this.addRaw('var html = \"\";');\n// };\n// \n// /**\n//  * 添加renderer方法的结束源码\n//  */\n// CompileSourceBuffer.prototype.addRendererEnd = function () {\n//     this.addRaw('return html;');\n//     this.addRaw('}');\n// };\n// \n// /**\n//  * 添加被拼接为html的静态字符串\n//  *\n//  * @param {string} str 被拼接的字符串\n//  */\n// CompileSourceBuffer.prototype.joinString = function (str) {\n//     this.segs.push({\n//         str: str,\n//         type: 'JOIN_STRING'\n//     });\n// };\n// \n// /**\n//  * 添加被拼接为html的数据访问\n//  *\n//  * @param {Object?} accessor 数据访问表达式对象\n//  */\n// CompileSourceBuffer.prototype.joinDataStringify = function () {\n//     this.segs.push({\n//         type: 'JOIN_DATA_STRINGIFY'\n//     });\n// };\n// \n// /**\n//  * 添加被拼接为html的表达式\n//  *\n//  * @param {Object} expr 表达式对象\n//  */\n// CompileSourceBuffer.prototype.joinExpr = function (expr) {\n//     this.segs.push({\n//         expr: expr,\n//         type: 'JOIN_EXPR'\n//     });\n// };\n// \n// /**\n//  * 生成编译后代码\n//  *\n//  * @return {string}\n//  */\n// CompileSourceBuffer.prototype.toCode = function () {\n//     var code = [];\n//     var temp = '';\n// \n//     function genStrLiteral() {\n//         if (temp) {\n//             code.push('html += ' + compileExprSource.stringLiteralize(temp) + ';');\n//         }\n// \n//         temp = '';\n//     }\n// \n//     each(this.segs, function (seg) {\n//         if (seg.type === 'JOIN_STRING') {\n//             temp += seg.str;\n//             return;\n//         }\n// \n//         genStrLiteral();\n//         switch (seg.type) {\n//             case 'JOIN_DATA_STRINGIFY':\n//                 code.push('html += stringifier.any(' + compileExprSource.dataAccess() + ');');\n//                 break;\n// \n//             case 'JOIN_EXPR':\n//                 code.push('html += ' + compileExprSource.expr(seg.expr) + ';');\n//                 break;\n// \n//             case 'JOIN_RAW':\n//                 code.push('html += ' + seg.code + ';');\n//                 break;\n// \n//             case 'RAW':\n//                 code.push(seg.code);\n//                 break;\n// \n//         }\n//     });\n// \n//     genStrLiteral();\n// \n//     return code.join('\\n');\n// };\n// \n// #[end]\n\n// exports = module.exports = CompileSourceBuffer;\n\n\n/**\n * @file 将组件编译成 render 方法的 js 源码\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var parseExpr = require('../parser/parse-expr');\n// var createANode = require('../parser/create-a-node');\n// var cloneDirectives = require('../parser/clone-directives');\n// var autoCloseTags = require('../browser/auto-close-tags');\n// var CompileSourceBuffer = require('./compile-source-buffer');\n// var compileExprSource = require('./compile-expr-source');\n// var rinseCondANode = require('./rinse-cond-anode');\n// var getANodeProp = require('./get-a-node-prop');\n\n// #[begin] ssr\n// \n// /**\n//  * 生成序列化时起始桩的html\n//  *\n//  * @param {string} type 桩类型标识\n//  * @param {string?} content 桩内的内容\n//  * @return {string}\n//  */\n// function serializeStump(type, content) {\n//     return '<!--s-' + type + (content ? ':' + content : '') + '-->';\n// }\n// \n// /**\n//  * 生成序列化时结束桩的html\n//  *\n//  * @param {string} type 桩类型标识\n//  * @return {string}\n//  */\n// function serializeStumpEnd(type) {\n//     return '<!--/s-' + type + '-->';\n// }\n// \n// /**\n//  * element 的编译方法集合对象\n//  *\n//  * @inner\n//  */\n// var elementSourceCompiler = {\n// \n//     /* eslint-disable max-params */\n//     /**\n//      * 编译元素标签头\n//      *\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {string} tagName 标签名\n//      * @param {Array} props 属性列表\n//      * @param {string?} extraProp 额外的属性串\n//      */\n//     tagStart: function (sourceBuffer, tagName, props, extraProp, bindDirective) {\n//         sourceBuffer.joinString('<' + tagName);\n//         sourceBuffer.joinString(extraProp || '');\n// \n//         // index list\n//         var propsIndex = {};\n//         each(props, function (prop) {\n//             propsIndex[prop.name] = prop;\n//         });\n// \n//         each(props, function (prop) {\n//             if (prop.name === 'slot') {\n//                 return;\n//             }\n// \n//             if (prop.name === 'value') {\n//                 switch (tagName) {\n//                     case 'textarea':\n//                         return;\n// \n//                     case 'select':\n//                         sourceBuffer.addRaw('$selectValue = '\n//                             + compileExprSource.expr(prop.expr)\n//                             + ' || \"\";'\n//                         );\n//                         return;\n// \n//                     case 'option':\n//                         sourceBuffer.addRaw('$optionValue = '\n//                             + compileExprSource.expr(prop.expr)\n//                             + ';'\n//                         );\n//                         // value\n//                         sourceBuffer.addRaw('if ($optionValue != null) {');\n//                         sourceBuffer.joinRaw('\" value=\\\\\"\" + $optionValue + \"\\\\\"\"');\n//                         sourceBuffer.addRaw('}');\n// \n//                         // selected\n//                         sourceBuffer.addRaw('if ($optionValue === $selectValue) {');\n//                         sourceBuffer.joinString(' selected');\n//                         sourceBuffer.addRaw('}');\n//                         return;\n//                 }\n//             }\n// \n//             switch (prop.name) {\n//                 case 'readonly':\n//                 case 'disabled':\n//                 case 'multiple':\n//                     if (prop.raw === '') {\n//                         sourceBuffer.joinString(' ' + prop.name);\n//                     }\n//                     else {\n//                         sourceBuffer.joinRaw('boolAttrFilter(\"' + prop.name + '\", '\n//                             + compileExprSource.expr(prop.expr)\n//                             + ')'\n//                         );\n//                     }\n//                     break;\n// \n//                 case 'checked':\n//                     if (tagName === 'input') {\n//                         var valueProp = propsIndex.value;\n//                         var valueCode = compileExprSource.expr(valueProp.expr);\n// \n//                         if (valueProp) {\n//                             switch (propsIndex.type.raw) {\n//                                 case 'checkbox':\n//                                     sourceBuffer.addRaw('if (contains('\n//                                         + compileExprSource.expr(prop.expr)\n//                                         + ', '\n//                                         + valueCode\n//                                         + ')) {'\n//                                     );\n//                                     sourceBuffer.joinString(' checked');\n//                                     sourceBuffer.addRaw('}');\n//                                     break;\n// \n//                                 case 'radio':\n//                                     sourceBuffer.addRaw('if ('\n//                                         + compileExprSource.expr(prop.expr)\n//                                         + ' === '\n//                                         + valueCode\n//                                         + ') {'\n//                                     );\n//                                     sourceBuffer.joinString(' checked');\n//                                     sourceBuffer.addRaw('}');\n//                                     break;\n//                             }\n//                         }\n//                     }\n//                     break;\n// \n//                 default:\n//                     if (prop.attr) {\n//                         sourceBuffer.joinString(' ' + prop.attr);\n//                     }\n//                     else {\n//                         sourceBuffer.joinRaw('attrFilter(\"' + prop.name + '\", '\n//                             + (prop.x ? 'escapeHTML(' : '')\n//                             + compileExprSource.expr(prop.expr)\n//                             + (prop.x ? ')' : '')\n//                             + ')'\n//                         );\n//                     }\n//                     break;\n//             }\n//         });\n// \n//         if (bindDirective) {\n//             sourceBuffer.addRaw(\n//                 '(function ($bindObj) {for (var $key in $bindObj) {'\n//                 + 'var $value = $bindObj[$key];'\n//             );\n// \n//             if (tagName === 'textarea') {\n//                 sourceBuffer.addRaw(\n//                     'if ($key === \"value\") {'\n//                     + 'continue;'\n//                     + '}'\n//                 );\n//             }\n// \n//             sourceBuffer.addRaw('switch ($key) {\\n'\n//                 + 'case \"readonly\":\\n'\n//                 + 'case \"disabled\":\\n'\n//                 + 'case \"multiple\":\\n'\n//                 + 'case \"multiple\":\\n'\n//                 + 'html += boolAttrFilter($key, escapeHTML($value));\\n'\n//                 + 'break;\\n'\n//                 + 'default:\\n'\n//                 + 'html += attrFilter($key, escapeHTML($value));'\n//                 + '}'\n//             );\n// \n//             sourceBuffer.addRaw(\n//                 '}})('\n//                 + compileExprSource.expr(bindDirective.value)\n//                 + ');'\n//             );\n//         }\n// \n//         sourceBuffer.joinString('>');\n//     },\n//     /* eslint-enable max-params */\n// \n//     /**\n//      * 编译元素闭合\n//      *\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {string} tagName 标签名\n//      */\n//     tagEnd: function (sourceBuffer, tagName) {\n//         if (!autoCloseTags[tagName]) {\n//             sourceBuffer.joinString('</' + tagName + '>');\n//         }\n// \n//         if (tagName === 'select') {\n//             sourceBuffer.addRaw('$selectValue = null;');\n//         }\n// \n//         if (tagName === 'option') {\n//             sourceBuffer.addRaw('$optionValue = null;');\n//         }\n//     },\n// \n//     /**\n//      * 编译元素内容\n//      *\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {ANode} aNode 元素的抽象节点信息\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     inner: function (sourceBuffer, aNode, owner) {\n//         // inner content\n//         if (aNode.tagName === 'textarea') {\n//             var valueProp = getANodeProp(aNode, 'value');\n//             if (valueProp) {\n//                 sourceBuffer.joinRaw('escapeHTML('\n//                     + compileExprSource.expr(valueProp.expr)\n//                     + ')'\n//                 );\n//             }\n// \n//             return;\n//         }\n// \n//         var htmlDirective = aNode.directives.html;\n//         if (htmlDirective) {\n//             sourceBuffer.joinExpr(htmlDirective.value);\n//         }\n//         else {\n//             /* eslint-disable no-use-before-define */\n//             each(aNode.children, function (aNodeChild) {\n//                 sourceBuffer.addRaw(aNodeCompiler.compile(aNodeChild, sourceBuffer, owner));\n//             });\n//             /* eslint-enable no-use-before-define */\n//         }\n//     }\n// };\n// \n// /**\n//  * ANode 的编译方法集合对象\n//  *\n//  * @inner\n//  */\n// var aNodeCompiler = {\n// \n//     /**\n//      * 编译节点\n//      *\n//      * @param {ANode} aNode 抽象节点\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      * @param {Object} extra 编译所需的一些额外信息\n//      */\n//     compile: function (aNode, sourceBuffer, owner, extra) {\n//         extra = extra || {};\n//         var compileMethod = 'compileElement';\n// \n//         if (aNode.textExpr) {\n//             compileMethod = 'compileText';\n//         }\n//         else if (aNode.directives['if']) { // eslint-disable-line dot-notation\n//             compileMethod = 'compileIf';\n//         }\n//         else if (aNode.directives['for']) { // eslint-disable-line dot-notation\n//             compileMethod = 'compileFor';\n//         }\n//         else if (aNode.tagName === 'slot') {\n//             compileMethod = 'compileSlot';\n//         }\n//         else if (aNode.tagName === 'template') {\n//             compileMethod = 'compileTemplate';\n//         }\n//         else {\n//             var ComponentType = owner.getComponentType\n//                 ? owner.getComponentType(aNode)\n//                 : owner.components[aNode.tagName];\n//             if (ComponentType) {\n//                 compileMethod = 'compileComponent';\n//                 extra.ComponentClass = ComponentType;\n//             }\n//         }\n// \n//         aNodeCompiler[compileMethod](aNode, sourceBuffer, owner, extra);\n//     },\n// \n//     /**\n//      * 编译文本节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      */\n//     compileText: function (aNode, sourceBuffer) {\n//         if (aNode.textExpr.original) {\n//             sourceBuffer.joinString(serializeStump('text'));\n//         }\n// \n//         sourceBuffer.joinExpr(aNode.textExpr);\n// \n//         if (aNode.textExpr.original) {\n//             sourceBuffer.joinString(serializeStumpEnd('text'));\n//         }\n//     },\n// \n//     /**\n//      * 编译template节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileTemplate: function (aNode, sourceBuffer, owner) {\n//         elementSourceCompiler.inner(sourceBuffer, aNode, owner);\n//     },\n// \n//     /**\n//      * 编译 if 节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileIf: function (aNode, sourceBuffer, owner) {\n//         sourceBuffer.addRaw('(function () {');\n// \n//         sourceBuffer.addRaw('var ifIndex = null;');\n// \n//         // output main if\n//         var ifDirective = aNode.directives['if']; // eslint-disable-line dot-notation\n//         sourceBuffer.addRaw('if (' + compileExprSource.expr(ifDirective.value) + ') {');\n//         sourceBuffer.addRaw(\n//             aNodeCompiler.compile(\n//                 rinseCondANode(aNode),\n//                 sourceBuffer,\n//                 owner\n//             )\n//         );\n//         sourceBuffer.addRaw('}');\n// \n//         // output elif and else\n//         each(aNode.elses, function (elseANode, index) {\n//             var elifDirective = elseANode.directives.elif;\n//             if (elifDirective) {\n//                 sourceBuffer.addRaw('else if (' + compileExprSource.expr(elifDirective.value) + ') {');\n//             }\n//             else {\n//                 sourceBuffer.addRaw('else {');\n//             }\n// \n//             sourceBuffer.addRaw(\n//                 aNodeCompiler.compile(\n//                     rinseCondANode(elseANode),\n//                     sourceBuffer,\n//                     owner\n//                 )\n//             );\n//             sourceBuffer.addRaw('}');\n//         });\n// \n//         sourceBuffer.addRaw('})();');\n//     },\n// \n//     /**\n//      * 编译 for 节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileFor: function (aNode, sourceBuffer, owner) {\n//         var forElementANode = createANode({\n//             children: aNode.children,\n//             props: aNode.props,\n//             events: aNode.events,\n//             tagName: aNode.tagName,\n//             directives: cloneDirectives(aNode.directives, {\n//                 'for': 1\n//             }),\n//             hotspot: aNode.hotspot\n//         });\n// \n//         var forDirective = aNode.directives['for']; // eslint-disable-line dot-notation\n//         var itemName = forDirective.item.raw;\n//         var indexName = forDirective.index.raw;\n//         var listName = guid();\n// \n//         if (indexName === '$index') {\n//             indexName = guid();\n//         }\n// \n//         sourceBuffer.addRaw('var ' + listName + ' = ' + compileExprSource.expr(forDirective.value) + ';');\n//         sourceBuffer.addRaw('if (' + listName + ' instanceof Array) {');\n// \n//         // for array\n//         sourceBuffer.addRaw('for ('\n//             + 'var ' + indexName + ' = 0; '\n//             + indexName + ' < ' + listName + '.length; '\n//             + indexName + '++) {'\n//         );\n//         sourceBuffer.addRaw('componentCtx.data.' + indexName + '=' + indexName + ';');\n//         sourceBuffer.addRaw('componentCtx.data.' + itemName + '= ' + listName + '[' + indexName + '];');\n//         sourceBuffer.addRaw(\n//             aNodeCompiler.compile(\n//                 forElementANode,\n//                 sourceBuffer,\n//                 owner\n//             )\n//         );\n//         sourceBuffer.addRaw('}');\n// \n//         sourceBuffer.addRaw('} else if (typeof ' + listName + ' === \"object\") {');\n// \n//         // for object\n//         sourceBuffer.addRaw('for (var ' + indexName + ' in ' + listName + ') {');\n//         sourceBuffer.addRaw('if (' + listName + '[' + indexName + '] != null) {');\n//         sourceBuffer.addRaw('componentCtx.data.' + indexName + '=' + indexName + ';');\n//         sourceBuffer.addRaw('componentCtx.data.' + itemName + '= ' + listName + '[' + indexName + '];');\n//         sourceBuffer.addRaw(\n//             aNodeCompiler.compile(\n//                 forElementANode,\n//                 sourceBuffer,\n//                 owner\n//             )\n//         );\n//         sourceBuffer.addRaw('}');\n//         sourceBuffer.addRaw('}');\n// \n//         sourceBuffer.addRaw('}');\n//     },\n// \n//     /**\n//      * 编译 slot 节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileSlot: function (aNode, sourceBuffer, owner) {\n//         sourceBuffer.addRaw('(function () {');\n// \n//         sourceBuffer.addRaw('function $defaultSlotRender(componentCtx) {');\n//         sourceBuffer.addRaw('  var html = \"\";');\n//         each(aNode.children, function (aNodeChild) {\n//             sourceBuffer.addRaw(aNodeCompiler.compile(aNodeChild, sourceBuffer, owner));\n//         });\n//         sourceBuffer.addRaw('  return html;');\n//         sourceBuffer.addRaw('}');\n// \n//         sourceBuffer.addRaw('  var $givenSlot = [];');\n// \n//         var nameProp = getANodeProp(aNode, 'name');\n//         if (nameProp) {\n//             sourceBuffer.addRaw('var $slotName = ' + compileExprSource.expr(nameProp.expr) + ';');\n//         }\n//         else {\n//             sourceBuffer.addRaw('var $slotName = null;');\n//         }\n// \n//         sourceBuffer.addRaw('var $ctxGivenSlots = componentCtx.givenSlots;');\n//         sourceBuffer.addRaw('for (var $i = 0; $i < $ctxGivenSlots.length; $i++) {');\n//         sourceBuffer.addRaw('  if ($ctxGivenSlots[$i][1] == $slotName) {');\n//         sourceBuffer.addRaw('    $givenSlot.push($ctxGivenSlots[$i][0]);');\n//         sourceBuffer.addRaw('  }');\n//         sourceBuffer.addRaw('}');\n// \n// \n//         sourceBuffer.addRaw('var $isInserted = $givenSlot.length > 0;');\n//         sourceBuffer.addRaw('if (!$isInserted) { $givenSlot.push($defaultSlotRender); }');\n// \n//         sourceBuffer.addRaw('var $slotCtx = $isInserted ? componentCtx.owner : componentCtx;');\n// \n//         if (aNode.vars || aNode.directives.bind) {\n//             sourceBuffer.addRaw('$slotCtx = {data: extend({}, $slotCtx.data), filters: $slotCtx.filters, callFilter: $slotCtx.callFilter};'); // eslint-disable-line\n// \n//             if (aNode.directives.bind) {\n//                 sourceBuffer.addRaw('extend($slotCtx.data, ' + compileExprSource.expr(aNode.directives.bind.value) + ');'); // eslint-disable-line\n//             }\n// \n//             each(aNode.vars, function (varItem) {\n//                 sourceBuffer.addRaw(\n//                     '$slotCtx.data[\"' + varItem.name + '\"] = '\n//                     + compileExprSource.expr(varItem.expr)\n//                     + ';'\n//                 );\n//             });\n//         }\n// \n//         sourceBuffer.addRaw('for (var $renderIndex = 0; $renderIndex < $givenSlot.length; $renderIndex++) {');\n//         sourceBuffer.addRaw('  html += $givenSlot[$renderIndex]($slotCtx);');\n//         sourceBuffer.addRaw('}');\n// \n//         sourceBuffer.addRaw('})();');\n//     },\n// \n//     /**\n//      * 编译普通节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      * @param {Object} extra 编译所需的一些额外信息\n//      */\n//     compileElement: function (aNode, sourceBuffer, owner, extra) {\n//         extra = extra || {};\n//         // if (aNode.tagName === 'option'\n//         //     && !getANodeProp(aNode, 'value')\n//         //     && aNode.children[0]\n//         // ) {\n//         //     aNode.props.push({\n//         //         name: 'value',\n//         //         expr: aNode.children[0].textExpr\n//         //     });\n//         // }\n// \n//         elementSourceCompiler.tagStart(\n//             sourceBuffer,\n//             aNode.tagName,\n//             aNode.props,\n//             extra.prop,\n//             aNode.directives.bind\n//         );\n// \n//         elementSourceCompiler.inner(sourceBuffer, aNode, owner);\n//         elementSourceCompiler.tagEnd(sourceBuffer, aNode.tagName);\n//     },\n// \n//     /**\n//      * 编译组件节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      * @param {Object} extra 编译所需的一些额外信息\n//      * @param {Function} extra.ComponentClass 对应组件类\n//      */\n//     compileComponent: function (aNode, sourceBuffer, owner, extra) {\n//         if (aNode) {\n//             sourceBuffer.addRaw('var $slotName = null;');\n//             sourceBuffer.addRaw('var $givenSlots = [];');\n//             each(aNode.children, function (child) {\n//                 var slotBind = !child.textExpr && getANodeProp(child, 'slot');\n//                 if (slotBind) {\n//                     sourceBuffer.addRaw('$slotName = ' + compileExprSource.expr(slotBind.expr) + ';');\n//                     sourceBuffer.addRaw('$givenSlots.push([function (componentCtx) {');\n//                     sourceBuffer.addRaw('  var html = \"\";');\n//                     sourceBuffer.addRaw(aNodeCompiler.compile(child, sourceBuffer, owner));\n//                     sourceBuffer.addRaw('  return html;');\n//                     sourceBuffer.addRaw('}, $slotName]);');\n//                 }\n//                 else {\n//                     sourceBuffer.addRaw('$givenSlots.push([function (componentCtx) {');\n//                     sourceBuffer.addRaw('  var html = \"\";');\n//                     sourceBuffer.addRaw(aNodeCompiler.compile(child, sourceBuffer, owner));\n//                     sourceBuffer.addRaw('  return html;');\n//                     sourceBuffer.addRaw('}]);');\n//                 }\n//             });\n//         }\n// \n//         var ComponentClass = extra.ComponentClass;\n//         var component = new ComponentClass({\n//             aNode: aNode,\n//             owner: owner,\n//             subTag: aNode.tagName\n//         });\n// \n//         var givenData = [];\n// \n//         each(component.binds, function (prop) {\n//             givenData.push(\n//                 compileExprSource.stringLiteralize(prop.name)\n//                 + ':'\n//                 + compileExprSource.expr(prop.expr)\n//             );\n//         });\n// \n//         var givenDataHTML = '{' + givenData.join(',\\n') + '}';\n//         if (aNode.directives.bind){\n//             givenDataHTML = 'extend('\n//                 + compileExprSource.expr(aNode.directives.bind.value)\n//                  + ', '\n//                 + givenDataHTML\n//                 + ')';\n//         }\n// \n//         sourceBuffer.addRaw('html += (');\n//         sourceBuffer.addRendererStart();\n//         compileComponentSource(sourceBuffer, component, extra && extra.prop);\n//         sourceBuffer.addRendererEnd();\n//         sourceBuffer.addRaw(')(' + givenDataHTML + ', componentCtx, $givenSlots);');\n//         sourceBuffer.addRaw('$givenSlots = null;');\n//     }\n// };\n// /* eslint-disable guard-for-in */\n// \n// /**\n//  * 生成组件 renderer 时 ctx 对象构建的代码\n//  *\n//  * @inner\n//  * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//  * @param {Object} component 组件实例\n//  * @param {string?} extraProp 额外的属性串\n//  */\n// function compileComponentSource(sourceBuffer, component, extraProp) {\n//     sourceBuffer.addRaw(genComponentContextCode(component));\n//     sourceBuffer.addRaw('componentCtx.owner = parentCtx;');\n//     sourceBuffer.addRaw('componentCtx.givenSlots = givenSlots;');\n// \n// \n//     sourceBuffer.addRaw('data = extend(componentCtx.data, data);');\n//     sourceBuffer.addRaw('for (var $i = 0; $i < componentCtx.computedNames.length; $i++) {');\n//     sourceBuffer.addRaw('  var $computedName = componentCtx.computedNames[$i];');\n//     sourceBuffer.addRaw('  data[$computedName] = componentCtx.computed[$computedName]();');\n//     sourceBuffer.addRaw('}');\n// \n//     extraProp = extraProp || '';\n// \n//     var eventDeclarations = [];\n//     for (var key in component.listeners) {\n//         each(component.listeners[key], function (listener) {\n//             if (listener.declaration) {\n//                 eventDeclarations.push(listener.declaration);\n//             }\n//         });\n//     }\n// \n//     elementSourceCompiler.tagStart(\n//         sourceBuffer,\n//         component.tagName,\n//         component.aNode.props,\n//         extraProp,\n//         component.aNode.directives.bind\n//     );\n// \n//     if (!component.owner) {\n//         sourceBuffer.joinString('<!--s-data:');\n//         sourceBuffer.joinDataStringify();\n//         sourceBuffer.joinString('-->');\n//     }\n// \n// \n// \n//     elementSourceCompiler.inner(sourceBuffer, component.aNode, component);\n//     elementSourceCompiler.tagEnd(sourceBuffer, component.tagName);\n// }\n// \n// var stringifier = {\n//     obj: function (source) {\n//         var prefixComma;\n//         var result = '{';\n// \n//         for (var key in source) {\n//             if (typeof source[key] === 'undefined') {\n//                 continue;\n//             }\n// \n//             if (prefixComma) {\n//                 result += ',';\n//             }\n//             prefixComma = 1;\n// \n//             result += compileExprSource.stringLiteralize(key) + ':' + stringifier.any(source[key]);\n//         }\n// \n//         return result + '}';\n//     },\n// \n//     arr: function (source) {\n//         var prefixComma;\n//         var result = '[';\n// \n//         each(source, function (value) {\n//             if (prefixComma) {\n//                 result += ',';\n//             }\n//             prefixComma = 1;\n// \n//             result += stringifier.any(value);\n//         });\n// \n//         return result + ']';\n//     },\n// \n//     str: function (source) {\n//         return compileExprSource.stringLiteralize(source);\n//     },\n// \n//     date: function (source) {\n//         return 'new Date(' + source.getTime() + ')';\n//     },\n// \n//     any: function (source) {\n//         switch (typeof source) {\n//             case 'string':\n//                 return stringifier.str(source);\n// \n//             case 'number':\n//                 return '' + source;\n// \n//             case 'boolean':\n//                 return source ? 'true' : 'false';\n// \n//             case 'object':\n//                 if (!source) {\n//                     return null;\n//                 }\n// \n//                 if (source instanceof Array) {\n//                     return stringifier.arr(source);\n//                 }\n// \n//                 if (source instanceof Date) {\n//                     return stringifier.date(source);\n//                 }\n// \n//                 return stringifier.obj(source);\n//         }\n// \n//         throw new Error('Cannot Stringify:' + source);\n//     }\n// };\n// \n// /**\n//  * 生成组件 renderer 时 ctx 对象构建的代码\n//  *\n//  * @inner\n//  * @param {Object} component 组件实例\n//  * @return {string}\n//  */\n// function genComponentContextCode(component) {\n//     var code = ['var componentCtx = {'];\n// \n//     // given anode\n//     code.push('givenSlots: [],');\n// \n//     // filters\n//     code.push('filters: {');\n//     var filterCode = [];\n//     for (var key in component.filters) {\n//         var filter = component.filters[key];\n// \n//         if (typeof filter === 'function') {\n//             filterCode.push(key + ': ' + filter.toString());\n//         }\n//     }\n//     code.push(filterCode.join(','));\n//     code.push('},');\n// \n//     code.push(\n//         'callFilter: function (name, args) {',\n//         '    var filter = this.filters[name] || DEFAULT_FILTERS[name];',\n//         '    if (typeof filter === \"function\") {',\n//         '        return filter.apply(this, args);',\n//         '    }',\n//         '},'\n//     );\n// \n//     /* eslint-disable no-redeclare */\n//     // computed obj\n//     code.push('computed: {');\n//     var computedCode = [];\n//     for (var key in component.computed) {\n//         var computed = component.computed[key];\n// \n//         if (typeof computed === 'function') {\n//             computedCode.push(key + ': '\n//                 + computed.toString().replace(\n//                     /this.data.get\\(([^\\)]+)\\)/g,\n//                     function (match, exprLiteral) {\n//                         var exprStr = (new Function('return ' + exprLiteral))();\n//                         var expr = parseExpr(exprStr);\n// \n//                         return compileExprSource.expr(expr);\n//                     })\n//             );\n//         }\n//     }\n//     code.push(computedCode.join(','));\n//     code.push('},');\n// \n//     // computed names\n//     code.push('computedNames: [');\n//     computedCode = [];\n//     for (var key in component.computed) {\n//         var computed = component.computed[key];\n// \n//         if (typeof computed === 'function') {\n//             computedCode.push('\"' + key + '\"');\n//         }\n//     }\n//     code.push(computedCode.join(','));\n//     code.push('],');\n//     /* eslint-enable no-redeclare */\n// \n//     // data\n//     code.push('data: ' + stringifier.any(component.data.get()) + ',');\n// \n//     // tagName\n//     code.push('tagName: \"' + component.tagName + '\"');\n//     code.push('};');\n// \n//     return code.join('\\n');\n// }\n// \n// /* eslint-enable guard-for-in */\n// \n// /* eslint-disable no-unused-vars */\n// /* eslint-disable fecs-camelcase */\n// \n// /**\n//  * 组件编译的模板函数\n//  *\n//  * @inner\n//  */\n// function componentCompilePreCode() {\n//     var $version = '3.6.2';\n// \n//     function extend(target, source) {\n//         if (source) {\n//             Object.keys(source).forEach(function (key) {\n//                 let value = source[key];\n//                 if (typeof value !== 'undefined') {\n//                     target[key] = value;\n//                 }\n//             });\n//         }\n// \n//         return target;\n//     }\n// \n//     function each(array, iterator) {\n//         if (array && array.length > 0) {\n//             for (var i = 0, l = array.length; i < l; i++) {\n//                 if (iterator(array[i], i) === false) {\n//                     break;\n//                 }\n//             }\n//         }\n//     }\n// \n//     function contains(array, value) {\n//         var result;\n//         each(array, function (item) {\n//             result = item === value;\n//             return !result;\n//         });\n// \n//         return result;\n//     }\n// \n//     var HTML_ENTITY = {\n//         /* jshint ignore:start */\n//         '&': '&amp;',\n//         '<': '&lt;',\n//         '>': '&gt;',\n//         '\"': '&quot;',\n//         /* eslint-disable quotes */\n//         \"'\": '&#39;'\n//         /* eslint-enable quotes */\n//         /* jshint ignore:end */\n//     };\n// \n//     function htmlFilterReplacer(c) {\n//         return HTML_ENTITY[c];\n//     }\n// \n//     function escapeHTML(source) {\n//         if (source == null) {\n//             return '';\n//         }\n// \n//         return String(source).replace(/[&<>\"']/g, htmlFilterReplacer);\n//     }\n// \n//     var DEFAULT_FILTERS = {\n//         url: encodeURIComponent,\n//         _class: function (source) {\n//             if (source instanceof Array) {\n//                 return source.join(' ');\n//             }\n// \n//             return source;\n//         },\n//         _style: function (source) {\n//             if (typeof source === 'object') {\n//                 var result = '';\n//                 if (source) {\n//                     Object.keys(source).forEach(function (key) {\n//                         result += key + ':' + source[key] + ';';\n//                     });\n//                 }\n// \n//                 return result;\n//             }\n// \n//             return source || '';\n//         },\n//         _sep: function (source, sep) {\n//             return source ? sep + source : '';\n//         }\n//     };\n// \n//     function attrFilter(name, value) {\n//         if (value) {\n//             return ' ' + name + '=\"' + value + '\"';\n//         }\n// \n//         return '';\n//     }\n// \n//     function boolAttrFilter(name, value) {\n//         if (value && value !== 'false' && value !== '0') {\n//             return ' ' + name;\n//         }\n// \n//         return '';\n//     }\n// \n//     function stringLiteralize(source) {\n//         return '\"'\n//             + source\n//                 .replace(/\\x5C/g, '\\\\\\\\')\n//                 .replace(/\"/g, '\\\\\"')\n//                 .replace(/\\x0A/g, '\\\\n')\n//                 .replace(/\\x09/g, '\\\\t')\n//                 .replace(/\\x0D/g, '\\\\r')\n//             + '\"';\n//     }\n// \n//     var stringifier = {\n//         obj: function (source) {\n//             var prefixComma;\n//             var result = '{';\n// \n//             Object.keys(source).forEach(function (key) {\n//                 if (typeof source[key] === 'undefined') {\n//                     return;\n//                 }\n// \n//                 if (prefixComma) {\n//                     result += ',';\n//                 }\n//                 prefixComma = 1;\n// \n//                 result += stringLiteralize(key) + ':' + stringifier.any(source[key]);\n//             });\n// \n//             return result + '}';\n//         },\n// \n//         arr: function (source) {\n//             var prefixComma;\n//             var result = '[';\n// \n//             each(source, function (value) {\n//                 if (prefixComma) {\n//                     result += ',';\n//                 }\n//                 prefixComma = 1;\n// \n//                 result += stringifier.any(value);\n//             });\n// \n//             return result + ']';\n//         },\n// \n//         str: function (source) {\n//             return stringLiteralize(source);\n//         },\n// \n//         date: function (source) {\n//             return 'new Date(' + source.getTime() + ')';\n//         },\n// \n//         any: function (source) {\n//             switch (typeof source) {\n//                 case 'string':\n//                     return stringifier.str(source);\n// \n//                 case 'number':\n//                     return '' + source;\n// \n//                 case 'boolean':\n//                     return source ? 'true' : 'false';\n// \n//                 case 'object':\n//                     if (!source) {\n//                         return null;\n//                     }\n// \n//                     if (source instanceof Array) {\n//                         return stringifier.arr(source);\n//                     }\n// \n//                     if (source instanceof Date) {\n//                         return stringifier.date(source);\n//                     }\n// \n//                     return stringifier.obj(source);\n//             }\n// \n//             throw new Error('Cannot Stringify:' + source);\n//         }\n//     };\n// }\n// /* eslint-enable no-unused-vars */\n// /* eslint-enable fecs-camelcase */\n// \n// /**\n//  * 将组件编译成 render 方法的 js 源码\n//  *\n//  * @param {Function} ComponentClass 组件类\n//  * @return {string}\n//  */\n// function compileJSSource(ComponentClass) {\n//     var sourceBuffer = new CompileSourceBuffer();\n// \n//     sourceBuffer.addRendererStart();\n//     sourceBuffer.addRaw(\n//         componentCompilePreCode.toString()\n//             .split('\\n')\n//             .slice(1)\n//             .join('\\n')\n//             .replace(/\\}\\s*$/, '')\n//     );\n// \n//     // 先初始化个实例，让模板编译成 ANode，并且能获得初始化数据\n//     var component = new ComponentClass();\n// \n//     compileComponentSource(sourceBuffer, component);\n//     sourceBuffer.addRendererEnd();\n//     return sourceBuffer.toCode();\n// }\n// #[end]\n\n// exports = module.exports = compileJSSource;\n\n    /* eslint-disable no-unused-vars */\n//     var nextTick = require('./util/next-tick');\n//     var inherits = require('./util/inherits');\n//     var parseTemplate = require('./parser/parse-template');\n//     var parseExpr = require('./parser/parse-expr');\n//     var ExprType = require('./parser/expr-type');\n//     var LifeCycle = require('./view/life-cycle');\n//     var NodeType = require('./view/node-type');\n//     var Component = require('./view/component');\n//     var compileComponent = require('./view/compile-component');\n//     var defineComponent = require('./view/define-component');\n//     var emitDevtool = require('./util/emit-devtool');\n//     var compileJSSource = require('./view/compile-js-source');\n//     var Data = require('./runtime/data');\n//     var evalExpr = require('./runtime/eval-expr');\n//     var DataTypes = require('./util/data-types');\n\n\n    var san = {\n        /**\n         * san版本号\n         *\n         * @type {string}\n         */\n        version: '3.6.2',\n\n        // #[begin] devtool\n        /**\n         * 是否开启调试。开启调试时 devtool 会工作\n         *\n         * @type {boolean}\n         */\n        debug: true,\n        // #[end]\n\n        // #[begin] ssr\n//         /**\n//          * 将组件类编译成 renderer 方法\n//          *\n//          * @param {Function} ComponentClass 组件类\n//          * @return {function(Object):string}\n//          */\n//         compileToRenderer: function (ComponentClass) {\n//             var renderer = ComponentClass.__ssrRenderer;\n// \n//             if (!renderer) {\n//                 var code = compileJSSource(ComponentClass);\n//                 renderer = (new Function('return ' + code))();\n//                 ComponentClass.__ssrRenderer = renderer;\n//             }\n// \n//             return renderer;\n//         },\n// \n//         /**\n//          * 将组件类编译成 renderer 方法的源文件\n//          *\n//          * @param {Function} ComponentClass 组件类\n//          * @return {string}\n//          */\n//         compileToSource: compileJSSource,\n        // #[end]\n\n        /**\n         * 组件基类\n         *\n         * @type {Function}\n         */\n        Component: Component,\n\n        /**\n         * 创建组件类\n         *\n         * @param {Object} proto 组件类的方法表\n         * @return {Function}\n         */\n        defineComponent: defineComponent,\n\n        /**\n         * 编译组件类。预解析template和components\n         *\n         * @param {Function} ComponentClass 组件类\n         */\n        compileComponent: compileComponent,\n\n        /**\n         * 解析 template\n         *\n         * @inner\n         * @param {string} source template 源码\n         * @return {ANode}\n         */\n        parseTemplate: parseTemplate,\n\n        /**\n         * 解析表达式\n         *\n         * @param {string} source 源码\n         * @return {Object}\n         */\n        parseExpr: parseExpr,\n\n        /**\n         * 表达式类型枚举\n         *\n         * @const\n         * @type {Object}\n         */\n        ExprType: ExprType,\n\n        /**\n         * 生命周期\n         */\n        LifeCycle: LifeCycle,\n\n        /**\n         * 节点类型\n         *\n         * @const\n         * @type {Object}\n         */\n        NodeType: NodeType,\n\n        /**\n         * 在下一个更新周期运行函数\n         *\n         * @param {Function} fn 要运行的函数\n         */\n        nextTick: nextTick,\n\n        /**\n         * 数据类\n         *\n         * @class\n         * @param {Object?} data 初始数据\n         * @param {Data?} parent 父级数据对象\n         */\n        Data: Data,\n\n        /**\n         * 计算表达式的值\n         *\n         * @param {Object} expr 表达式对象\n         * @param {Data} data 数据对象\n         * @param {Component=} owner 组件对象，用于表达式中filter的执行\n         * @return {*}\n         */\n        evalExpr: evalExpr,\n\n        /**\n         * 构建类之间的继承关系\n         *\n         * @param {Function} subClass 子类函数\n         * @param {Function} superClass 父类函数\n         */\n        inherits: inherits,\n\n        /**\n         * DataTypes\n         *\n         * @type {Object}\n         */\n        DataTypes: DataTypes\n    };\n\n    // export\n    if (typeof exports === 'object' && typeof module === 'object') {\n        // For CommonJS\n        exports = module.exports = san;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        // For AMD\n        define('san', [], san);\n    }\n    else {\n        // For <script src=\"...\"\n        root.san = san;\n    }\n\n    // #[begin] devtool\n    emitDevtool.start(san);\n    // #[end]\n})(this);\n","var __san_script__, __san_template__\nvar __san_styles__ = {}\nrequire(\"!!style-loader!css-loader?sourceMap!../node_modules/_san-loader@0.0.7@san-loader/lib/style-rewriter.js!../node_modules/_san-loader@0.0.7@san-loader/lib/selector.js?type=style&index=0!./app.san\")\n__san_script__ = require(\"!!!../node_modules/_san-loader@0.0.7@san-loader/lib/selector.js?type=script&index=0!./app.san\")\nif (__san_script__ &&\n    __san_script__.__esModule &&\n    Object.keys(__san_script__).length > 1) {\n  console.warn(\"[san-loader] src\\\\app.san: named exports in *.san files are ignored.\")}\n__san_template__ = require(\"!!html-loader?minimize=false!../node_modules/_san-loader@0.0.7@san-loader/lib/selector.js?type=template&index=0!./app.san\")\nvar __san_proto__ = {}\nif (__san_script__) {\n  __san_proto__ = __san_script__.__esModule\n    ? __san_script__['default']\n    : __san_script__\n}\nif (__san_template__) {\n  __san_proto__.template = __san_template__\n}\nvar san = require(\"san\")\nvar __san_exports__ = san.defineComponent(__san_proto__)\nmodule.exports = __san_exports__\nif (module.exports.__esModule) module.exports = module.exports['default']\nif (!__san_exports__.computed) __san_exports__.computed = {}\nObject.keys(__san_styles__).forEach(function (key) {\nvar module = __san_styles__[key]\n__san_exports__.computed[key] = function () { return module }\n})\n","module.exports = \"\\n<div>\\n    <div class=\\\"hello\\\">hello {{msg}}</div>\\n    <ul>\\n    <li s-for=\\\"item in list\\\">{{item}}</li>\\n    </ul>\\n    <p>Hello {{name}}</p>\\n    <div>\\n    <input value=\\\"{= name =}\\\" placeholder=\\\"please input\\\">\\n    'hello {{name}}'\\n    </div>\\n<div>\\n\";","<template>\r\n    <div>\r\n        <div class=\"hello\">hello {{msg}}</div>\r\n        <ul>\r\n        <li s-for=\"item in list\">{{item}}</li>\r\n        </ul>\r\n        <p>Hello {{name}}</p>\r\n        <div>\r\n        <input value=\"{= name =}\" placeholder=\"please input\">\r\n        'hello {{name}}'\r\n        </div>\r\n    <div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    initData: function(){\r\n        return {\r\n            name: 'San',\r\n            msg: 'world'\r\n        }\r\n    },\r\n    attached: function(){\r\n        this.data.set('list',['san','er','esui','etpl','esl'])\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n    .hello {\r\n        color: red\r\n    }\r\n</style>","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","exports = module.exports = require(\"../node_modules/_css-loader@1.0.0@css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n.hello {\\n    color: red\\n}\\n\", \"\", {\"version\":3,\"sources\":[\"c:/Users/lin/Desktop/baidu-ife/MVVM学院/1.2/webpack/src/app.san?d88a6288\"],\"names\":[],\"mappings\":\";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;IACA,UAAA;CACA\",\"file\":\"app.san\",\"sourcesContent\":[\"<template>\\r\\n    <div>\\r\\n        <div class=\\\"hello\\\">hello {{msg}}</div>\\r\\n        <ul>\\r\\n        <li s-for=\\\"item in list\\\">{{item}}</li>\\r\\n        </ul>\\r\\n        <p>Hello {{name}}</p>\\r\\n        <div>\\r\\n        <input value=\\\"{= name =}\\\" placeholder=\\\"please input\\\">\\r\\n        'hello {{name}}'\\r\\n        </div>\\r\\n    <div>\\r\\n</template>\\r\\n\\r\\n<script>\\r\\nexport default {\\r\\n    initData: function(){\\r\\n        return {\\r\\n            name: 'San',\\r\\n            msg: 'world'\\r\\n        }\\r\\n    },\\r\\n    attached: function(){\\r\\n        this.data.set('list',['san','er','esui','etpl','esl'])\\r\\n    }\\r\\n}\\r\\n\\r\\n</script>\\r\\n\\r\\n<style>\\r\\n    .hello {\\r\\n        color: red\\r\\n    }\\r\\n</style>\"],\"sourceRoot\":\"\"}]);\n\n// exports\n","\nvar content = require(\"!!../node_modules/_css-loader@1.0.0@css-loader/index.js?sourceMap!../node_modules/_san-loader@0.0.7@san-loader/lib/style-rewriter.js!../node_modules/_san-loader@0.0.7@san-loader/lib/selector.js?type=style&index=0!./app.san\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/_style-loader@0.21.0@style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/_css-loader@1.0.0@css-loader/index.js?sourceMap!../node_modules/_san-loader@0.0.7@san-loader/lib/style-rewriter.js!../node_modules/_san-loader@0.0.7@san-loader/lib/selector.js?type=style&index=0!./app.san\", function() {\n\t\tvar newContent = require(\"!!../node_modules/_css-loader@1.0.0@css-loader/index.js?sourceMap!../node_modules/_san-loader@0.0.7@san-loader/lib/style-rewriter.js!../node_modules/_san-loader@0.0.7@san-loader/lib/selector.js?type=style&index=0!./app.san\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","import san from \"san\";\r\nimport { router } from \"san-router\";\r\nimport San from \"./app.san\";\r\n\r\nlet body = '123'\r\nconsole.log(body)\r\n\r\nconsole.log('hello webpack  San')\r\n\r\nrouter.add({rule: '/',Component:San, target: '#app'})\r\n\r\nrouter.start()\r\n"],"sourceRoot":""}