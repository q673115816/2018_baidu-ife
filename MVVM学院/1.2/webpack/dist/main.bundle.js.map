{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/_san@3.6.2@san/dist/san.dev.js","webpack:///./node_modules/_san-router@1.2.0@san-router/dist/san-router.source.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/app.san","webpack:///./src/app.san?ba4c","webpack:///app.san","webpack:///./node_modules/_style-loader@0.21.0@style-loader/lib/urls.js","webpack:///./node_modules/_style-loader@0.21.0@style-loader/lib/addStyles.js","webpack:///./node_modules/_css-loader@1.0.0@css-loader/lib/css-base.js","webpack:///./src/app.san?4da7","webpack:///./src/app.san?4424","webpack:///./node_modules/_process@0.11.10@process/browser.js","webpack:///./node_modules/_setimmediate@1.0.5@setimmediate/setImmediate.js","webpack:///./node_modules/_timers-browserify@2.0.10@timers-browserify/main.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","e","setImmediate","root","guidIndex","guidPrefix","Date","getTime","toString","slice","guid","empty","extend","target","source","inherits","subClass","superClass","subClassProto","F","Function","constructor","each","array","iterator","length","func","thisArg","nativeBind","Array","apply","arguments","args","concat","on","el","eventName","listener","capture","addEventListener","attachEvent","un","removeEventListener","detachEvent","splitStr2Obj","result","split","svgTags","createEl","tagName","document","createElementNS","createElement","removeEl","parentNode","removeChild","nextHandler","nextTasks","isNativePromise","Promise","test","nextTick","fn","push","tasks","MessageChannel","channel","port","port2","port1","onmessage","postMessage","resolve","then","setTimeout","ieVersionMatch","navigator","userAgent","match","ie","ieOldThan9","trigger","event","createEvent","initEvent","dispatchEvent","activeElement","autoCloseTags","ANONYMOUS_CLASS_NAME","getDataType","obj","nodeType","toLowerCase","createChainableChecker","validate","chainedChecker","isRequired","checkType","data","dataName","componentName","fullDataName","dataValue","dataType","Error","createPrimaryTypeChecker","type","DataTypes","Walker","this","len","index","createANode","options","textExpr","directives","props","events","children","kebab2camel","replace","alpha","toUpperCase","any","string","number","bool","symbol","arrayOf","arrayItemChecker","instanceOf","expectedClass","dataValueClassName","expectedClassName","shape","shapeTypes","shapeKeyName","checker","oneOf","expectedEnumValues","join","oneOfType","expectedEnumOfTypeValues","objectOf","typeChecker","dataKeyName","exact","secret","dataValueType","allKeys","currentCode","charCode","cut","start","end","go","distance","nextCode","charCodeAt","goUntil","code","reg","isMatchStart","lastIndex","exec","ExprType","STRING","NUMBER","BOOL","ACCESSOR","INTERP","CALL","TEXT","BINARY","UNARY","TERTIARY","OBJECT","ARRAY","createAccessor","paths","readIdent","walker","readTertiaryExpr","conditional","readLogicalORExpr","expr","readLogicalANDExpr","readRelationalExpr","operator","segs","yesExpr","readAccessor","firstSeg","accessorLoop","readUnaryExpr","startCode","startIndex","walkLoop","literal","arrItems","item","spread","items","objItems","walkerIndexBeforeName","readMultiplicativeExpr","readAdditiveExpr","parseExpr","raw","readCall","defaultArgs","ident","parseCall","parseInterp","interp","filters","callExpr","original","ENTITY_DECODE_MAP","lt","gt","nbsp","quot","emsp","ensp","thinsp","copy","zwnj","zwj","amp","regexpLiteral","parseText","delimiters","exprMatch","exprStartReg","RegExp","beforeIndex","pushStringToSeg","text","String","fromCharCode","parseInt","delimEndLen","interpSource","interpLen","directiveParsers","for","directive","trackBy","ref","if","elif","else","html","transition","postProp","prop","integrateAttr","aNode","realName","prefix","prefixIndex","indexOf","colonIndex","modifier","parser","integrateProp","vars","xMatch","x","seg","getXPath","stack","currentTagName","path","parseTemplate","trimWhitespace","rootNode","tagMatch","tagReg","attrReg","currentNode","stackIndex","beforeLastIndex","tagEnd","pushTextNode","closeIndex","aElement","tagClose","nextCharCode","attrMatch","parentChildrenLen","parentChild","elses","splice","tbodyNode","DEFAULT_FILTERS","url","encodeURIComponent","_class","_style","_sep","sep","evalExpr","owner","dataCache","leftValue","rightValue","itemValue","filter","filterName","evalArgs","buf","set","dataCacheSource","dataCacheClearly","clear","id","changeExprCompareExprs","changeExpr","exprs","changeExprCompare","changePaths","changeLen","pathExpr","Math","max","filterResult","lifeCycleOwnIs","LifeCycle","compiled","is","inited","created","attached","leaving","detached","disposed","NodeType","IF","FOR","ELEM","CMPT","SLOT","TPL","getANodeProp","hotspot","HTML_ATTR_PROP_MAP","readonly","cellpadding","cellspacing","colspan","rowspan","valign","usemap","frameborder","defaultElementPropHandler","element","propName","setAttribute","output","bindInfo","svgPropHandler","boolPropHandler","defaultElementPropHandlers","style","cssText","class","className","slot","disabled","autofocus","required","draggable","analInputChecker","checkbox","radio","a","b","elementPropHandlers","input","multiple","checked","state","oper","bindValue","bindType","scope","bindChecked","hintExpr","option","parentSelect","parent","selectValue","selected","select","getPropHandler","attrName","tagPropHandlers","propHandler","isDataChangeByElement","change","changeTarget","findMethod","nameExpr","method","Data","listeners","immutableSet","exprPaths","isNaN","eventDeclarationListener","eventBind","isComponentEvent","$event","window","checkDataTypes","setTypeChecker","listen","unlisten","fire","silent","silence","quiet","callee","exprRaw","force","merge","oldValue","returnValue","newArray","deleteCount","insertions","pop","shift","unshift","removeAt","remove","isBrowser","insertBefore","targetEl","parentEl","beforeEl","appendChild","warnSetHTML","message","console","warn","isEndStump","getNodePath","node","nodePaths","nodeParent","anode","subTag","TextNode","reverseWalker","current","sel","goNext","createTextNode","attach","content","createComment","tempFlag","insertAdjacentHTML","dispose","_prev","textUpdateProp","textContent","unionKeys","obj1","obj2","changesIsInDataRef","changes","dataRef","overview","extOverview","wildOverview","DOMChildrenWalker","next","child","firstChild","nextSibling","Element","lifeCycle","_elFns","parentComponent","elementInitTagName","nodeSBindInit","_toPhase","reverseElementChildren","_attached","nodeDispose","_ondisposed","sBind","_sbindData","nodeSBindUpdate","updater","newBindData","keys","createReverseNode","parentIsComponent","childOwner","childScope","IfNode","ForNode","SlotNode","TemplateNode","ComponentType","getComponentType","components","elementDisposeChildren","noDetach","noTransition","elementUpdateChildren","_update","elementOwnToPhase","createNode","nodeOwnOnlyChildrenAttach","aNodeChildren","realANode","nameBind","isNamed","givenChildren","givenSlots","named","noname","isInserted","initData","me","varItem","isScoped","slotChildren","aNodeChild","cloneDirectives","excludes","nodeOwnSimpleDispose","nodeOwnCreateStump","ForItemData","forElement","createForDirectiveChild","itemScope","itemANode","param","listData","eachForData","_create","forNode","rinseCondANode","cond","elseIndex","elseANode","handleProp","startRemoveEl","removeTarget","elementOwnAttach","detach","elementOwnDetach","elementOwnDispose","elementOwnCreate","_onEl","elementOwnOnEl","_doneLeave","leaveDispose","elementDispose","disposeNoDetach","disposeNoTransition","dynamicProps","j","htmlDirective","innerHTML","elementOwnAttached","isFromOuter","_notifyNeedReload","varKeys","scopedChanges","relation","exprResolve","resolveItem","resolvedPaths","_createChildren","oldIsArr","newIsArr","_disposeChildren","_updateArray","callback","parentFirstChild","parentLastChild","lastChild","violentClear","disposedChildCount","disposeChild","childDisposed","replaceNode","cloneNode","replaceChild","newList","oldChildrenLen","childrenChanges","pushToChildrenChanges","isChildrenRebuild","disposeChildren","newLen","cIndex","forLen","changeIndex","_splice","_set","getItemKey","getForKey","newIndex","oldIndex","lcsFlags","newListKeys","oldListKeys","lcsFlag","changeStart","insertionsLen","newCount","indexChange","deleteLen","spliceArgs","newChildrenLen","lengthChange","_doCreateAndUpdate","doCreateAndUpdate","nextChild","childANode","newChild","san4devtool","emptyPropWhenCreate","isComponent","sourceNode","elementAttach","_contentReady","elementGetTransition","cmptGivenTransition","givenANode","elementLeave","leave","warnEventListenMethod","valid","inputOnCompositionEnd","composing","inputOnCompositionStart","xPropOutputer","xProp","inputXPropOutputer","outputer","xProps","CompositionEvent","nativeEvents","native","_isInitFromEl","enter","emitDevtool","arg","debug","__san_devtool__","emit","Component","clazz","computed","messages","compileComponent","ComponentClass","recordHotspotData","refs","notContentData","analyseANodeHotspot","analyseExprDataHotspot","idProp","valueProp","protoANode","givenNamedSlotBinds","firstCommentNode","stumpMatch","stumpText","previousSibling","_createGivenSlots","binds","dataTypes","dataTypeChecker","dataTypeName","computedDeps","_calcComputed","dataChanger","_dataChanger","defineComponent","proto","componentClass","_cmptReady","tpl","template","componentPropExtra","extra","analyseExprs","main","slotBind","givenSlotInited","slotName","_callHook","declaration","nameListeners","computedExpr","watch","dispatch","receiver","childrenTraversal","refTarget","needReloadForSlot","bindItem","setExpr","updateExpr","_repaintChildren","slotChildrenLen","slotChild","dataChanges","_updateBindxOwner","updateScopeExpr","_aftercreated","dataExpr","san","version","configurable","base","sourceLoc","_parseUrl2","baseLoc","sourcePath","sourceSegs","baseSegs","queryString","hash","params","query","hashStart","queryStart","forEach","querySeg","equalIndex","decodeURIComponent","EventTarget","instance","Constructor","TypeError","_eventListeners","_main","_resolveUrl2","clicker","href","router","locator","redirect","preventDefault","_eventTarget2","_interopRequireDefault","getLocation","location","Locator","_EventTarget","_this","self","ReferenceError","referrer","hashChangeHandler","writable","setPrototypeOf","__proto__","stop","isChanged","reload","pathname","search","popstateHandler","history","pushState","isSupport","Link","Router","_hash2","_html2","_link2","_elementSelector2","routeID","C","_type","_ref$mode","routes","routeAlives","locatorRedirectHandler","routeItem","_i","rule","config","listenerEvent","resume","suspend","doNext","routeAction","doRoute","component","setMode","_this2","isUpdateAlive","routeAlive","attachCmpt","Cmpt","handler","add","_config$target","regText","isStarted","restart","_typeof","selector","querySelector","getElementById","g","eval","__san_script__","__san_template__","__san_styles__","__san_proto__","__san_exports__","__webpack_exports__","msg","css","baseUrl","protocol","host","currentDir","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","JSON","stringify","stylesInDom","isOldIE","memo","all","atob","getElement","styleTarget","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","domStyle","parts","addStyle","listToStyles","list","newStyles","part","media","sourceMap","insertStyleElement","insertInto","lastStyleElementInsertedAtTop","insertAt","before","removeStyleElement","idx","createStyleElement","attrs","addAttrs","update","transform","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","btoa","link","rel","autoFixUrls","convertToAbsoluteUrls","unescape","blob","oldSrc","styleSheet","newObj","DEBUG","mayRemove","replaceText","textStore","replacement","Boolean","cssNode","childNodes","useSourceMap","map","cssMapping","sourceMapping","sourceURLs","sources","sourceRoot","mediaQuery","alreadyImportedModules","names","mappings","file","sourcesContent","hmr","locals","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","Item","noop","title","browser","env","argv","versions","addListener","once","off","removeListener","removeAllListeners","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","global","undefined","registerImmediate","nextHandle","tasksByHandle","currentlyRunningATask","doc","attachTo","getPrototypeOf","handle","runIfPresent","importScripts","postMessageIsAsynchronous","oldOnMessage","messagePrefix","random","onGlobalMessage","documentElement","script","onreadystatechange","task","clearImmediate","Timeout","clearFn","_id","_clearFn","setInterval","clearInterval","close","unref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","log","san_router__WEBPACK_IMPORTED_MODULE_1__","_app_san__WEBPACK_IMPORTED_MODULE_2___default","san__WEBPACK_IMPORTED_MODULE_0___default","body"],"mappings":"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","file":"main.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","/**\n * San\n * Copyright 2016 Baidu Inc. All rights reserved.\n *\n * @file 主文件\n * @author errorrik(errorrik@gmail.com)\n *         otakustay(otakustay@gmail.com)\n *         junmer(junmer@foxmail.com)\n */\n\n(function (root) {\n    // 人工调整打包代码顺序，通过注释手工写一些依赖\n//     // require('./util/guid');\n//     // require('./util/empty');\n//     // require('./util/extend');\n//     // require('./util/inherits');\n//     // require('./util/each');\n//     // require('./util/contains');\n//     // require('./util/bind');\n//     // require('./browser/on');\n//     // require('./browser/un');\n//     // require('./browser/svg-tags');\n//     // require('./browser/create-el');\n//     // require('./browser/remove-el');\n//     // require('./util/next-tick');\n//     // require('./browser/ie');\n//     // require('./browser/ie-old-than-9');\n//     // require('./browser/input-event-compatible');\n//     // require('./browser/auto-close-tags');\n//     // require('./util/data-types.js');\n//     // require('./util/create-data-types-checker.js');\n//     // require('./parser/walker');\n//     // require('./parser/create-a-node');\n//     // require('./parser/parse-template');\n//     // require('./runtime/change-expr-compare');\n//     // require('./runtime/data-change-type');\n//     // require('./runtime/default-filters');\n//     // require('./view/life-cycle');\n//     // require('./view/node-type');\n//     // require('./view/get-prop-handler');\n//     // require('./view/is-data-change-by-element');\n//     // require('./view/event-declaration-listener');\n//     // require('./view/create-node');\n\n\n    /**\n * @file 生成唯一id\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 唯一id的起始值\n *\n * @inner\n * @type {number}\n */\nvar guidIndex = 1;\n\n/**\n * 唯一id的前缀\n *\n * @inner\n * @type {string}\n */\nvar guidPrefix = (new Date()).getTime().toString(16).slice(8);\n\n/**\n * 获取唯一id\n *\n * @inner\n * @return {string} 唯一id\n */\nfunction guid() {\n    return '_' + guidPrefix + (guidIndex++);\n}\n\n// exports = module.exports = guid;\n\n\n/**\n * @file 空函数\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 啥都不干\n */\nfunction empty() {}\n\n// exports = module.exports = empty;\n\n\n/**\n * @file 属性拷贝\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 对象属性拷贝\n *\n * @param {Object} target 目标对象\n * @param {Object} source 源对象\n * @return {Object} 返回目标对象\n */\nfunction extend(target, source) {\n    for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n            var value = source[key];\n            if (typeof value !== 'undefined') {\n                target[key] = value;\n            }\n        }\n    }\n\n    return target;\n}\n\n// exports = module.exports = extend;\n\n\n/**\n * @file 构建类之间的继承关系\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var extend = require('./extend');\n\n/**\n * 构建类之间的继承关系\n *\n * @param {Function} subClass 子类函数\n * @param {Function} superClass 父类函数\n */\nfunction inherits(subClass, superClass) {\n    /* jshint -W054 */\n    var subClassProto = subClass.prototype;\n    var F = new Function();\n    F.prototype = superClass.prototype;\n    subClass.prototype = new F();\n    subClass.prototype.constructor = subClass;\n    extend(subClass.prototype, subClassProto);\n    /* jshint +W054 */\n}\n\n// exports = module.exports = inherits;\n\n\n/**\n * @file 遍历数组\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 遍历数组集合\n *\n * @param {Array} array 数组源\n * @param {function(Any,number):boolean} iterator 遍历函数\n */\nfunction each(array, iterator) {\n    if (array && array.length > 0) {\n        for (var i = 0, l = array.length; i < l; i++) {\n            if (iterator(array[i], i) === false) {\n                break;\n            }\n        }\n    }\n}\n\n// exports = module.exports = each;\n\n\n/**\n * @file 判断数组中是否包含某项\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('./each');\n\n/**\n * 判断数组中是否包含某项\n *\n * @param {Array} array 数组\n * @param {*} value 包含的项\n * @return {boolean}\n */\nfunction contains(array, value) {\n    var result = false;\n    each(array, function (item) {\n        result = item === value;\n        return !result;\n    });\n\n    return result;\n}\n\n// exports = module.exports = contains;\n\n\n/**\n * @file bind函数\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * Function.prototype.bind 方法的兼容性封装\n *\n * @param {Function} func 要bind的函数\n * @param {Object} thisArg this指向对象\n * @param {...*} args 预设的初始参数\n * @return {Function}\n */\nfunction bind(func, thisArg) {\n    var nativeBind = Function.prototype.bind;\n    var slice = Array.prototype.slice;\n    // #[begin] allua\n    if (nativeBind && func.bind === nativeBind) {\n    // #[end]\n        return nativeBind.apply(func, slice.call(arguments, 1));\n    // #[begin] allua\n    }\n\n    var args = slice.call(arguments, 2);\n    return function () {\n        return func.apply(thisArg, args.concat(slice.call(arguments)));\n    };\n    // #[end]\n}\n\n// exports = module.exports = bind;\n\n\n/**\n * @file DOM 事件挂载\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * DOM 事件挂载\n *\n * @inner\n * @param {HTMLElement} el DOM元素\n * @param {string} eventName 事件名\n * @param {Function} listener 监听函数\n * @param {boolean} capture 是否是捕获阶段\n */\nfunction on(el, eventName, listener, capture) {\n    // #[begin] allua\n    if (el.addEventListener) {\n    // #[end]\n        el.addEventListener(eventName, listener, capture);\n    // #[begin] allua\n    }\n    else {\n        el.attachEvent('on' + eventName, listener);\n    }\n    // #[end]\n}\n\n// exports = module.exports = on;\n\n\n/**\n * @file DOM 事件卸载\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * DOM 事件卸载\n *\n * @inner\n * @param {HTMLElement} el DOM元素\n * @param {string} eventName 事件名\n * @param {Function} listener 监听函数\n * @param {boolean} capture 是否是捕获阶段\n */\nfunction un(el, eventName, listener, capture) {\n    // #[begin] allua\n    if (el.addEventListener) {\n    // #[end]\n        el.removeEventListener(eventName, listener, capture);\n    // #[begin] allua\n    }\n    else {\n        el.detachEvent('on' + eventName, listener);\n    }\n    // #[end]\n}\n\n// exports = module.exports = un;\n\n\n/**\n * @file 将字符串逗号切分返回对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n\n/**\n * 将字符串逗号切分返回对象\n *\n * @param {string} source 源字符串\n * @return {Object}\n */\nfunction splitStr2Obj(source) {\n    var result = {};\n    each(\n        source.split(','),\n        function (key) {\n            result[key] = 1;\n        }\n    );\n    return result;\n}\n\n// exports = module.exports = splitStr2Obj;\n\n\n/**\n * @file SVG标签表\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var splitStr2Obj = require('../util/split-str-2-obj');\n\n/**\n * svgTags\n *\n * @see https://www.w3.org/TR/SVG/svgdtd.html 只取常用\n * @type {Object}\n */\nvar svgTags = splitStr2Obj(''\n    // structure\n    + 'svg,g,defs,desc,metadata,symbol,use,'\n    // image & shape\n    + 'image,path,rect,circle,line,ellipse,polyline,polygon,'\n    // text\n    + 'text,tspan,tref,textpath,'\n    // other\n    + 'marker,pattern,clippath,mask,filter,cursor,view,animate,'\n    // font\n    + 'font,font-face,glyph,missing-glyph');\n\n// exports = module.exports = svgTags;\n\n\n/**\n * @file DOM创建\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var svgTags = require('./svg-tags');\n\n/**\n * 创建 DOM 元素\n *\n * @param  {string} tagName tagName\n * @return {HTMLElement}\n */\nfunction createEl(tagName) {\n    if (svgTags[tagName]) {\n        return document.createElementNS('http://www.w3.org/2000/svg', tagName);\n    }\n\n    return document.createElement(tagName);\n}\n\n// exports = module.exports = createEl;\n\n\n/**\n * @file 移除DOM\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 将 DOM 从页面中移除\n *\n * @param {HTMLElement} el DOM元素\n */\nfunction removeEl(el) {\n    if (el && el.parentNode) {\n        el.parentNode.removeChild(el);\n    }\n}\n\n// exports = module.exports = removeEl;\n\n\n/**\n * @file 在下一个时间周期运行任务\n * @author errorrik(errorrik@gmail.com)\n */\n\n// 该方法参照了vue2.5.0的实现，感谢vue团队\n// SEE: https://github.com/vuejs/vue/blob/0948d999f2fddf9f90991956493f976273c5da1f/src/core/util/env.js#L68\n\n\n// var bind = require('./bind');\n\n/**\n * 下一个周期要执行的任务列表\n *\n * @inner\n * @type {Array}\n */\nvar nextTasks = [];\n\n/**\n * 执行下一个周期任务的函数\n *\n * @inner\n * @type {Function}\n */\nvar nextHandler;\n\n/**\n * 浏览器是否支持原生Promise\n * 对Promise做判断，是为了禁用一些不严谨的Promise的polyfill\n *\n * @inner\n * @type {boolean}\n */\nvar isNativePromise = typeof Promise === 'function' && /native code/.test(Promise);\n\n/**\n * 在下一个时间周期运行任务\n *\n * @inner\n * @param {Function} fn 要运行的任务函数\n * @param {Object=} thisArg this指向对象\n */\nfunction nextTick(fn, thisArg) {\n    if (thisArg) {\n        fn = bind(fn, thisArg);\n    }\n    nextTasks.push(fn);\n\n    if (nextHandler) {\n        return;\n    }\n\n    nextHandler = function () {\n        var tasks = nextTasks.slice(0);\n        nextTasks = [];\n        nextHandler = null;\n\n        for (var i = 0, l = tasks.length; i < l; i++) {\n            tasks[i]();\n        }\n    };\n\n    // 非标准方法，但是此方法非常吻合要求。\n    if (typeof setImmediate === 'function') {\n        setImmediate(nextHandler);\n    }\n    // 用MessageChannel去做setImmediate的polyfill\n    // 原理是将新的message事件加入到原有的dom events之后\n    else if (typeof MessageChannel === 'function') {\n        var channel = new MessageChannel();\n        var port = channel.port2;\n        channel.port1.onmessage = nextHandler;\n        port.postMessage(1);\n    }\n    // for native app\n    else if (isNativePromise) {\n        Promise.resolve().then(nextHandler);\n    }\n    else {\n        setTimeout(nextHandler, 0);\n    }\n}\n\n// exports = module.exports = nextTick;\n\n\n/**\n * @file ie版本号\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 从userAgent中ie版本号的匹配信息\n *\n * @type {Array}\n */\nvar ieVersionMatch = typeof navigator !== 'undefined'\n    && navigator.userAgent.match(/msie\\s*([0-9]+)/i);\n\n/**\n * ie版本号，非ie时为0\n *\n * @type {number}\n */\nvar ie = ieVersionMatch ? ieVersionMatch[1] - 0 : 0;\n\n// exports = module.exports = ie;\n\n\n/**\n * @file 是否 IE 并且小于 9\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ie = require('./ie');\n\n// HACK:\n// 1. IE8下，设置innerHTML时如果以html comment开头，comment会被自动滤掉\n//    为了保证stump存在，需要设置完html后，createComment并appendChild/insertBefore\n// 2. IE8下，innerHTML还不支持custom element，所以需要用div替代，不用createElement\n// 3. 虽然IE8已经优化了字符串+连接，碎片化连接性能不再退化\n//    但是由于上面多个兼容场景都用 < 9 判断，所以字符串连接也沿用\n//    所以结果是IE8下字符串连接用的是数组join的方式\n\n// #[begin] allua\n/**\n * 是否 IE 并且小于 9\n */\nvar ieOldThan9 = ie && ie < 9;\n// #[end]\n\n// exports = module.exports = ieOldThan9;\n\n\n/**\n * @file DOM 事件挂载\n * @author dafrok(o.o@mug.dog)\n */\n\n/**\n * DOM 事件挂载\n *\n * @inner\n * @param {HTMLElement} el DOM元素\n * @param {string} eventName 事件名\n */\nfunction trigger(el, eventName) {\n    var event = document.createEvent('HTMLEvents');\n    event.initEvent(eventName, true, true);\n    el.dispatchEvent(event);\n}\n\n// exports = module.exports = trigger;\n\n\n/**\n * @file 解决 IE9 在表单元素中删除字符时不触发事件的问题\n * @author dafrok(o.o@mug.dog)\n */\n\n// var ie = require('./ie');\n// var on = require('./on');\n// var trigger = require('./trigger');\n\n// #[begin] allua\nif (ie === 9) {\n    on(document, 'selectionchange', function () {\n        var el = document.activeElement;\n        if (el.tagName === 'TEXTAREA' || el.tagName === 'INPUT') {\n            trigger(el, 'input');\n        }\n    });\n}\n// #[end]\n\n\n/**\n * @file 自闭合标签表\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var splitStr2Obj = require('../util/split-str-2-obj');\n\n/**\n * 自闭合标签列表\n *\n * @type {Object}\n */\nvar autoCloseTags = splitStr2Obj('area,base,br,col,embed,hr,img,input,keygen,param,source,track,wbr');\n\n// exports = module.exports = autoCloseTags;\n\n\n/**\n * @file data types\n * @author leon <ludafa@outlook.com>\n */\n\n// var bind = require('./bind');\n// var empty = require('./empty');\n// var extend = require('./extend');\n\n// #[begin] error\nvar ANONYMOUS_CLASS_NAME = '<<anonymous>>';\n\n/**\n * 获取精确的类型\n *\n * @NOTE 如果 obj 是一个 DOMElement，我们会返回 `element`；\n *\n * @param  {*} obj 目标\n * @return {string}\n */\nfunction getDataType(obj) {\n\n    if (obj && obj.nodeType === 1) {\n        return 'element';\n    }\n\n    return Object.prototype.toString\n        .call(obj)\n        .slice(8, -1)\n        .toLowerCase();\n}\n// #[end]\n\n/**\n * 创建链式的数据类型校验器\n *\n * @param  {Function} validate 真正的校验器\n * @return {Function}\n */\nfunction createChainableChecker(validate) {\n    var chainedChecker = function () {};\n    chainedChecker.isRequired = empty;\n\n    // 只在 error 功能启用时才有实际上的 dataTypes 检测\n    // #[begin] error\n    var checkType = function (isRequired, data, dataName, componentName, fullDataName) {\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        componentName = componentName || ANONYMOUS_CLASS_NAME;\n\n        // 如果是 null 或 undefined，那么要提前返回啦\n        if (dataValue == null) {\n            // 是 required 就报错\n            if (isRequired) {\n                throw new Error('[SAN ERROR] '\n                    + 'The `' + dataName + '` '\n                    + 'is marked as required in `' + componentName + '`, '\n                    + 'but its value is ' + dataType\n                );\n            }\n            // 不是 required，那就是 ok 的\n            return;\n        }\n\n        validate(data, dataName, componentName, fullDataName);\n\n    };\n\n    chainedChecker = bind(checkType, null, false);\n    chainedChecker.isRequired = bind(checkType, null, true);\n    // #[end]\n\n\n\n    return chainedChecker;\n\n}\n\n// #[begin] error\n/**\n * 生成主要类型数据校验器\n *\n * @param  {string} type 主类型\n * @return {Function}\n */\nfunction createPrimaryTypeChecker(type) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== type) {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected ' + type + ')'\n            );\n        }\n\n    });\n\n}\n\n\n\n/**\n * 生成 arrayOf 校验器\n *\n * @param  {Function} arrayItemChecker 数组中每项数据的校验器\n * @return {Function}\n */\nfunction createArrayOfChecker(arrayItemChecker) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (typeof arrayItemChecker !== 'function') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `arrayOf`, expected `function`'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== 'array') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected array)'\n            );\n        }\n\n        for (var i = 0, len = dataValue.length; i < len; i++) {\n            arrayItemChecker(dataValue, i, componentName, fullDataName + '[' + i + ']');\n        }\n\n    });\n\n}\n\n/**\n * 生成 instanceOf 检测器\n *\n * @param  {Function|Class} expectedClass 期待的类\n * @return {Function}\n */\nfunction createInstanceOfChecker(expectedClass) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        var dataValue = data[dataName];\n\n        if (dataValue instanceof expectedClass) {\n            return;\n        }\n\n        var dataValueClassName = dataValue.constructor && dataValue.constructor.name\n            ? dataValue.constructor.name\n            : ANONYMOUS_CLASS_NAME;\n\n        var expectedClassName = expectedClass.name || ANONYMOUS_CLASS_NAME;\n\n        throw new Error('[SAN ERROR] '\n            + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n            + '(' + dataValueClassName + ' supplied to ' + componentName + ', '\n            + 'expected instance of ' + expectedClassName + ')'\n        );\n\n\n    });\n\n}\n\n/**\n * 生成 shape 校验器\n *\n * @param  {Object} shapeTypes shape 校验规则\n * @return {Function}\n */\nfunction createShapeChecker(shapeTypes) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (getDataType(shapeTypes) !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + fullDataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `shape`, expected `object`'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected object)'\n            );\n        }\n\n        for (var shapeKeyName in shapeTypes) {\n            if (shapeTypes.hasOwnProperty(shapeKeyName)) {\n                var checker = shapeTypes[shapeKeyName];\n                if (typeof checker === 'function') {\n                    checker(dataValue, shapeKeyName, componentName, fullDataName + '.' + shapeKeyName);\n                }\n            }\n        }\n\n    });\n\n}\n\n/**\n * 生成 oneOf 校验器\n *\n * @param  {Array} expectedEnumValues 期待的枚举值\n * @return {Function}\n */\nfunction createOneOfChecker(expectedEnumValues) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (getDataType(expectedEnumValues) !== 'array') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + fullDataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `oneOf`, array is expected.'\n            );\n        }\n\n        var dataValue = data[dataName];\n\n        for (var i = 0, len = expectedEnumValues.length; i < len; i++) {\n            if (dataValue === expectedEnumValues[i]) {\n                return;\n            }\n        }\n\n        throw new Error('[SAN ERROR] '\n            + 'Invalid ' + componentName + ' data `' + fullDataName + '` of value'\n            + '(`' + dataValue + '` supplied to ' + componentName + ', '\n            + 'expected one of ' + expectedEnumValues.join(',') + ')'\n        );\n\n    });\n\n}\n\n/**\n * 生成 oneOfType 校验器\n *\n * @param  {Array<Function>} expectedEnumOfTypeValues 期待的枚举类型\n * @return {Function}\n */\nfunction createOneOfTypeChecker(expectedEnumOfTypeValues) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (getDataType(expectedEnumOfTypeValues) !== 'array') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `oneOf`, array is expected.'\n            );\n        }\n\n        var dataValue = data[dataName];\n\n        for (var i = 0, len = expectedEnumOfTypeValues.length; i < len; i++) {\n\n            var checker = expectedEnumOfTypeValues[i];\n\n            if (typeof checker !== 'function') {\n                continue;\n            }\n\n            try {\n                checker(data, dataName, componentName, fullDataName);\n                // 如果 checker 完成校验没报错，那就返回了\n                return;\n            }\n            catch (e) {\n                // 如果有错误，那么应该把错误吞掉\n            }\n\n        }\n\n        // 所有的可接受 type 都失败了，才丢一个异常\n        throw new Error('[SAN ERROR] '\n            + 'Invalid ' + componentName + ' data `' + dataName + '` of value'\n            + '(`' + dataValue + '` supplied to ' + componentName + ')'\n        );\n\n    });\n\n}\n\n/**\n * 生成 objectOf 校验器\n *\n * @param  {Function} typeChecker 对象属性值校验器\n * @return {Function}\n */\nfunction createObjectOfChecker(typeChecker) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (typeof typeChecker !== 'function') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `objectOf`, expected function'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + dataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected object)'\n            );\n        }\n\n        for (var dataKeyName in dataValue) {\n            if (dataValue.hasOwnProperty(dataKeyName)) {\n                typeChecker(\n                    dataValue,\n                    dataKeyName,\n                    componentName,\n                    fullDataName + '.' + dataKeyName\n                );\n            }\n        }\n\n\n    });\n\n}\n\n/**\n * 生成 exact 校验器\n *\n * @param  {Object} shapeTypes object 形态定义\n * @return {Function}\n */\nfunction createExactChecker(shapeTypes) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName, secret) {\n\n        if (getDataType(shapeTypes) !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `exact`'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataValueType = getDataType(dataValue);\n\n        if (dataValueType !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid data `' + fullDataName + '` of type `' + dataValueType + '`'\n                + '(supplied to ' + componentName + ', expected `object`)'\n            );\n        }\n\n        var allKeys = {};\n\n        // 先合入 shapeTypes\n        extend(allKeys, shapeTypes);\n        // 再合入 dataValue\n        extend(allKeys, dataValue);\n        // 保证 allKeys 的类型正确\n\n        for (var key in allKeys) {\n            if (allKeys.hasOwnProperty(key)) {\n                var checker = shapeTypes[key];\n\n                // dataValue 中有一个多余的数据项\n                if (!checker) {\n                    throw new Error('[SAN ERROR] '\n                        + 'Invalid data `' + fullDataName + '` key `' + key + '` '\n                        + 'supplied to `' + componentName + '`. '\n                        + '(`' + key + '` is not defined in `DataTypes.exact`)'\n                    );\n                }\n\n                if (!(key in dataValue)) {\n                    throw new Error('[SAN ERROR] '\n                        + 'Invalid data `' + fullDataName + '` key `' + key + '` '\n                        + 'supplied to `' + componentName + '`. '\n                        + '(`' + key + '` is marked `required` in `DataTypes.exact`)'\n                    );\n                }\n\n                checker(\n                    dataValue,\n                    key,\n                    componentName,\n                    fullDataName + '.' + key,\n                    secret\n                );\n\n            }\n        }\n\n    });\n\n}\n// #[end]\n\n\n\n/* eslint-disable fecs-valid-var-jsdoc */\nvar DataTypes = {\n    array: createChainableChecker(empty),\n    object: createChainableChecker(empty),\n    func: createChainableChecker(empty),\n    string: createChainableChecker(empty),\n    number: createChainableChecker(empty),\n    bool: createChainableChecker(empty),\n    symbol: createChainableChecker(empty),\n    any: createChainableChecker,\n    arrayOf: createChainableChecker,\n    instanceOf: createChainableChecker,\n    shape: createChainableChecker,\n    oneOf: createChainableChecker,\n    oneOfType: createChainableChecker,\n    objectOf: createChainableChecker,\n    exact: createChainableChecker\n};\n\n// #[begin] error\nDataTypes = {\n\n    any: createChainableChecker(empty),\n\n    // 类型检测\n    array: createPrimaryTypeChecker('array'),\n    object: createPrimaryTypeChecker('object'),\n    func: createPrimaryTypeChecker('function'),\n    string: createPrimaryTypeChecker('string'),\n    number: createPrimaryTypeChecker('number'),\n    bool: createPrimaryTypeChecker('boolean'),\n    symbol: createPrimaryTypeChecker('symbol'),\n\n    // 复合类型检测\n    arrayOf: createArrayOfChecker,\n    instanceOf: createInstanceOfChecker,\n    shape: createShapeChecker,\n    oneOf: createOneOfChecker,\n    oneOfType: createOneOfTypeChecker,\n    objectOf: createObjectOfChecker,\n    exact: createExactChecker\n\n};\n/* eslint-enable fecs-valid-var-jsdoc */\n// #[end]\n\n\n// module.exports = DataTypes;\n\n\n/**\n * @file 创建数据检测函数\n * @author leon<ludafa@outlook.com>\n */\n\n\n// #[begin] error\n\n/**\n * 创建数据检测函数\n *\n * @param  {Object} dataTypes     数据格式\n * @param  {string} componentName 组件名\n * @return {Function}\n */\nfunction createDataTypesChecker(dataTypes, componentName) {\n\n    /**\n     * 校验 data 是否满足 data types 的格式\n     *\n     * @param  {*} data 数据\n     */\n    return function (data) {\n\n        for (var dataTypeName in dataTypes) {\n\n            if (dataTypes.hasOwnProperty(dataTypeName)) {\n\n                var dataTypeChecker = dataTypes[dataTypeName];\n\n                if (typeof dataTypeChecker !== 'function') {\n                    throw new Error('[SAN ERROR] '\n                        + componentName + ':' + dataTypeName + ' is invalid; '\n                        + 'it must be a function, usually from san.DataTypes'\n                    );\n                }\n\n                dataTypeChecker(\n                    data,\n                    dataTypeName,\n                    componentName,\n                    dataTypeName\n                );\n\n\n            }\n        }\n\n    };\n\n}\n\n// #[end]\n\n// module.exports = createDataTypesChecker;\n\n\n/**\n * @file 字符串源码读取类\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 字符串源码读取类，用于模板字符串解析过程\n *\n * @class\n * @param {string} source 要读取的字符串\n */\nfunction Walker(source) {\n    this.source = source;\n    this.len = this.source.length;\n    this.index = 0;\n}\n\n/**\n * 获取当前字符码\n *\n * @return {number}\n */\nWalker.prototype.currentCode = function () {\n    return this.charCode(this.index);\n};\n\n/**\n * 截取字符串片段\n *\n * @param {number} start 起始位置\n * @param {number} end 结束位置\n * @return {string}\n */\nWalker.prototype.cut = function (start, end) {\n    return this.source.slice(start, end);\n};\n\n/**\n * 向前读取字符\n *\n * @param {number} distance 读取字符数\n */\nWalker.prototype.go = function (distance) {\n    this.index += distance;\n};\n\n/**\n * 读取下一个字符，返回下一个字符的 code\n *\n * @return {number}\n */\nWalker.prototype.nextCode = function () {\n    this.go(1);\n    return this.currentCode();\n};\n\n/**\n * 获取相应位置字符的 code\n *\n * @param {number} index 字符位置\n * @return {number}\n */\nWalker.prototype.charCode = function (index) {\n    return this.source.charCodeAt(index);\n};\n\n/**\n * 向前读取字符，直到遇到指定字符再停止\n * 未指定字符时，当遇到第一个非空格、制表符的字符停止\n *\n * @param {number=} charCode 指定字符的code\n * @return {boolean} 当指定字符时，返回是否碰到指定的字符\n */\nWalker.prototype.goUntil = function (charCode) {\n    var code;\n    while (this.index < this.len && (code = this.currentCode())) {\n        switch (code) {\n            // 空格 space\n            case 32:\n            // 制表符 tab\n            case 9:\n            // \\r\n            case 13:\n            // \\n\n            case 10:\n                this.index++;\n                break;\n            default:\n                if (code === charCode) {\n                    this.index++;\n                    return 1;\n                }\n                return;\n        }\n    }\n};\n\n/**\n * 向前读取符合规则的字符片段，并返回规则匹配结果\n *\n * @param {RegExp} reg 字符片段的正则表达式\n * @param {boolean} isMatchStart 是否必须匹配当前位置\n * @return {Array?}\n */\nWalker.prototype.match = function (reg, isMatchStart) {\n    reg.lastIndex = this.index;\n\n    var match = reg.exec(this.source);\n    if (match && (!isMatchStart || this.index === match.index)) {\n        this.index = reg.lastIndex;\n        return match;\n    }\n};\n\n// exports = module.exports = Walker;\n\n\n/**\n * @file 模板解析生成的抽象节点\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 创建模板解析生成的抽象节点\n *\n * @param {Object=} options 节点参数\n * @param {string=} options.tagName 标签名\n * @param {ANode=} options.parent 父节点\n * @param {boolean=} options.textExpr 文本节点表达式对象\n * @return {Object}\n */\nfunction createANode(options) {\n    options = options || {};\n\n    if (!options.textExpr) {\n        options.directives = options.directives || {};\n        options.props = options.props || [];\n        options.events = options.events || [];\n        options.children = options.children || [];\n    }\n\n    return options;\n}\n\n// exports = module.exports = createANode;\n\n\n/**\n * @file 把 kebab case 字符串转换成 camel case\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 把 kebab case 字符串转换成 camel case\n *\n * @param {string} source 源字符串\n * @return {string}\n */\nfunction kebab2camel(source) {\n    return source.replace(/-([a-z])/g, function (match, alpha) {\n        return alpha.toUpperCase();\n    });\n}\n\n// exports = module.exports = kebab2camel;\n\n\n/**\n * @file 表达式类型\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 表达式类型\n *\n * @const\n * @type {Object}\n */\nvar ExprType = {\n    STRING: 1,\n    NUMBER: 2,\n    BOOL: 3,\n    ACCESSOR: 4,\n    INTERP: 5,\n    CALL: 6,\n    TEXT: 7,\n    BINARY: 8,\n    UNARY: 9,\n    TERTIARY: 10,\n    OBJECT: 11,\n    ARRAY: 12\n};\n\n// exports = module.exports = ExprType;\n\n\n/**\n * @file 创建访问表达式对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n\n/**\n * 创建访问表达式对象\n *\n * @param {Array} paths 访问路径\n * @return {Object}\n */\nfunction createAccessor(paths) {\n    return {\n        type: ExprType.ACCESSOR,\n        paths: paths\n    };\n}\n\n// exports = module.exports = createAccessor;\n\n\n/**\n * @file 读取字符串\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var ExprType = require('./expr-type');\n\n/**\n * 读取字符串\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readString(walker) {\n    var startCode = walker.currentCode();\n    var startIndex = walker.index;\n    var charCode;\n\n    walkLoop: while ((charCode = walker.nextCode())) {\n        switch (charCode) {\n            case 92: // \\\n                walker.go(1);\n                break;\n            case startCode:\n                walker.go(1);\n                break walkLoop;\n        }\n    }\n\n    var literal = walker.cut(startIndex, walker.index);\n    return {\n        type: ExprType.STRING,\n        // 处理字符转义\n        value: (new Function('return ' + literal))()\n    };\n}\n\n// exports = module.exports = readString;\n\n\n/**\n * @file 读取数字\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var ExprType = require('./expr-type');\n\n/**\n * 读取数字\n *\n * @inner\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readNumber(walker) {\n    var match = walker.match(/\\s*(-?[0-9]+(\\.[0-9]+)?)/g);\n\n    return {\n        type: ExprType.NUMBER,\n        value: +match[1]\n    };\n}\n\n// exports = module.exports = readNumber;\n\n\n/**\n * @file 读取ident\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 读取ident\n * 这里的 ident 指标识符(identifier)，也就是通常意义上的变量名\n * 这里默认的变量名规则为：由美元符号($)、数字、字母或者下划线(_)构成的字符串\n *\n * @inner\n * @param {Walker} walker 源码读取对象\n * @return {string}\n */\nfunction readIdent(walker) {\n    var match = walker.match(/\\s*([\\$0-9a-z_]+)/ig, 1);\n\n    // #[begin] error\n    if (!match) {\n        throw new Error('[SAN FATAL] expect an ident: ' + walker.cut(walker.index));\n    }\n    // #[end]\n\n    return match[1];\n}\n\n// exports = module.exports = readIdent;\n\n\n/**\n * @file 读取三元表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readLogicalORExpr = require('./read-logical-or-expr');\n\n/**\n * 读取三元表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readTertiaryExpr(walker) {\n    var conditional = readLogicalORExpr(walker);\n    walker.goUntil();\n\n    if (walker.currentCode() === 63) { // ?\n        walker.go(1);\n        var yesExpr = readTertiaryExpr(walker);\n        walker.goUntil();\n\n        if (walker.currentCode() === 58) { // :\n            walker.go(1);\n            return {\n                type: ExprType.TERTIARY,\n                segs: [\n                    conditional,\n                    yesExpr,\n                    readTertiaryExpr(walker)\n                ]\n            };\n        }\n    }\n\n    return conditional;\n}\n\n// exports = module.exports = readTertiaryExpr;\n\n\n/**\n * @file 读取访问表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var createAccessor = require('./create-accessor');\n// var readIdent = require('./read-ident');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 读取访问表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readAccessor(walker) {\n    var firstSeg = readIdent(walker);\n    switch (firstSeg) {\n        case 'true':\n        case 'false':\n            return {\n                type: ExprType.BOOL,\n                value: firstSeg === 'true'\n            };\n    }\n\n    var result = createAccessor([\n        {\n            type: ExprType.STRING,\n            value: firstSeg\n        }\n    ]);\n\n    /* eslint-disable no-constant-condition */\n    accessorLoop: while (1) {\n    /* eslint-enable no-constant-condition */\n\n        switch (walker.currentCode()) {\n            case 46: // .\n                walker.go(1);\n\n                // ident as string\n                result.paths.push({\n                    type: ExprType.STRING,\n                    value: readIdent(walker)\n                });\n                break;\n\n            case 91: // [\n                walker.go(1);\n                result.paths.push(readTertiaryExpr(walker));\n                walker.goUntil(93); // ]\n                break;\n\n            default:\n                break accessorLoop;\n        }\n    }\n\n    return result;\n}\n\n// exports = module.exports = readAccessor;\n\n\n/**\n * @file 读取括号表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 读取括号表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readParenthesizedExpr(walker) {\n    walker.go(1);\n    var expr = readTertiaryExpr(walker);\n    walker.goUntil(41); // )\n\n    return expr;\n}\n\n// exports = module.exports = readParenthesizedExpr;\n\n\n/**\n * @file 读取一元表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readString = require('./read-string');\n// var readNumber = require('./read-number');\n// var readAccessor = require('./read-accessor');\n// var readParenthesizedExpr = require('./read-parenthesized-expr');\n\n\n/**\n * 读取一元表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readUnaryExpr(walker) {\n    walker.goUntil();\n\n    switch (walker.currentCode()) {\n        case 33: // !\n            walker.go(1);\n            return {\n                type: ExprType.UNARY,\n                expr: readUnaryExpr(walker)\n            };\n\n        case 34: // \"\n        case 39: // '\n            return readString(walker);\n\n        // number\n        case 45:\n        case 48:\n        case 49:\n        case 50:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 56:\n        case 57:\n            return readNumber(walker);\n\n        case 40: // (\n            return readParenthesizedExpr(walker);\n\n        // array literal\n        case 91: // [\n            walker.go(1);\n            var arrItems = [];\n            while (!walker.goUntil(93)) { // ]\n                var item = {};\n                arrItems.push(item);\n\n                if (walker.currentCode() === 46 && walker.match(/\\.\\.\\.\\s*/g)) {\n                    item.spread = true;\n                }\n\n                item.expr = readTertiaryExpr(walker);\n                walker.goUntil(44); // ,\n            }\n\n            return {\n                type: ExprType.ARRAY,\n                items: arrItems\n            };\n\n        // object literal\n        case 123: // {\n            walker.go(1);\n            var objItems = [];\n\n            while (!walker.goUntil(125)) { // }\n                var item = {};\n                objItems.push(item);\n\n                if (walker.currentCode() === 46 && walker.match(/\\.\\.\\.\\s*/g)) {\n                    item.spread = true;\n                    item.expr = readTertiaryExpr(walker);\n                }\n                else {\n                    // #[begin] error\n                    var walkerIndexBeforeName = walker.index;\n                    // #[end]\n\n                    item.name = readUnaryExpr(walker);\n\n                    // #[begin] error\n                    if (item.name.type > 4) {\n                        throw new Error('[SAN FATAL] unexpect object name: ' + walker.cut(walkerIndexBeforeName, walker.index));\n                    }\n                    // #[end]\n\n                    if (walker.goUntil(58)) { // :\n                        item.expr = readTertiaryExpr(walker)\n                    }\n                    else {\n                        item.expr = item.name;\n                    }\n\n                    if (item.name.type === ExprType.ACCESSOR) {\n                        item.name = item.name.paths[0];\n                    }\n                }\n\n                walker.goUntil(44); // ,\n            }\n\n            return {\n                type: ExprType.OBJECT,\n                items: objItems\n            };\n    }\n\n    return readAccessor(walker);\n}\n\n// exports = module.exports = readUnaryExpr;\n\n\n/**\n * @file 读取乘法表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readUnaryExpr = require('./read-unary-expr');\n\n/**\n * 读取乘法表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readMultiplicativeExpr(walker) {\n    var expr = readUnaryExpr(walker);\n\n    while (1) {\n        walker.goUntil();\n\n        var code = walker.currentCode();\n        switch (code) {\n            case 37: // %\n            case 42: // *\n            case 47: // /\n                walker.go(1);\n                expr = {\n                    type: ExprType.BINARY,\n                    operator: code,\n                    segs: [expr, readUnaryExpr(walker)]\n                };\n                continue;\n        }\n\n        break;\n    }\n\n\n    return expr;\n}\n\n// exports = module.exports = readMultiplicativeExpr;\n\n\n/**\n * @file 读取加法表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readMultiplicativeExpr = require('./read-multiplicative-expr');\n\n\n/**\n * 读取加法表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readAdditiveExpr(walker) {\n    var expr = readMultiplicativeExpr(walker);\n\n    while (1) {\n        walker.goUntil();\n        var code = walker.currentCode();\n\n        switch (code) {\n            case 43: // +\n            case 45: // -\n                walker.go(1);\n                expr = {\n                    type: ExprType.BINARY,\n                    operator: code,\n                    segs: [expr, readMultiplicativeExpr(walker)]\n                };\n                continue;\n        }\n\n        break;\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readAdditiveExpr;\n\n\n/**\n * @file 读取关系判断表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readAdditiveExpr = require('./read-additive-expr');\n\n/**\n * 读取关系判断表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readRelationalExpr(walker) {\n    var expr = readAdditiveExpr(walker);\n    walker.goUntil();\n\n    var code = walker.currentCode();\n    switch (code) {\n        case 60: // <\n        case 62: // >\n            if (walker.nextCode() === 61) {\n                code += 61;\n                walker.go(1);\n            }\n\n            return {\n                type: ExprType.BINARY,\n                operator: code,\n                segs: [expr, readAdditiveExpr(walker)]\n            };\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readRelationalExpr;\n\n\n/**\n * @file 读取相等比对表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readRelationalExpr = require('./read-relational-expr');\n\n/**\n * 读取相等比对表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readEqualityExpr(walker) {\n    var expr = readRelationalExpr(walker);\n    walker.goUntil();\n\n    var code = walker.currentCode();\n    switch (code) {\n        case 61: // =\n        case 33: // !\n            if (walker.nextCode() === 61) {\n                code += 61;\n                if (walker.nextCode() === 61) {\n                    code += 61;\n                    walker.go(1);\n                }\n\n                return {\n                    type: ExprType.BINARY,\n                    operator: code,\n                    segs: [expr, readRelationalExpr(walker)]\n                };\n            }\n\n            walker.go(-1);\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readEqualityExpr;\n\n\n/**\n * @file 读取逻辑与表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readEqualityExpr = require('./read-equality-expr');\n\n/**\n * 读取逻辑与表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readLogicalANDExpr(walker) {\n    var expr = readEqualityExpr(walker);\n    walker.goUntil();\n\n    if (walker.currentCode() === 38) { // &\n        if (walker.nextCode() === 38) {\n            walker.go(1);\n            return {\n                type: ExprType.BINARY,\n                operator: 76,\n                segs: [expr, readLogicalANDExpr(walker)]\n            };\n        }\n\n        walker.go(-1);\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readLogicalANDExpr;\n\n\n/**\n * @file 读取逻辑或表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readLogicalANDExpr = require('./read-logical-and-expr');\n\n/**\n * 读取逻辑或表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readLogicalORExpr(walker) {\n    var expr = readLogicalANDExpr(walker);\n    walker.goUntil();\n\n    if (walker.currentCode() === 124) { // |\n        if (walker.nextCode() === 124) {\n            walker.go(1);\n            return {\n                type: ExprType.BINARY,\n                operator: 248,\n                segs: [expr, readLogicalORExpr(walker)]\n            };\n        }\n\n        walker.go(-1);\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readLogicalORExpr;\n\n\n/**\n * @file 解析表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Walker = require('./walker');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 解析表达式\n *\n * @param {string} source 源码\n * @return {Object}\n */\nfunction parseExpr(source) {\n    if (typeof source === 'object' && source.type) {\n        return source;\n    }\n\n    var expr = readTertiaryExpr(new Walker(source));\n    expr.raw = source;\n    return expr;\n}\n\n// exports = module.exports = parseExpr;\n\n\n/**\n * @file 读取调用\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readAccessor = require('./read-accessor');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 读取调用\n *\n * @param {Walker} walker 源码读取对象\n * @param {Array=} defaultArgs 默认参数\n * @return {Object}\n */\nfunction readCall(walker, defaultArgs) {\n    walker.goUntil();\n    var ident = readAccessor(walker);\n    var args = [];\n\n    if (walker.goUntil(40)) { // (\n        while (!walker.goUntil(41)) { // )\n            args.push(readTertiaryExpr(walker));\n            walker.goUntil(44); // ,\n        }\n    }\n    else if (defaultArgs) {\n        args = defaultArgs;\n    }\n\n    return {\n        type: ExprType.CALL,\n        name: ident,\n        args: args\n    };\n}\n\n// exports = module.exports = readCall;\n\n\n/**\n * @file 解析调用\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var Walker = require('./walker');\n// var readCall = require('./read-call');\n\n/**\n * 解析调用\n *\n * @param {string} source 源码\n * @param {Array=} defaultArgs 默认参数\n * @return {Object}\n */\nfunction parseCall(source, defaultArgs) {\n    var expr = readCall(new Walker(source), defaultArgs);\n    expr.raw = source;\n    return expr;\n}\n\n// exports = module.exports = parseCall;\n\n\n/**\n * @file 解析插值替换\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Walker = require('./walker');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n// var ExprType = require('./expr-type');\n// var readCall = require('./read-call');\n\n/**\n * 解析插值替换\n *\n * @param {string} source 源码\n * @return {Object}\n */\nfunction parseInterp(source) {\n    var walker = new Walker(source);\n\n    var interp = {\n        type: ExprType.INTERP,\n        expr: readTertiaryExpr(walker),\n        filters: [],\n        raw: source\n    };\n\n    while (walker.goUntil(124)) { // |\n        var callExpr = readCall(walker);\n        switch (callExpr.name.paths[0].value) {\n            case 'html':\n                break;\n            case 'raw':\n                interp.original = 1;\n                break;\n            default:\n                interp.filters.push(callExpr);\n        }\n    }\n\n    return interp;\n}\n\n// exports = module.exports = parseInterp;\n\n\n/**\n * @file 解码 HTML 字符实体\n * @author errorrik(errorrik@gmail.com)\n */\n\nvar ENTITY_DECODE_MAP = {\n    lt: '<',\n    gt: '>',\n    nbsp: ' ',\n    quot: '\\\"',\n    emsp: '\\u2003',\n    ensp: '\\u2002',\n    thinsp: '\\u2009',\n    copy: '\\xa9',\n    reg: '\\xae',\n    zwnj: '\\u200c',\n    zwj: '\\u200d',\n    amp: '&'\n};\n\n/**\n * 解码 HTML 字符实体\n *\n * @param {string} source 要解码的字符串\n * @return {string}\n */\nfunction decodeHTMLEntity(source) {\n    return source\n        .replace(/&#([0-9]+);/g, function (match, code) {\n            return String.fromCharCode(+code);\n        })\n        .replace(/&#x([0-9a-f]+);/ig, function (match, code) {\n            return String.fromCharCode(parseInt(code, 16));\n        })\n        .replace(/&([a-z]+);/ig, function (match, code) {\n            return ENTITY_DECODE_MAP[code] || match;\n        });\n}\n\n// exports = module.exports = decodeHTMLEntity;\n\n\n/**\n * @file 解析文本\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Walker = require('./walker');\n// var ExprType = require('./expr-type');\n// var parseInterp = require('./parse-interp');\n// var decodeHTMLEntity = require('../util/decode-html-entity');\n\n/**\n * 对字符串进行可用于new RegExp的字面化\n *\n * @inner\n * @param {string} source 需要字面化的字符串\n * @return {string} 字符串字面化结果\n */\nfunction regexpLiteral(source) {\n    return source.replace(/[\\^\\[\\]\\$\\(\\)\\{\\}\\?\\*\\.\\+\\\\]/g, function (c) {\n        return '\\\\' + c;\n    });\n}\n\n/**\n * 解析文本\n *\n * @param {string} source 源码\n * @param {Array?} delimiters 分隔符。默认为 ['{{', '}}']\n * @return {Object}\n */\nfunction parseText(source, delimiters) {\n    delimiters = delimiters || ['{{', '}}'];\n    var exprStartReg = new RegExp(\n        regexpLiteral(delimiters[0]) + '\\\\s*([\\\\s\\\\S]+?)\\\\s*' + regexpLiteral(delimiters[1]),\n        'ig'\n    );\n\n    var exprMatch;\n\n    var walker = new Walker(source);\n    var beforeIndex = 0;\n\n    var expr = {\n        type: ExprType.TEXT,\n        segs: []\n    };\n\n    function pushStringToSeg(text) {\n        text && expr.segs.push({\n            type: ExprType.STRING,\n            literal: text,\n            value: decodeHTMLEntity(text)\n        });\n    }\n\n    var delimEndLen = delimiters[1].length;\n    while ((exprMatch = walker.match(exprStartReg)) != null) {\n        var interpSource = exprMatch[1];\n        var interpLen = exprMatch[0].length;\n        if (walker.cut(walker.index + 1 - delimEndLen, walker.index + 1) === delimiters[1]) {\n            interpSource += walker.cut(walker.index, walker.index + 1);\n            walker.go(1);\n            interpLen++;\n        }\n\n        pushStringToSeg(walker.cut(\n            beforeIndex,\n            walker.index - interpLen\n        ));\n\n        var interp = parseInterp(interpSource);\n        expr.original = expr.original || interp.original;\n        expr.segs.push(interp);\n\n        beforeIndex = walker.index;\n    }\n\n    pushStringToSeg(walker.cut(beforeIndex));\n\n\n\n    if (expr.segs.length === 1 && expr.segs[0].type === ExprType.STRING) {\n        expr.value = expr.segs[0].value;\n    }\n\n    return expr;\n}\n\n// exports = module.exports = parseText;\n\n\n/**\n * @file 解析指令\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var Walker = require('./walker');\n// var parseExpr = require('./parse-expr');\n// var parseCall = require('./parse-call');\n// var parseText = require('./parse-text');\n// var readAccessor = require('./read-accessor');\n// var readUnaryExpr = require('./read-unary-expr');\n\n/**\n * 指令解析器\n *\n * @inner\n * @type {Object}\n */\nvar directiveParsers = {\n    'for': function (value) {\n        var walker = new Walker(value);\n        var match = walker.match(/^\\s*([\\$0-9a-z_]+)(\\s*,\\s*([\\$0-9a-z_]+))?\\s+in\\s+/ig, 1);\n\n        if (match) {\n            var directive = {\n                item: parseExpr(match[1]),\n                index: parseExpr(match[3] || '$index'),\n                value: readUnaryExpr(walker)\n            };\n\n            if (walker.match(/\\s+trackby\\s+/ig, 1)) {\n                var start = walker.index;\n                directive.trackBy = readAccessor(walker);\n                directive.trackBy.raw = walker.cut(start, walker.index);\n            }\n            return directive;\n        }\n\n        // #[begin] error\n        throw new Error('[SAN FATAL] for syntax error: ' + value);\n        // #[end]\n    },\n\n    'ref': function (value, options) {\n        return {\n            value: parseText(value, options.delimiters)\n        };\n    },\n\n    'if': function (value) {\n        return {\n            value: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n        };\n    },\n\n    'elif': function (value) {\n        return {\n            value: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n        };\n    },\n\n    'else': function (value) {\n        return {\n            value: {}\n        };\n    },\n\n    'bind': function (value) {\n        return {\n            value: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n        };\n    },\n\n    'html': function (value) {\n        return {\n            value: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n        };\n    },\n\n    'transition': function (value) {\n        return {\n            value: parseCall(value)\n        };\n    }\n};\n\n/**\n * 解析指令\n *\n * @param {ANode} aNode 抽象节点\n * @param {string} name 指令名称\n * @param {string} value 指令值\n * @param {Object} options 解析参数\n * @param {Array?} options.delimiters 插值分隔符列表\n */\nfunction parseDirective(aNode, name, value, options) {\n    if (name === 'else-if') {\n        name = 'elif';\n    }\n\n    var parser = directiveParsers[name];\n    if (parser) {\n        (aNode.directives[name] = parser(value, options)).raw = value;\n    }\n}\n\n// exports = module.exports = parseDirective;\n\n\n/**\n * @file 对属性信息进行处理\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n\n/**\n * 对属性信息进行处理\n * 对组件的 binds 或者特殊的属性（比如 input 的 checked）需要处理\n *\n * 扁平化：\n * 当 text 解析只有一项时，要么就是 string，要么就是 interp\n * interp 有可能是绑定到组件属性的表达式，不希望被 eval text 成 string\n * 所以这里做个处理，只有一项时直接抽出来\n *\n * bool属性：\n * 当绑定项没有值时，默认为true\n *\n * @param {Object} prop 属性对象\n */\nfunction postProp(prop) {\n    var expr = prop.expr;\n\n    if (expr.type === ExprType.TEXT) {\n        switch (expr.segs.length) {\n            case 0:\n                prop.expr = {\n                    type: ExprType.BOOL,\n                    value: true\n                };\n                break;\n\n            case 1:\n                expr = prop.expr = expr.segs[0];\n                if (expr.type === ExprType.INTERP && expr.filters.length === 0) {\n                    prop.expr = expr.expr;\n                }\n        }\n    }\n}\n\n// exports = module.exports = postProp;\n\n\n/**\n * @file 解析抽象节点属性\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var kebab2camel = require('../util/kebab2camel');\n// var ExprType = require('./expr-type');\n// var createAccessor = require('./create-accessor');\n// var parseExpr = require('./parse-expr');\n// var parseCall = require('./parse-call');\n// var parseText = require('./parse-text');\n// var parseDirective = require('./parse-directive');\n// var postProp = require('./post-prop');\n\n\n/**\n * 解析抽象节点属性\n *\n * @param {ANode} aNode 抽象节点\n * @param {string} name 属性名称\n * @param {string} value 属性值\n * @param {Object} options 解析参数\n * @param {Array?} options.delimiters 插值分隔符列表\n */\nfunction integrateAttr(aNode, name, value, options) {\n    var prefixIndex = name.indexOf('-');\n    var realName;\n    var prefix;\n\n    if (prefixIndex > 0) {\n        prefix = name.slice(0, prefixIndex);\n        realName = name.slice(prefixIndex + 1);\n    }\n\n    switch (prefix) {\n        case 'on':\n            var event = {\n                name: realName,\n                modifier: {}\n            };\n            aNode.events.push(event);\n\n            var colonIndex;\n            while ((colonIndex = value.indexOf(':')) > 0) {\n                var modifier = value.slice(0, colonIndex);\n\n                // eventHandler(\"dd:aa\") 这种情况不能算modifier，需要辨识\n                if (!/^[a-z]+$/i.test(modifier)) {\n                    break;\n                }\n\n                event.modifier[modifier] = true;\n                value = value.slice(colonIndex + 1);\n            }\n\n            event.expr = parseCall(value, [\n                createAccessor([\n                    { type: ExprType.STRING, value: '$event' }\n                ])\n            ]);\n            break;\n\n        case 'san':\n        case 's':\n            parseDirective(aNode, realName, value, options);\n            break;\n\n        case 'prop':\n            integrateProp(aNode, realName, value, options);\n            break;\n\n        case 'var':\n            if (!aNode.vars) {\n                aNode.vars = [];\n            }\n\n            realName = kebab2camel(realName);\n            aNode.vars.push({\n                name: realName,\n                expr: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n            });\n            break;\n\n        default:\n            integrateProp(aNode, name, value, options);\n    }\n}\n\n/**\n * 解析抽象节点绑定属性\n *\n * @inner\n * @param {ANode} aNode 抽象节点\n * @param {string} name 属性名称\n * @param {string} value 属性值\n * @param {Object} options 解析参数\n * @param {Array?} options.delimiters 插值分隔符列表\n */\nfunction integrateProp(aNode, name, value, options) {\n    // parse two way binding, e.g. value=\"{=ident=}\"\n    var xMatch = value.match(/^\\{=\\s*(.*?)\\s*=\\}$/);\n\n    if (xMatch) {\n        aNode.props.push({\n            name: name,\n            expr: parseExpr(xMatch[1]),\n            x: 1,\n            raw: value\n        });\n\n        return;\n    }\n\n    // parse normal prop\n    var prop = {\n        name: name,\n        expr: parseText(value, options.delimiters),\n        raw: value\n    };\n\n    // 这里不能把只有一个插值的属性抽取\n    // 因为插值里的值可能是html片段，容易被注入\n    // 组件的数据绑定在组件init时做抽取\n    switch (name) {\n        case 'class':\n        case 'style':\n            each(prop.expr.segs, function (seg) {\n                if (seg.type === ExprType.INTERP) {\n                    seg.filters.push({\n                        type: ExprType.CALL,\n                        name: createAccessor([\n                            {\n                                type: ExprType.STRING,\n                                value: '_' + prop.name\n                            }\n                        ]),\n                        args: []\n                    });\n                }\n            });\n            break;\n\n        case 'checked':\n            if (aNode.tagName === 'input') {\n                postProp(prop);\n            }\n            break;\n    }\n\n    aNode.props.push(prop);\n}\n\n\n// exports = module.exports = integrateAttr;\n\n\n/**\n * @file 解析模板\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var createANode = require('./create-a-node');\n// var Walker = require('./walker');\n// var integrateAttr = require('./integrate-attr');\n// var parseText = require('./parse-text');\n// var autoCloseTags = require('../browser/auto-close-tags');\n\n// #[begin] error\nfunction getXPath(stack, currentTagName) {\n    var path = ['ROOT'];\n    for (var i = 1, len = stack.length; i < len; i++) {\n        path.push(stack[i].tagName);\n    }\n    if (currentTagName) {\n        path.push(currentTagName);\n    }\n    return path.join('>');\n}\n// #[end]\n\n/* eslint-disable fecs-max-statements */\n\n/**\n * 解析 template\n *\n * @param {string} source template源码\n * @param {Object?} options 解析参数\n * @param {string?} options.trimWhitespace 空白文本的处理策略。none|blank|all\n * @param {Array?} options.delimiters 插值分隔符列表\n * @return {ANode}\n */\nfunction parseTemplate(source, options) {\n    options = options || {};\n    options.trimWhitespace = options.trimWhitespace || 'none';\n\n    var rootNode = createANode();\n\n    if (typeof source !== 'string') {\n        return rootNode;\n    }\n\n    source = source.replace(/<!--([\\s\\S]*?)-->/mg, '').replace(/(^\\s+|\\s+$)/g, '');\n    var walker = new Walker(source);\n\n    var tagReg = /<(\\/)?([a-z0-9-]+)\\s*/ig;\n    var attrReg = /([-:0-9a-z\\(\\)\\[\\]]+)(\\s*=\\s*(['\"])([^\\3]*?)\\3)?\\s*/ig;\n\n    var tagMatch;\n    var currentNode = rootNode;\n    var stack = [rootNode];\n    var stackIndex = 0;\n    var beforeLastIndex = 0;\n\n    while ((tagMatch = walker.match(tagReg)) != null) {\n        var tagEnd = tagMatch[1];\n        var tagName = tagMatch[2].toLowerCase();\n\n        pushTextNode(source.slice(\n            beforeLastIndex,\n            walker.index - tagMatch[0].length\n        ));\n\n        // 62: >\n        // 47: /\n        // 处理 </xxxx >\n        if (tagEnd && walker.currentCode() === 62) {\n            // 满足关闭标签的条件时，关闭标签\n            // 向上查找到对应标签，找不到时忽略关闭\n            var closeIndex = stackIndex;\n\n            // #[begin] error\n            // 如果正在闭合一个自闭合的标签，例如 </input>，报错\n            if (autoCloseTags[tagName]) {\n                throw new Error(''\n                    + '[SAN ERROR] ' + getXPath(stack, tagName) + ' is a `auto closed` tag, '\n                    + 'so it cannot be closed with </' + tagName + '>'\n                );\n            }\n\n            // 如果关闭的 tag 和当前打开的不一致，报错\n            if (\n                stack[closeIndex].tagName !== tagName\n                // 这里要把 table 自动添加 tbody 的情况给去掉\n                && !(tagName === 'table' && stack[closeIndex].tagName === 'tbody')\n            ) {\n                throw new Error('[SAN ERROR] ' + getXPath(stack) + ' is closed with ' + tagName);\n            }\n            // #[end]\n\n            while (closeIndex > 0 && stack[closeIndex].tagName !== tagName) {\n                closeIndex--;\n            }\n\n            if (closeIndex > 0) {\n                stackIndex = closeIndex - 1;\n                currentNode = stack[stackIndex];\n            }\n            walker.go(1);\n        }\n\n        // #[begin] error\n        // 处理 </xxx 非正常闭合标签\n        else if (tagEnd) {\n\n            // 如果闭合标签时，匹配后的下一个字符是 <，即下一个标签的开始，那么当前闭合标签未闭合\n            if (walker.currentCode() === 60) {\n                throw new Error(''\n                    + '[SAN ERROR] ' + getXPath(stack)\n                    + '\\'s close tag not closed'\n                );\n            }\n\n            // 闭合标签有属性\n            throw new Error(''\n                + '[SAN ERROR] ' + getXPath(stack)\n                + '\\'s close tag has attributes'\n            );\n\n        }\n        // #[end]\n\n        else if (!tagEnd) {\n            var aElement = createANode({\n                tagName: tagName\n            });\n            var tagClose = autoCloseTags[tagName];\n\n            // 解析 attributes\n\n            /* eslint-disable no-constant-condition */\n            while (1) {\n            /* eslint-enable no-constant-condition */\n\n                var nextCharCode = walker.currentCode();\n\n                // 标签结束时跳出 attributes 读取\n                // 标签可能直接结束或闭合结束\n                if (nextCharCode === 62) {\n                    walker.go(1);\n                    break;\n                }\n                // 遇到 /> 按闭合处理\n                else if (nextCharCode === 47\n                    && walker.charCode(walker.index + 1) === 62\n                ) {\n                    walker.go(2);\n                    tagClose = 1;\n                    break;\n                }\n\n                // #[begin] error\n                // 在处理一个 open 标签时，如果遇到了 <， 即下一个标签的开始，则当前标签未能正常闭合，报错\n                if (nextCharCode === 60) {\n                    throw new Error('[SAN ERROR] ' + getXPath(stack, tagName) + ' is not closed');\n                }\n                // #[end]\n\n                // 读取 attribute\n                var attrMatch = walker.match(attrReg);\n                if (attrMatch) {\n\n                    // #[begin] error\n                    // 如果属性有 =，但没取到 value，报错\n                    if (\n                        walker.charCode(attrMatch.index + attrMatch[1].length) === 61\n                        && !attrMatch[2]\n                    ) {\n                        throw new Error(''\n                            + '[SAN ERROR] ' + getXPath(stack, tagName) + ' attribute `'\n                            + attrMatch[1] + '` is not wrapped with \"\"'\n                        );\n                    }\n                    // #[end]\n\n                    integrateAttr(\n                        aElement,\n                        attrMatch[1],\n                        attrMatch[2] ? attrMatch[4] : '',\n                        options\n                    );\n                }\n\n            }\n\n            // match if directive for else/elif directive\n            var elseDirective = aElement.directives['else'] || aElement.directives.elif; // eslint-disable-line dot-notation\n            if (elseDirective) {\n                var parentChildrenLen = currentNode.children.length;\n\n                while (parentChildrenLen--) {\n                    var parentChild = currentNode.children[parentChildrenLen];\n                    if (parentChild.textExpr) {\n                        currentNode.children.splice(parentChildrenLen, 1);\n                        continue;\n                    }\n\n                    // #[begin] error\n                    if (!parentChild.directives['if']) { // eslint-disable-line dot-notation\n                        throw new Error('[SAN FATEL] else not match if.');\n                    }\n                    // #[end]\n\n                    parentChild.elses = parentChild.elses || [];\n                    parentChild.elses.push(aElement);\n\n                    break;\n                }\n            }\n            else {\n                if (aElement.tagName === 'tr' && currentNode.tagName === 'table') {\n                    var tbodyNode = createANode({\n                        tagName: 'tbody'\n                    });\n                    currentNode.children.push(tbodyNode);\n                    currentNode = tbodyNode;\n                    stack[++stackIndex] = tbodyNode;\n                }\n\n                currentNode.children.push(aElement);\n            }\n\n            if (!tagClose) {\n                currentNode = aElement;\n                stack[++stackIndex] = aElement;\n            }\n        }\n\n        beforeLastIndex = walker.index;\n    }\n\n    pushTextNode(walker.cut(beforeLastIndex));\n\n    return rootNode;\n\n    /**\n     * 在读取栈中添加文本节点\n     *\n     * @inner\n     * @param {string} text 文本内容\n     */\n    function pushTextNode(text) {\n        switch (options.trimWhitespace) {\n            case 'blank':\n                if (/^\\s+$/.test(text)) {\n                    text = null;\n                }\n                break;\n\n            case 'all':\n                text = text.replace(/(^\\s+|\\s+$)/g, '');\n                break;\n        }\n\n        if (text) {\n            currentNode.children.push(createANode({\n                textExpr: parseText(text, options.delimiters)\n            }));\n        }\n    }\n}\n\n/* eslint-enable fecs-max-statements */\n\n// exports = module.exports = parseTemplate;\n\n\n/**\n * @file 默认filter\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/* eslint-disable fecs-camelcase */\n/* eslint-disable guard-for-in */\n\n/**\n * 默认filter\n *\n * @const\n * @type {Object}\n */\nvar DEFAULT_FILTERS = {\n\n    /**\n     * URL编码filter\n     *\n     * @param {string} source 源串\n     * @return {string} 替换结果串\n     */\n    url: encodeURIComponent,\n\n    _class: function (source) {\n        if (source instanceof Array) {\n            return source.join(' ');\n        }\n\n        return source;\n    },\n\n    _style: function (source) {\n        if (typeof source === 'object') {\n            var result = '';\n            for (var key in source) {\n                result += key + ':' + source[key] + ';';\n            }\n\n            return result;\n        }\n\n        return source;\n    },\n\n    _sep: function (source, sep) {\n        return source ? sep + source : source;\n    }\n};\n/* eslint-enable fecs-camelcase */\n\n// exports = module.exports = DEFAULT_FILTERS;\n\n\n/**\n * @file 表达式计算\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var extend = require('../util/extend');\n// var DEFAULT_FILTERS = require('./default-filters');\n// var evalArgs = require('./eval-args');\n// var dataCache = require('./data-cache');\n\n/**\n * 计算表达式的值\n *\n * @param {Object} expr 表达式对象\n * @param {Data} data 数据容器对象\n * @param {Component=} owner 所属组件环境\n * @return {*}\n */\nfunction evalExpr(expr, data, owner) {\n    if (expr.value != null) {\n        return expr.value;\n    }\n\n    var value = dataCache.get(data, expr);\n\n    if (value == null) {\n        switch (expr.type) {\n            case ExprType.UNARY:\n                value = !evalExpr(expr.expr, data, owner);\n                break;\n\n            case ExprType.BINARY:\n                var leftValue = evalExpr(expr.segs[0], data, owner);\n                var rightValue = evalExpr(expr.segs[1], data, owner);\n\n                /* eslint-disable eqeqeq */\n                switch (expr.operator) {\n                    case 37:\n                        value = leftValue % rightValue;\n                        break;\n                    case 43:\n                        value = leftValue + rightValue;\n                        break;\n                    case 45:\n                        value = leftValue - rightValue;\n                        break;\n                    case 42:\n                        value = leftValue * rightValue;\n                        break;\n                    case 47:\n                        value = leftValue / rightValue;\n                        break;\n                    case 60:\n                        value = leftValue < rightValue;\n                        break;\n                    case 62:\n                        value = leftValue > rightValue;\n                        break;\n                    case 76:\n                        value = leftValue && rightValue;\n                        break;\n                    case 94:\n                        value = leftValue != rightValue;\n                        break;\n                    case 121:\n                        value = leftValue <= rightValue;\n                        break;\n                    case 122:\n                        value = leftValue == rightValue;\n                        break;\n                    case 123:\n                        value = leftValue >= rightValue;\n                        break;\n                    case 155:\n                        value = leftValue !== rightValue;\n                        break;\n                    case 183:\n                        value = leftValue === rightValue;\n                        break;\n                    case 248:\n                        value = leftValue || rightValue;\n                        break;\n                }\n                /* eslint-enable eqeqeq */\n                break;\n\n            case ExprType.TERTIARY:\n                value = evalExpr(\n                    expr.segs[evalExpr(expr.segs[0], data, owner) ? 1 : 2],\n                    data,\n                    owner\n                );\n                break;\n\n            case ExprType.ARRAY:\n                value = [];\n                for (var i = 0, l = expr.items.length; i < l; i++) {\n                    var item = expr.items[i];\n                    var itemValue = evalExpr(item.expr, data, owner);\n\n                    if (item.spread) {\n                        itemValue && (value = value.concat(itemValue));\n                    }\n                    else {\n                        value.push(itemValue);\n                    }\n                }\n                break;\n\n            case ExprType.OBJECT:\n                value = {};\n                for (var i = 0, l = expr.items.length; i < l; i++) {\n                    var item = expr.items[i];\n                    var itemValue = evalExpr(item.expr, data, owner);\n\n                    if (item.spread) {\n                        itemValue && extend(value, itemValue);\n                    }\n                    else {\n                        value[evalExpr(item.name, data, owner)] = itemValue;\n                    }\n                }\n                break;\n\n            case ExprType.ACCESSOR:\n                value = data.get(expr);\n                break;\n\n            case ExprType.INTERP:\n                value = evalExpr(expr.expr, data, owner);\n\n                if (owner) {\n                    for (var i = 0, l = expr.filters.length; i < l; i++) {\n                        var filter = expr.filters[i];\n                        var filterName = filter.name.paths[0].value;\n\n                        if (owner.filters[filterName]) {\n                            value = owner.filters[filterName].apply(\n                                owner,\n                                [value].concat(evalArgs(filter.args, data, owner))\n                            );\n                        }\n                        else if (DEFAULT_FILTERS[filterName]) {\n                            value = DEFAULT_FILTERS[filterName](\n                                value,\n                                filter.args[0] ? filter.args[0].value : ''\n                            );\n                        }\n                    }\n                }\n\n                if (value == null) {\n                    value = '';\n                }\n\n                break;\n\n            /* eslint-disable no-redeclare */\n            case ExprType.TEXT:\n                var buf = '';\n                for (var i = 0, l = expr.segs.length; i < l; i++) {\n                    var seg = expr.segs[i];\n                    buf += seg.value || evalExpr(seg, data, owner);\n                }\n                return buf;\n        }\n\n        dataCache.set(data, expr, value);\n    }\n\n    return value;\n}\n\n// exports = module.exports = evalExpr;\n\n\n/**\n * @file 为函数调用计算参数数组的值\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var evalExpr = require('./eval-expr');\n\n/**\n * 为函数调用计算参数数组的值\n *\n * @param {Array} args 参数表达式列表\n * @param {Data} data 数据环境\n * @param {Component} owner 组件环境\n * @return {Array}\n */\nfunction evalArgs(args, data, owner) {\n    var result = [];\n    for (var i = 0; i < args.length; i++) {\n        result.push(evalExpr(args[i], data, owner));\n    }\n\n    return result;\n}\n\n// exports = module.exports = evalArgs;\n\n\n/**\n * @file 数据缓存管理器\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n\nvar dataCacheSource = {};\nvar dataCacheClearly = 1;\n\n/**\n * 数据缓存管理器\n *\n * @const\n * @type {Object}\n */\nvar dataCache = {\n    clear: function () {\n        if (!dataCacheClearly) {\n            dataCacheClearly = 1;\n            dataCacheSource = {};\n        }\n    },\n\n    set: function (data, expr, value) {\n        if (expr.raw) {\n            dataCacheClearly = 0;\n            (dataCacheSource[data.id] = dataCacheSource[data.id] || {})[expr.raw] = value;\n        }\n    },\n\n    get: function (data, expr) {\n        if (expr.raw && dataCacheSource[data.id]) {\n            return dataCacheSource[data.id][expr.raw];\n        }\n    }\n};\n\n\n// exports = module.exports = dataCache;\n\n\n/**\n * @file 比较变更表达式与目标表达式之间的关系\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var evalExpr = require('./eval-expr');\n// var each = require('../util/each');\n\n/**\n * 判断变更表达式与多个表达式之间的关系，0为完全没关系，1为有关系\n *\n * @inner\n * @param {Object} changeExpr 目标表达式\n * @param {Array} exprs 多个源表达式\n * @param {Data} data 表达式所属数据环境\n * @return {number}\n */\nfunction changeExprCompareExprs(changeExpr, exprs, data) {\n    for (var i = 0, l = exprs.length; i < l; i++) {\n        if (changeExprCompare(changeExpr, exprs[i], data)) {\n            return 1;\n        }\n    }\n\n    return 0;\n}\n\n/**\n * 比较变更表达式与目标表达式之间的关系，用于视图更新判断\n * 视图更新需要根据其关系，做出相应的更新行为\n *\n * 0: 完全没关系\n * 1: 变更表达式是目标表达式的母项(如a与a.b) 或 表示需要完全变化\n * 2: 变更表达式是目标表达式相等\n * >2: 变更表达式是目标表达式的子项，如a.b.c与a.b\n *\n * @param {Object} changeExpr 变更表达式\n * @param {Object} expr 要比较的目标表达式\n * @param {Data} data 表达式所属数据环境\n * @return {number}\n */\nfunction changeExprCompare(changeExpr, expr, data) {\n    switch (expr.type) {\n        case ExprType.ACCESSOR:\n            var paths = expr.paths;\n            var len = paths.length;\n            var changePaths = changeExpr.paths;\n            var changeLen = changePaths.length;\n\n            var result = 1;\n            for (var i = 0; i < len; i++) {\n                var pathExpr = paths[i];\n\n                if (pathExpr.type === ExprType.ACCESSOR\n                    && changeExprCompare(changeExpr, pathExpr, data)\n                ) {\n                    return 1;\n                }\n\n                if (result && i < changeLen\n                    /* eslint-disable eqeqeq */\n                    && (pathExpr.value || evalExpr(pathExpr, data))\n                        != (changePaths[i].value || evalExpr(changePaths[i], data))\n                    /* eslint-enable eqeqeq */\n                ) {\n                    result = 0;\n                }\n            }\n\n            if (result) {\n                result = Math.max(1, changeLen - len + 2);\n            }\n            return result;\n\n        case ExprType.UNARY:\n            return changeExprCompare(changeExpr, expr.expr, data) ? 1 : 0;\n\n\n        case ExprType.TEXT:\n        case ExprType.BINARY:\n        case ExprType.TERTIARY:\n            return changeExprCompareExprs(changeExpr, expr.segs, data);\n\n        case ExprType.ARRAY:\n        case ExprType.OBJECT:\n            for (var i = 0, l = expr.items.length; i < l; i++) {\n                if (changeExprCompare(changeExpr, expr.items[i].expr, data)) {\n                    return 1;\n                }\n            }\n\n            return 0;\n\n        case ExprType.INTERP:\n            if (!changeExprCompare(changeExpr, expr.expr, data)) {\n                var filterResult;\n                each(expr.filters, function (filter) {\n                    filterResult = changeExprCompareExprs(changeExpr, filter.args, data);\n                    return !filterResult;\n                });\n\n                return filterResult ? 1 : 0;\n            }\n\n            return 1;\n    }\n\n    return 0;\n}\n\n// exports = module.exports = changeExprCompare;\n\n\n/**\n * @file 数据变更类型枚举\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 数据变更类型枚举\n *\n * @const\n * @type {Object}\n */\nvar DataChangeType = {\n    SET: 1,\n    SPLICE: 2\n};\n\n// exports = module.exports = DataChangeType;\n\n\n/**\n * @file 生命周期类\n * @author errorrik(errorrik@gmail.com)\n */\n\nfunction lifeCycleOwnIs(name) {\n    return this[name];\n}\n\n/* eslint-disable fecs-valid-var-jsdoc */\n/**\n * 节点生命周期信息\n *\n * @inner\n * @type {Object}\n */\nvar LifeCycle = {\n    start: {},\n\n    compiled: {\n        is: lifeCycleOwnIs,\n        compiled: true\n    },\n\n    inited: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true\n    },\n\n    created: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true\n    },\n\n    attached: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true,\n        attached: true\n    },\n\n    leaving: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true,\n        attached: true,\n        leaving: true\n    },\n\n    detached: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true,\n        detached: true\n    },\n\n    disposed: {\n        is: lifeCycleOwnIs,\n        disposed: true\n    }\n};\n/* eslint-enable fecs-valid-var-jsdoc */\n\n\n// exports = module.exports = LifeCycle;\n\n\n/**\n * @file 节点类型\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 节点类型\n *\n * @const\n * @type {Object}\n */\nvar NodeType = {\n    TEXT: 1,\n    IF: 2,\n    FOR: 3,\n    ELEM: 4,\n    CMPT: 5,\n    SLOT: 6,\n    TPL: 7\n};\n\n// exports = module.exports = NodeType;\n\n\n/**\n * @file 获取 ANode props 数组中相应 name 的项\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 获取 ANode props 数组中相应 name 的项\n *\n * @param {Object} aNode ANode对象\n * @param {string} name name属性匹配串\n * @return {Object}\n */\nfunction getANodeProp(aNode, name) {\n    var index = aNode.hotspot.props[name];\n    if (index != null) {\n        return aNode.props[index];\n    }\n}\n\n// exports = module.exports = getANodeProp;\n\n\n/**\n * @file 获取属性处理对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var contains = require('../util/contains');\n// var empty = require('../util/empty');\n// var svgTags = require('../browser/svg-tags');\n// var evalExpr = require('../runtime/eval-expr');\n// var getANodeProp = require('./get-a-node-prop');\n// var NodeType = require('./node-type');\n\n\n/**\n * HTML 属性和 DOM 操作属性的对照表\n *\n * @inner\n * @const\n * @type {Object}\n */\nvar HTML_ATTR_PROP_MAP = {\n    'readonly': 'readOnly',\n    'cellpadding': 'cellPadding',\n    'cellspacing': 'cellSpacing',\n    'colspan': 'colSpan',\n    'rowspan': 'rowSpan',\n    'valign': 'vAlign',\n    'usemap': 'useMap',\n    'frameborder': 'frameBorder',\n    'for': 'htmlFor'\n};\n\n/**\n * 默认的元素的属性设置的变换方法\n *\n * @inner\n * @type {Object}\n */\nvar defaultElementPropHandler = {\n    prop: function (el, value, name, element) {\n        var propName = HTML_ATTR_PROP_MAP[name] || name;\n        value = value == null ? '' : value\n\n        // input 的 type 是个特殊属性，其实也应该用 setAttribute\n        // 但是 type 不应该运行时动态改变，否则会有兼容性问题\n        // 所以这里直接就不管了\n        if (propName in el) {\n            el[propName] = value;\n        }\n        else {\n            el.setAttribute(name, value);\n        }\n\n        // attribute 绑定的是 text，所以不会出现 null 的情况，这里无需处理\n        // 换句话来说，san 是做不到 attribute 时有时无的\n        // if (value == null) {\n        //     el.removeAttribute(name);\n        // }\n    },\n\n    output: function (element, bindInfo, data) {\n        data.set(bindInfo.expr, element.el[bindInfo.name], {\n            target: {\n                id: element.id,\n                prop: bindInfo.name\n            }\n        });\n    }\n};\n\nvar svgPropHandler = {\n    prop: function (el, value, name) {\n        el.setAttribute(name, value);\n    }\n};\n\nvar boolPropHandler = {\n    prop: function (el, value, name, element, prop) {\n        var propName = HTML_ATTR_PROP_MAP[name] || name;\n        el[propName] = !!(prop && prop.raw === ''\n            || value && value !== 'false' && value !== '0');\n    }\n};\n\n/* eslint-disable fecs-properties-quote */\n/**\n * 默认的属性设置变换方法\n *\n * @inner\n * @type {Object}\n */\nvar defaultElementPropHandlers = {\n    style: {\n        prop: function (el, value) {\n            el.style.cssText = value;\n        }\n    },\n\n    'class': { // eslint-disable-line\n        prop: function (el, value) {\n            el.className = value;\n        }\n    },\n\n    slot: {\n        prop: empty\n    },\n\n    readonly: boolPropHandler,\n    disabled: boolPropHandler,\n    autofocus: boolPropHandler,\n    required: boolPropHandler,\n    draggable: boolPropHandler\n};\n/* eslint-enable fecs-properties-quote */\n\nvar analInputChecker = {\n    checkbox: contains,\n    radio: function (a, b) {\n        return a === b;\n    }\n};\n\nfunction analInputCheckedState(element, value, oper) {\n    var bindValue = getANodeProp(element.aNode, 'value');\n    var bindType = getANodeProp(element.aNode, 'type');\n\n    if (bindValue && bindType) {\n        var type = evalExpr(bindType.expr, element.scope, element.owner);\n\n        if (analInputChecker[type]) {\n            var bindChecked = getANodeProp(element.aNode, 'checked');\n            if (!bindChecked.hintExpr) {\n                bindChecked.hintExpr = bindValue.expr;\n            }\n\n            return !!analInputChecker[type](\n                value,\n                evalExpr(bindValue.expr, element.scope, element.owner)\n            );\n        }\n    }\n}\n\nvar elementPropHandlers = {\n    input: {\n        multiple: boolPropHandler,\n        checked: {\n            prop: function (el, value, name, element) {\n                var state = analInputCheckedState(element, value);\n\n                boolPropHandler.prop(\n                    el,\n                    state != null ? state : value,\n                    'checked',\n                    element\n                );\n            },\n\n            output: function (element, bindInfo, data) {\n                var el = element.el;\n                var bindValue = getANodeProp(element.aNode, 'value');\n                var bindType = getANodeProp(element.aNode, 'type') || {};\n\n                if (bindValue && bindType) {\n                    switch (el.type.toLowerCase()) {\n                        case 'checkbox':\n                            data[el.checked ? 'push' : 'remove'](bindInfo.expr, el.value);\n                            return;\n\n                        case 'radio':\n                            el.checked && data.set(bindInfo.expr, el.value, {\n                                target: {\n                                    id: element.id,\n                                    prop: bindInfo.name\n                                }\n                            });\n                            return;\n                    }\n                }\n\n                defaultElementPropHandler.output(element, bindInfo, data);\n            }\n        }\n    },\n\n    option: {\n        value: {\n            prop: function (el, value, name, element) {\n                defaultElementPropHandler.prop(el, value, name, element);\n\n                if (isOptionSelected(element, value)) {\n                    el.selected = true;\n                }\n            }\n        }\n    },\n\n    select: {\n        value: {\n            prop: function (el, value) {\n                el.value = value || '';\n            },\n\n            output: defaultElementPropHandler.output\n        }\n    }\n};\n\nfunction isOptionSelected(element, value) {\n    var parentSelect = element.parent;\n    while (parentSelect) {\n        if (parentSelect.tagName === 'select') {\n            break;\n        }\n\n        parentSelect = parentSelect.parent;\n    }\n\n\n    if (parentSelect) {\n        var selectValue = null;\n        var prop;\n        var expr;\n\n        if ((prop = getANodeProp(parentSelect.aNode, 'value'))\n            && (expr = prop.expr)\n        ) {\n            selectValue = parentSelect.nodeType === NodeType.CMPT\n                ? evalExpr(expr, parentSelect.data, parentSelect)\n                : evalExpr(expr, parentSelect.scope, parentSelect.owner)\n                || '';\n        }\n\n        if (selectValue === value) {\n            return 1;\n        }\n    }\n}\n\n\n/**\n * 获取属性处理对象\n *\n * @param {string} tagName 元素tag\n * @param {string} attrName 属性名\n * @return {Object}\n */\nfunction getPropHandler(tagName, attrName) {\n    if (svgTags[tagName]) {\n        return svgPropHandler;\n    }\n\n    var tagPropHandlers = elementPropHandlers[tagName];\n    if (!tagPropHandlers) {\n        tagPropHandlers = elementPropHandlers[tagName] = {};\n    }\n\n    var propHandler = tagPropHandlers[attrName];\n    if (!propHandler) {\n        propHandler = defaultElementPropHandlers[attrName] || defaultElementPropHandler;\n        tagPropHandlers[attrName] = propHandler;\n    }\n\n    return propHandler;\n}\n\n// exports = module.exports = getPropHandler;\n\n\n/**\n * @file 判断变更是否来源于元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 判断变更是否来源于元素，来源于元素时，视图更新需要阻断\n *\n * @param {Object} change 变更对象\n * @param {Element} element 元素\n * @param {string?} propName 属性名，可选。需要精确判断是否来源于此属性时传入\n * @return {boolean}\n */\nfunction isDataChangeByElement(change, element, propName) {\n    var changeTarget = change.option.target;\n    return changeTarget && changeTarget.id === element.id\n        && (!propName || changeTarget.prop === propName);\n}\n\n// exports = module.exports = isDataChangeByElement;\n\n\n/**\n * @file 在对象上使用accessor表达式查找方法\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var evalExpr = require('../runtime/eval-expr');\n\n/**\n * 在对象上使用accessor表达式查找方法\n *\n * @param {Object} source 源对象\n * @param {Object} nameExpr 表达式\n * @param {Data} data 所属数据环境\n * @return {Function}\n */\nfunction findMethod(source, nameExpr, data) {\n    var method = source;\n\n    for (var i = 0; method != null && i < nameExpr.paths.length; i++) {\n        method = method[evalExpr(nameExpr.paths[i], data)];\n    }\n\n    return method;\n}\n\n// exports = module.exports = findMethod;\n\n\n/**\n * @file 数据类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var evalExpr = require('./eval-expr');\n// var DataChangeType = require('./data-change-type');\n// var createAccessor = require('../parser/create-accessor');\n// var parseExpr = require('../parser/parse-expr');\n// var guid = require('../util/guid');\n// var dataCache = require('./data-cache');\n\n/**\n * 数据类\n *\n * @class\n * @param {Object?} data 初始数据\n * @param {Model?} parent 父级数据容器\n */\nfunction Data(data, parent) {\n    this.id = guid();\n    this.parent = parent;\n    this.raw = data || {};\n    this.listeners = [];\n}\n\n// #[begin] error\n// 以下两个函数只在开发模式下可用，在生产模式下不存在\n/**\n * DataTypes 检测\n */\nData.prototype.checkDataTypes = function () {\n    if (this.typeChecker) {\n        this.typeChecker(this.raw);\n    }\n};\n\n/**\n * 设置 type checker\n *\n * @param  {Function} typeChecker 类型校验器\n */\nData.prototype.setTypeChecker = function (typeChecker) {\n    this.typeChecker = typeChecker;\n};\n\n// #[end]\n\n/**\n * 添加数据变更的事件监听器\n *\n * @param {Function} listener 监听函数\n */\nData.prototype.listen = function (listener) {\n    if (typeof listener === 'function') {\n        this.listeners.push(listener);\n    }\n};\n\n/**\n * 移除数据变更的事件监听器\n *\n * @param {Function} listener 监听函数\n */\nData.prototype.unlisten = function (listener) {\n    var len = this.listeners.length;\n    while (len--) {\n        if (!listener || this.listeners[len] === listener) {\n            this.listeners.splice(len, 1);\n        }\n    }\n};\n\n/**\n * 触发数据变更\n *\n * @param {Object} change 变更信息对象\n */\nData.prototype.fire = function (change) {\n    if (change.option.silent || change.option.silence || change.option.quiet) {\n        return;\n    }\n\n    for (var i = 0; i < this.listeners.length; i++) {\n        this.listeners[i].call(this, change);\n    }\n};\n\n/**\n * 获取数据项\n *\n * @param {string|Object?} expr 数据项路径\n * @param {Data?} callee 当前数据获取的调用环境\n * @return {*}\n */\nData.prototype.get = function (expr, callee) {\n    var value = this.raw;\n    if (!expr) {\n        return value;\n    }\n\n    expr = parseExpr(expr);\n\n    var paths = expr.paths;\n    callee = callee || this;\n\n    value = value[paths[0].value];\n\n    if (value == null && this.parent) {\n        value = this.parent.get(expr, callee);\n    }\n    else {\n        for (var i = 1, l = paths.length; value != null && i < l; i++) {\n            value = value[paths[i].value || evalExpr(paths[i], callee)];\n        }\n    }\n\n    return value;\n};\n\n\n/**\n * 数据对象变更操作\n *\n * @inner\n * @param {Object|Array} source 要变更的源数据\n * @param {Array} exprPaths 属性路径\n * @param {*} value 变更属性值\n * @param {Data} data 对应的Data对象\n * @return {*} 变更后的新数据\n */\nfunction immutableSet(source, exprPaths, value, data) {\n    if (exprPaths.length === 0) {\n        return value;\n    }\n\n    var prop = evalExpr(exprPaths[0], data);\n    var result;\n\n    if (source instanceof Array) {\n        var index = +prop;\n\n        result = source.slice(0);\n        result[isNaN(index) ? prop : index] = immutableSet(source[index], exprPaths.slice(1), value, data);\n\n        return result;\n    }\n    else if (typeof source === 'object') {\n        result = {};\n\n        for (var key in source) {\n            if (key !== prop) {\n                result[key] = source[key];\n            }\n        }\n\n        result[prop] = immutableSet(source[prop] || {}, exprPaths.slice(1), value, data);\n\n        return result;\n    }\n\n    return source;\n}\n\n/**\n * 设置数据项\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} value 数据值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.set = function (expr, value, option) {\n    option = option || {};\n\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== ExprType.ACCESSOR) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data set: ' + exprRaw);\n    }\n    // #[end]\n\n    if (this.get(expr) === value && !option.force) {\n        return;\n    }\n\n    dataCache.clear();\n    this.raw = immutableSet(this.raw, expr.paths, value, this);\n    this.fire({\n        type: DataChangeType.SET,\n        expr: expr,\n        value: value,\n        option: option\n    });\n\n    // #[begin] error\n    this.checkDataTypes();\n    // #[end]\n\n};\n\n/**\n * 合并更新数据项\n *\n * @param {string|Object} expr 数据项路径\n * @param {Object} source 待合并的数据值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.merge = function (expr, source, option) {\n    option = option || {};\n\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== ExprType.ACCESSOR) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data merge: ' + exprRaw);\n    }\n\n    if (typeof this.get(expr) !== 'object') {\n        throw new Error('[SAN ERROR] Merge Expects a Target of Type \\'object\\'; got ' + typeof oldValue);\n    }\n\n    if (typeof source !== 'object') {\n        throw new Error('[SAN ERROR] Merge Expects a Source of Type \\'object\\'; got ' + typeof source);\n    }\n    // #[end]\n\n    for (var key in source) { // eslint-disable-line\n        this.set(\n            createAccessor(\n                expr.paths.concat(\n                    [\n                        {\n                            type: ExprType.STRING,\n                            value: key\n                        }\n                    ]\n                )\n            ),\n            source[key],\n            option\n        );\n    }\n};\n\n/**\n * 基于更新函数更新数据项\n *\n * @param {string|Object} expr 数据项路径\n * @param {Function} fn 数据处理函数\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.apply = function (expr, fn, option) {\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== ExprType.ACCESSOR) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data apply: ' + exprRaw);\n    }\n    // #[end]\n\n    var oldValue = this.get(expr);\n\n    // #[begin] error\n    if (typeof fn !== 'function') {\n        throw new Error(\n            '[SAN ERROR] Invalid Argument\\'s Type in Data apply: '\n            + 'Expected Function but got ' + typeof fn\n        );\n    }\n    // #[end]\n\n    this.set(expr, fn(oldValue), option);\n};\n\n/**\n * 数组数据项splice操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {Array} args splice 接受的参数列表，数组项与Array.prototype.splice的参数一致\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {Array} 新数组\n */\nData.prototype.splice = function (expr, args, option) {\n    option = option || {};\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== ExprType.ACCESSOR) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data splice: ' + exprRaw);\n    }\n    // #[end]\n\n    var target = this.get(expr);\n    var returnValue = [];\n\n    if (target instanceof Array) {\n        var index = args[0];\n        var len = target.length;\n        if (index > len) {\n            index = len;\n        }\n        else if (index < 0) {\n            index = len + index;\n            if (index < 0) {\n                index = 0;\n            }\n        }\n\n        var newArray = target.slice(0);\n        returnValue = newArray.splice.apply(newArray, args);\n        dataCache.clear();\n        this.raw = immutableSet(this.raw, expr.paths, newArray, this);\n\n        this.fire({\n            expr: expr,\n            type: DataChangeType.SPLICE,\n            index: index,\n            deleteCount: returnValue.length,\n            value: returnValue,\n            insertions: args.slice(2),\n            option: option\n        });\n    }\n\n    // #[begin] error\n    this.checkDataTypes();\n    // #[end]\n\n    return returnValue;\n};\n\n/**\n * 数组数据项push操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} item 要push的值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {number} 新数组的length属性\n */\nData.prototype.push = function (expr, item, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        this.splice(expr, [target.length, 0, item], option);\n        return target.length + 1;\n    }\n};\n\n/**\n * 数组数据项pop操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {*}\n */\nData.prototype.pop = function (expr, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        var len = target.length;\n        if (len) {\n            return this.splice(expr, [len - 1, 1], option)[0];\n        }\n    }\n};\n\n/**\n * 数组数据项shift操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {*}\n */\nData.prototype.shift = function (expr, option) {\n    return this.splice(expr, [0, 1], option)[0];\n};\n\n/**\n * 数组数据项unshift操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} item 要unshift的值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {number} 新数组的length属性\n */\nData.prototype.unshift = function (expr, item, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        this.splice(expr, [0, 0, item], option);\n        return target.length + 1;\n    }\n};\n\n/**\n * 数组数据项移除操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {number} index 要移除项的索引\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.removeAt = function (expr, index, option) {\n    this.splice(expr, [index, 1], option);\n};\n\n/**\n * 数组数据项移除操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} value 要移除的项\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.remove = function (expr, value, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        var len = target.length;\n        while (len--) {\n            if (target[len] === value) {\n                this.splice(expr, [len, 1], option);\n                break;\n            }\n        }\n    }\n};\n\n// exports = module.exports = Data;\n\n\n/**\n * @file 声明式事件的监听函数\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var evalArgs = require('../runtime/eval-args');\n// var findMethod = require('../runtime/find-method');\n// var Data = require('../runtime/data');\n\n/**\n * 声明式事件的监听函数\n *\n * @param {Object} eventBind 绑定信息对象\n * @param {boolean} isComponentEvent 是否组件自定义事件\n * @param {Data} data 数据环境\n * @param {Event} e 事件对象\n */\nfunction eventDeclarationListener(eventBind, isComponentEvent, data, e) {\n    var method = findMethod(this, eventBind.expr.name, data);\n\n    if (typeof method === 'function') {\n        var scope = new Data(\n            {$event: isComponentEvent ? e : e || window.event},\n            data\n        );\n        method.apply(this, evalArgs(eventBind.expr.args, scope, this));\n    }\n}\n\n// exports = module.exports = eventDeclarationListener;\n\n\n/**\n * @file 是否浏览器环境\n * @author errorrik(errorrik@gmail.com)\n */\n\nvar isBrowser = typeof window !== 'undefined';\n\n// exports = module.exports = isBrowser;\n\n\n/**\n * @file insertBefore 方法的兼容性封装\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * insertBefore 方法的兼容性封装\n *\n * @param {HTMLNode} targetEl 要插入的节点\n * @param {HTMLElement} parentEl 父元素\n * @param {HTMLElement?} beforeEl 在此元素之前插入\n */\nfunction insertBefore(targetEl, parentEl, beforeEl) {\n    if (parentEl) {\n        if (beforeEl) {\n            parentEl.insertBefore(targetEl, beforeEl);\n        }\n        else {\n            parentEl.appendChild(targetEl);\n        }\n    }\n}\n\n// exports = module.exports = insertBefore;\n\n\n/**\n * @file 判断元素是否不允许设置HTML\n * @author errorrik(errorrik@gmail.com)\n */\n\n// some html elements cannot set innerHTML in old ie\n// see: https://msdn.microsoft.com/en-us/library/ms533897(VS.85).aspx\n\n/**\n * 判断元素是否不允许设置HTML\n *\n * @param {HTMLElement} el 要判断的元素\n * @return {boolean}\n */\nfunction noSetHTML(el) {\n    return /^(col|colgroup|frameset|style|table|tbody|tfoot|thead|tr|select)$/i.test(el.tagName);\n}\n\n// exports = module.exports = noSetHTML;\n\n\n/**\n * @file  获取节点 stump 的 comment\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var noSetHTML = require('../browser/no-set-html');\n\n// #[begin] error\n/**\n * 获取节点 stump 的 comment\n *\n * @param {HTMLElement} el HTML元素\n */\nfunction warnSetHTML(el) {\n    // dont warn if not in browser runtime\n    if (!(typeof window !== 'undefined' && typeof navigator !== 'undefined' && window.document)) {\n        return;\n    }\n\n    // some html elements cannot set innerHTML in old ie\n    // see: https://msdn.microsoft.com/en-us/library/ms533897(VS.85).aspx\n    if (noSetHTML(el)) {\n        var message = '[SAN WARNING] set html for element \"' + el.tagName\n            + '\" may cause an error in old IE';\n        /* eslint-disable no-console */\n        if (typeof console === 'object' && console.warn) {\n            console.warn(message);\n        }\n        else {\n            throw new Error(message);\n        }\n        /* eslint-enable no-console */\n    }\n}\n// #[end]\n\n// exports = module.exports = warnSetHTML;\n\n\n/**\n * @file 判断是否结束桩\n * @author errorrik(errorrik@gmail.com)\n */\n\n// #[begin] reverse\n/**\n * 判断是否结束桩\n *\n * @param {HTMLElement|HTMLComment} target 要判断的元素\n * @param {string} type 桩类型\n * @return {boolean}\n */\nfunction isEndStump(target, type) {\n    return target.nodeType === 8 && target.data === '/s-' + type;\n}\n// #[end]\n\n// exports = module.exports = isEndStump;\n\n\n/**\n * @file 获取节点在组件树中的路径\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var NodeType = require('./node-type');\n\n// #[begin] reverse\n/**\n * 获取节点在组件树中的路径\n *\n * @param {Node} node 节点对象\n * @return {Array}\n */\nfunction getNodePath(node) {\n    var nodePaths = [];\n    var nodeParent = node;\n    while (nodeParent) {\n        switch (nodeParent.nodeType) {\n            case NodeType.ELEM:\n                nodePaths.unshift(nodeParent.tagName);\n                break;\n\n            case NodeType.IF:\n                nodePaths.unshift('if');\n                break;\n\n            case NodeType.FOR:\n                nodePaths.unshift('for[' + nodeParent.anode.directives['for'].raw + ']'); // eslint-disable-line dot-notation\n                break;\n\n            case NodeType.SLOT:\n                nodePaths.unshift('slot[' + (nodeParent.name || 'default') + ']');\n                break;\n\n            case NodeType.TPL:\n                nodePaths.unshift('template');\n                break;\n\n            case NodeType.CMPT:\n                nodePaths.unshift('component[' + (nodeParent.subTag || 'root') + ']');\n                break;\n\n            case NodeType.TEXT:\n                nodePaths.unshift('text');\n                break;\n        }\n\n        nodeParent = nodeParent.parent;\n    }\n\n    return nodePaths;\n}\n// #[end]\n\n// exports = module.exports = getNodePath;\n\n\n/**\n * @file text 节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var isBrowser = require('../browser/is-browser');\n// var removeEl = require('../browser/remove-el');\n// var insertBefore = require('../browser/insert-before');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var evalExpr = require('../runtime/eval-expr');\n// var NodeType = require('./node-type');\n// var warnSetHTML = require('./warn-set-html');\n// var isEndStump = require('./is-end-stump');\n// var getNodePath = require('./get-node-path');\n\n\n/**\n * text 节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction TextNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        var currentNode = reverseWalker.current;\n        if (currentNode) {\n            switch (currentNode.nodeType) {\n                case 8:\n                    if (currentNode.data === 's-text') {\n                        this.sel = currentNode;\n                        currentNode.data = this.id;\n                        reverseWalker.goNext();\n\n                        while (1) { // eslint-disable-line\n                            currentNode = reverseWalker.current;\n                            if (!currentNode) {\n                                throw new Error('[SAN REVERSE ERROR] Text end flag not found. \\nPaths: '\n                                    + getNodePath(this).join(' > '));\n                            }\n\n                            if (isEndStump(currentNode, 'text')) {\n                                this.el = currentNode;\n                                reverseWalker.goNext();\n                                currentNode.data = this.id;\n                                break;\n                            }\n\n                            reverseWalker.goNext();\n                        }\n                    }\n                    break;\n\n                case 3:\n                    reverseWalker.goNext();\n                    if (!this.aNode.textExpr.original) {\n                        this.el = currentNode;\n                    }\n                    break;\n            }\n        }\n        else {\n            this.el = document.createTextNode('');\n            insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n        }\n    }\n    // #[end]\n}\n\nTextNode.prototype.nodeType = NodeType.TEXT;\n\n/**\n * 将text attach到页面\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nTextNode.prototype.attach = function (parentEl, beforeEl) {\n    this.content = evalExpr(this.aNode.textExpr, this.scope, this.owner);\n\n    if (this.aNode.textExpr.original) {\n        this.sel = document.createComment(this.id);\n        insertBefore(this.sel, parentEl, beforeEl);\n\n        this.el = document.createComment(this.id);\n        insertBefore(this.el, parentEl, beforeEl);\n\n        var tempFlag = document.createElement('script');\n        parentEl.insertBefore(tempFlag, this.el);\n        tempFlag.insertAdjacentHTML('beforebegin', this.content);\n        parentEl.removeChild(tempFlag);\n    }\n    else {\n        this.el = document.createTextNode(this.content);\n        insertBefore(this.el, parentEl, beforeEl);\n    }\n};\n\n/**\n * 销毁 text 节点\n */\nTextNode.prototype.dispose = function () {\n    this._prev = null;\n    this.el = null;\n    this.sel = null;\n};\n\nvar textUpdateProp = isBrowser\n    && (typeof document.createTextNode('').textContent === 'string'\n        ? 'textContent'\n        : 'data');\n\n/**\n * 更新 text 节点的视图\n *\n * @param {Array} changes 数据变化信息\n */\nTextNode.prototype._update = function (changes) {\n    if (this.aNode.textExpr.value) {\n        return;\n    }\n\n    var len = changes ? changes.length : 0;\n    while (len--) {\n        if (changeExprCompare(changes[len].expr, this.aNode.textExpr, this.scope)) {\n            var text = evalExpr(this.aNode.textExpr, this.scope, this.owner);\n\n            if (text !== this.content) {\n                this.content = text;\n\n                if (this.aNode.textExpr.original) {\n                    var startRemoveEl = this.sel.nextSibling;\n                    var parentEl = this.el.parentNode;\n\n                    while (startRemoveEl !== this.el) {\n                        var removeTarget = startRemoveEl;\n                        startRemoveEl = startRemoveEl.nextSibling;\n                        removeEl(removeTarget);\n                    }\n\n                    // #[begin] error\n                    warnSetHTML(parentEl);\n                    // #[end]\n\n                    var tempFlag = document.createElement('script');\n                    parentEl.insertBefore(tempFlag, this.el);\n                    tempFlag.insertAdjacentHTML('beforebegin', text);\n                    parentEl.removeChild(tempFlag);\n                }\n                else {\n                    this.el[textUpdateProp] = text;\n                }\n            }\n\n            return;\n        }\n    }\n};\n\n// exports = module.exports = TextNode;\n\n\n/**\n * @file 计算两个对象 key 的并集\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 计算两个对象 key 的并集\n *\n * @param {Object} obj1 目标对象\n * @param {Object} obj2 源对象\n * @return {Array}\n */\nfunction unionKeys(obj1, obj2) {\n    var result = [];\n\n    for (var key in obj1) {\n        result.push(key);\n    }\n\n    for (var key in obj2) {\n        !obj1[key] && result.push(key);\n    }\n\n    return result;\n}\n\n// exports = module.exports = unionKeys;\n\n\n/**\n * @file 判断变更数组是否影响到数据引用摘要\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 判断变更数组是否影响到数据引用摘要\n *\n * @param {Array} changes 变更数组\n * @param {Object} dataRef 数据引用摘要\n * @return {boolean}\n */\nfunction changesIsInDataRef(changes, dataRef) {\n    for (var i = 0; i < changes.length; i++) {\n        var change = changes[i];\n\n        if (!change.overview) {\n            var paths = change.expr.paths;\n            change.overview = paths[0].value;\n\n            if (paths.length > 1) {\n                change.extOverview = paths[0].value + '.' + paths[1].value;\n                change.wildOverview = paths[0].value + '.*';\n            }\n        }\n\n        if (dataRef[change.overview]\n            || change.wildOverview && dataRef[change.wildOverview]\n            || change.extOverview && dataRef[change.extOverview]\n        ) {\n            return true;\n        }\n    }\n}\n\n// exports = module.exports = changesIsInDataRef;\n\n\n/**\n * @file 元素子节点遍历操作类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var removeEl = require('../browser/remove-el');\n\n// #[begin] reverse\n/**\n * 元素子节点遍历操作类\n *\n * @inner\n * @class\n * @param {HTMLElement} el 要遍历的元素\n */\nfunction DOMChildrenWalker(el) {\n    this.raw = [];\n    this.index = 0;\n    this.target = el;\n\n    var child = el.firstChild;\n    var next;\n    while (child) {\n        next = child.nextSibling;\n\n        switch (child.nodeType) {\n            case 3:\n                if (/^\\s*$/.test(child.data || child.textContent)) {\n                    removeEl(child);\n                }\n                else {\n                    this.raw.push(child);\n                }\n                break;\n\n            case 1:\n            case 8:\n                this.raw.push(child);\n        }\n\n        child = next;\n    }\n\n    this.current = this.raw[this.index];\n    this.next = this.raw[this.index + 1];\n}\n\n/**\n * 往下走一个元素\n */\nDOMChildrenWalker.prototype.goNext = function () {\n    this.current = this.raw[++this.index];\n    this.next = this.raw[this.index + 1];\n};\n// #[end]\n\n// exports = module.exports = DOMChildrenWalker;\n\n\n/**\n * @file 元素节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var unionKeys = require('../util/union-keys');\n// var removeEl = require('../browser/remove-el');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var changesIsInDataRef = require('../runtime/changes-is-in-data-ref');\n// var evalExpr = require('../runtime/eval-expr');\n// var LifeCycle = require('./life-cycle');\n// var NodeType = require('./node-type');\n// var reverseElementChildren = require('./reverse-element-children');\n// var isDataChangeByElement = require('./is-data-change-by-element');\n// var elementUpdateChildren = require('./element-update-children');\n// var elementOwnCreate = require('./element-own-create');\n// var elementOwnAttach = require('./element-own-attach');\n// var elementOwnDetach = require('./element-own-detach');\n// var elementOwnDispose = require('./element-own-dispose');\n// var elementOwnOnEl = require('./element-own-on-el');\n// var elementOwnToPhase = require('./element-own-to-phase');\n// var elementOwnAttached = require('./element-own-attached');\n// var elementDispose = require('./element-dispose');\n// var elementInitTagName = require('./element-init-tag-name');\n// var nodeSBindInit = require('./node-s-bind-init');\n// var nodeSBindUpdate = require('./node-s-bind-update');\n// var handleProp = require('./handle-prop');\n// var warnSetHTML = require('./warn-set-html');\n// var getNodePath = require('./get-node-path');\n\n/**\n * 元素节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction Element(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n    this._elFns = [];\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n\n    elementInitTagName(this);\n\n    nodeSBindInit(this, aNode.directives.bind);\n\n    this._toPhase('inited');\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        var currentNode = reverseWalker.current;\n\n        if (!currentNode) {\n            throw new Error('[SAN REVERSE ERROR] Element not found. \\nPaths: '\n                + getNodePath(this).join(' > '));\n        }\n\n        if (currentNode.nodeType !== 1) {\n            throw new Error('[SAN REVERSE ERROR] Element type not match, expect 1 but '\n                + currentNode.nodeType + '.\\nPaths: '\n                + getNodePath(this).join(' > '));\n        }\n\n        if (currentNode.tagName.toLowerCase() !== this.tagName) {\n            throw new Error('[SAN REVERSE ERROR] Element tagName not match, expect '\n                + this.tagName + ' but meat ' + currentNode.tagName.toLowerCase() + '.\\nPaths: '\n                + getNodePath(this).join(' > '));\n        }\n\n        this.el = currentNode;\n        reverseWalker.goNext();\n\n        reverseElementChildren(this);\n\n        this._attached();\n    }\n    // #[end]\n}\n\n\n\nElement.prototype.nodeType = NodeType.ELEM;\n\n\nElement.prototype.attach = elementOwnAttach;\nElement.prototype.detach = elementOwnDetach;\nElement.prototype.dispose = elementOwnDispose;\nElement.prototype._create = elementOwnCreate;\nElement.prototype._toPhase = elementOwnToPhase;\nElement.prototype._onEl = elementOwnOnEl;\n\nElement.prototype._doneLeave = function () {\n    if (this.leaveDispose) {\n        if (!this.lifeCycle.disposed) {\n            elementDispose(\n                this,\n                this.disposeNoDetach,\n                this.disposeNoTransition\n            );\n        }\n    }\n    else if (this.lifeCycle.attached) {\n        removeEl(this.el);\n        this._toPhase('detached');\n    }\n};\n\n/**\n * 视图更新\n *\n * @param {Array} changes 数据变化信息\n */\nElement.prototype._update = function (changes) {\n    if (!changesIsInDataRef(changes, this.aNode.hotspot.data)) {\n        return;\n    }\n\n    // update s-bind\n    var me = this;\n    nodeSBindUpdate(\n        this,\n        this.aNode.directives.bind,\n        changes,\n        function (name, value) {\n            if (name in me.aNode.hotspot.props) {\n                return;\n            }\n\n            getPropHandler(me.tagName, name).prop(me.el, value, name, me);\n        }\n    );\n\n    // update prop\n    var dynamicProps = this.aNode.hotspot.dynamicProps;\n    for (var i = 0, l = dynamicProps.length; i < l; i++) {\n        var prop = dynamicProps[i];\n\n        for (var j = 0, changeLen = changes.length; j < changeLen; j++) {\n            var change = changes[j];\n\n            if (!isDataChangeByElement(change, this, prop.name)\n                && (\n                    changeExprCompare(change.expr, prop.expr, this.scope)\n                    || prop.hintExpr && changeExprCompare(change.expr, prop.hintExpr, this.scope)\n                )\n            ) {\n                handleProp(this, evalExpr(prop.expr, this.scope, this.owner), prop);\n                break;\n            }\n        }\n    }\n\n    // update content\n    var htmlDirective = this.aNode.directives.html;\n    if (htmlDirective) {\n        var len = changes.length;\n        while (len--) {\n            if (changeExprCompare(changes[len].expr, htmlDirective.value, this.scope)) {\n                // #[begin] error\n                warnSetHTML(this.el);\n                // #[end]\n\n                this.el.innerHTML = evalExpr(htmlDirective.value, this.scope, this.owner);\n                return false;\n            }\n        }\n    }\n    else {\n        elementUpdateChildren(this, changes);\n    }\n};\n\n/**\n * 执行完成attached状态的行为\n */\nElement.prototype._attached = elementOwnAttached;\n\n// exports = module.exports = Element;\n\n\n/**\n * @file 销毁节点，清空节点上的无用成员\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 销毁节点\n *\n * @param {Object} node 节点对象\n */\nfunction nodeDispose(node) {\n    node.el = null;\n    node.sel = null;\n    node.owner = null;\n    node.scope = null;\n    node.aNode = null;\n    node.parent = null;\n    node.parentComponent = null;\n    node.children = null;\n\n    if (node._toPhase) {\n        node._toPhase('disposed');\n    }\n\n    if (node._ondisposed) {\n        node._ondisposed();\n    }\n}\n\n// exports = module.exports = nodeDispose;\n\n\n/**\n * @file 初始化节点的 s-bind 数据\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var evalExpr = require('../runtime/eval-expr');\n\n/**\n * 初始化节点的 s-bind 数据\n *\n * @param {Object} node 节点对象\n */\nfunction nodeSBindInit(node, sBind) {\n    if (sBind && node.scope) {\n        node._sbindData = evalExpr(sBind.value, node.scope, node.owner);\n        return true;\n    }\n}\n\n// exports = module.exports = nodeSBindInit;\n\n\n/**\n * @file 更新节点的 s-bind 数据\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var unionKeys = require('../util/union-keys');\n// var evalExpr = require('../runtime/eval-expr');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n\n/**\n * 初始化节点的 s-bind 数据\n *\n * @param {Object} node 节点对象\n */\nfunction nodeSBindUpdate(node, sBind, changes, updater) {\n    if (sBind) {\n        var len = changes.length;\n\n        while (len--) {\n            if (changeExprCompare(changes[len].expr, sBind.value, node.scope)) {\n                var newBindData = evalExpr(sBind.value, node.scope, node.owner);\n                var keys = unionKeys(newBindData, node._sbindData);\n\n                for (var i = 0, l = keys.length; i < l; i++) {\n                    var key = keys[i];\n                    var value = newBindData[key];\n\n                    if (value !== node._sbindData[key]) {\n                        updater(key, value);\n                    }\n                }\n\n                node._sbindData = newBindData;\n                break;\n            }\n\n        }\n    }\n}\n\n// exports = module.exports = nodeSBindUpdate;\n\n\n/**\n * @file 通过组件反解创建节点的工厂方法\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var NodeType = require('./node-type');\n// var TextNode = require('./text-node');\n// var Element = require('./element');\n// var SlotNode = require('./slot-node');\n// var ForNode = require('./for-node');\n// var IfNode = require('./if-node');\n// var TemplateNode = require('./template-node');\n\n// #[begin] reverse\n/**\n * 通过组件反解创建节点\n *\n * @param {ANode} aNode 抽象节点\n * @param {DOMChildrenWalker} reverseWalker 子元素遍历对象\n * @param {Node} parent 父亲节点\n * @param {Model=} scope 所属数据环境\n * @return {Node}\n */\nfunction createReverseNode(aNode, reverseWalker, parent, scope) {\n    var parentIsComponent = parent.nodeType === NodeType.CMPT;\n    var owner = parentIsComponent ? parent : (parent.childOwner || parent.owner);\n    scope = scope || (parentIsComponent ? parent.data : (parent.childScope || parent.scope));\n\n    if (aNode.textExpr) {\n        return new TextNode(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    if (aNode.directives['if']) { // eslint-disable-line dot-notation\n        return new IfNode(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    if (aNode.directives['for']) { // eslint-disable-line dot-notation\n        return new ForNode(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    switch (aNode.tagName) {\n        case 'slot':\n            return new SlotNode(aNode, owner, scope, parent, reverseWalker);\n\n        case 'template':\n            return new TemplateNode(aNode, owner, scope, parent, reverseWalker);\n\n        default:\n            var ComponentType = owner.getComponentType\n                ? owner.getComponentType(aNode)\n                : owner.components[aNode.tagName];\n\n            if (ComponentType) {\n                return new ComponentType({\n                    aNode: aNode,\n                    owner: owner,\n                    scope: scope,\n                    parent: parent,\n                    subTag: aNode.tagName,\n                    reverseWalker: reverseWalker\n                });\n            }\n    }\n\n    return new Element(aNode, owner, scope, parent, reverseWalker);\n}\n// #[end]\n\n// exports = module.exports = createReverseNode;\n\n\n/**\n * @file 销毁释放元素的子元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 销毁释放元素的子元素\n *\n * @param {Object} element 元素节点\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nfunction elementDisposeChildren(element, noDetach, noTransition) {\n    var children = element.children;\n    var len = children && children.length;\n    while (len--) {\n        children[len].dispose(noDetach, noTransition);\n    }\n}\n\n// exports = module.exports = elementDisposeChildren;\n\n\n/**\n * @file 更新元素的子元素视图\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 更新元素的子元素视图\n *\n * @param {Object} element 要更新的元素\n * @param {Array} changes 数据变化信息\n */\nfunction elementUpdateChildren(element, changes) {\n    for (var i = 0, l = element.children.length; i < l; i++) {\n        element.children[i]._update(changes);\n    }\n}\n\n// exports = module.exports = elementUpdateChildren;\n\n\n/**\n * @file 使元素节点到达相应的生命周期\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var LifeCycle = require('./life-cycle');\n\n/**\n * 使元素节点到达相应的生命周期\n *\n * @param {string} name 生命周期名称\n */\nfunction elementOwnToPhase(name) {\n    this.lifeCycle = LifeCycle[name] || this.lifeCycle;\n}\n\n// exports = module.exports = elementOwnToPhase;\n\n\n/**\n * @file 创建节点的工厂方法\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var NodeType = require('./node-type');\n// var TextNode = require('./text-node');\n// var Element = require('./element');\n// var SlotNode = require('./slot-node');\n// var ForNode = require('./for-node');\n// var IfNode = require('./if-node');\n// var TemplateNode = require('./template-node');\n\n\n/**\n * 创建节点\n *\n * @param {ANode} aNode 抽象节点\n * @param {Node} parent 父亲节点\n * @param {Model=} scope 所属数据环境\n * @return {Node}\n */\nfunction createNode(aNode, parent, scope) {\n    var parentIsComponent = parent.nodeType === NodeType.CMPT;\n    var owner = parentIsComponent ? parent : (parent.childOwner || parent.owner);\n    scope = scope || (parentIsComponent ? parent.data : (parent.childScope || parent.scope));\n\n\n    if (aNode.textExpr) {\n        return new TextNode(aNode, owner, scope, parent);\n    }\n\n    if (aNode.directives['if']) { // eslint-disable-line dot-notation\n        return new IfNode(aNode, owner, scope, parent);\n    }\n\n    if (aNode.directives['for']) { // eslint-disable-line dot-notation\n        return new ForNode(aNode, owner, scope, parent);\n    }\n\n    switch (aNode.tagName) {\n        case 'slot':\n            return new SlotNode(aNode, owner, scope, parent);\n\n        case 'template':\n            return new TemplateNode(aNode, owner, scope, parent);\n\n        default:\n            var ComponentType = owner.getComponentType\n                ? owner.getComponentType(aNode)\n                : owner.components[aNode.tagName];\n\n            if (ComponentType) {\n                return new ComponentType({\n                    aNode: aNode,\n                    owner: owner,\n                    scope: scope,\n                    parent: parent,\n                    subTag: aNode.tagName\n                });\n            }\n    }\n\n    return new Element(aNode, owner, scope, parent);\n}\n\n// exports = module.exports = createNode;\n\n\n/**\n * @file 生成子元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var createNode = require('./create-node');\n\n/**\n * 生成子元素\n *\n * @param {Element} element 元素\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction genElementChildren(element, parentEl, beforeEl) {\n    parentEl = parentEl || element.el;\n\n    var aNodeChildren = element.aNode.children;\n    for (var i = 0; i < aNodeChildren.length; i++) {\n        var child = createNode(aNodeChildren[i], element);\n        element.children.push(child);\n        child.attach(parentEl, beforeEl);\n    }\n}\n\n// exports = module.exports = genElementChildren;\n\n\n/**\n * @file 将没有 root 只有 children 的元素 attach 到页面\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var insertBefore = require('../browser/insert-before');\n// var genElementChildren = require('./gen-element-children');\n\n\n/**\n * 将没有 root 只有 children 的元素 attach 到页面\n * 主要用于 slot 和 template\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction nodeOwnOnlyChildrenAttach(parentEl, beforeEl) {\n    this.sel = document.createComment(this.id);\n    insertBefore(this.sel, parentEl, beforeEl);\n\n    genElementChildren(this, parentEl, beforeEl);\n\n    this.el = document.createComment(this.id);\n    insertBefore(this.el, parentEl, beforeEl);\n\n    this._toPhase('attached');\n}\n\n// exports = module.exports = nodeOwnOnlyChildrenAttach;\n\n\n/**\n * @file slot 节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var createANode = require('../parser/create-a-node');\n// var ExprType = require('../parser/expr-type');\n// var createAccessor = require('../parser/create-accessor');\n// var evalExpr = require('../runtime/eval-expr');\n// var Data = require('../runtime/data');\n// var DataChangeType = require('../runtime/data-change-type');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var insertBefore = require('../browser/insert-before');\n// var NodeType = require('./node-type');\n// var LifeCycle = require('./life-cycle');\n// var getANodeProp = require('./get-a-node-prop');\n// var nodeDispose = require('./node-dispose');\n// var nodeSBindInit = require('./node-s-bind-init');\n// var nodeSBindUpdate = require('./node-s-bind-update');\n// var createReverseNode = require('./create-reverse-node');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var elementUpdateChildren = require('./element-update-children');\n// var elementOwnToPhase = require('./element-own-to-phase');\n// var nodeOwnOnlyChildrenAttach = require('./node-own-only-children-attach');\n\n\n/**\n * slot 节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction SlotNode(aNode, owner, scope, parent, reverseWalker) {\n    var realANode = createANode();\n    this.aNode = realANode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n\n    // calc slot name\n    this.nameBind = getANodeProp(aNode, 'name');\n    if (this.nameBind) {\n        this.isNamed = true;\n        this.name = evalExpr(this.nameBind.expr, this.scope, this.owner);\n    }\n\n    // calc aNode children\n    var givenSlots = owner.givenSlots;\n    var givenChildren;\n    if (givenSlots) {\n        givenChildren = this.isNamed ? givenSlots.named[this.name] : givenSlots.noname;\n    }\n\n    if (givenChildren) {\n        this.isInserted = true;\n    }\n\n    realANode.children = givenChildren || aNode.children.slice(0);\n\n    var me = this;\n\n    // calc scoped slot vars\n    realANode.vars = aNode.vars;\n    realANode.directives = aNode.directives;\n\n    var initData;\n    if (nodeSBindInit(this, aNode.directives.bind)) {\n        initData = extend({}, me._sbindData);\n    }\n\n    if (realANode.vars) {\n        initData = initData || {};\n        each(realANode.vars, function (varItem) {\n            initData[varItem.name] = evalExpr(varItem.expr, scope, owner);\n        });\n    }\n\n    // child owner & child scope\n    if (this.isInserted) {\n        this.childOwner = owner.owner;\n        this.childScope = owner.scope;\n    }\n\n    if (initData) {\n        this.isScoped = true;\n        this.childScope = new Data(initData, this.childScope || this.scope);\n    }\n\n\n    owner.slotChildren.push(this);\n\n    // #[begin] reverse\n    if (reverseWalker) {\n\n        this.sel = document.createComment(this.id);\n        insertBefore(this.sel, reverseWalker.target, reverseWalker.current);\n\n        each(this.aNode.children, function (aNodeChild) {\n            me.children.push(createReverseNode(aNodeChild, reverseWalker, me));\n        });\n\n        this.el = document.createComment(this.id);\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n\n        this._toPhase('attached');\n    }\n    // #[end]\n}\n\nSlotNode.prototype.nodeType = NodeType.SLOT;\n\n/**\n * 销毁释放 slot\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nSlotNode.prototype.dispose = function (noDetach, noTransition) {\n    this.childOwner = null;\n    this.childScope = null;\n\n    elementDisposeChildren(this, noDetach, noTransition);\n    nodeDispose(this);\n};\n\nSlotNode.prototype.attach = nodeOwnOnlyChildrenAttach;\nSlotNode.prototype._toPhase = elementOwnToPhase;\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n * @param {boolean=} isFromOuter 变化信息是否来源于父组件之外的组件\n * @return {boolean}\n */\nSlotNode.prototype._update = function (changes, isFromOuter) {\n    var me = this;\n\n    if (this.nameBind && evalExpr(this.nameBind.expr, this.scope, this.owner) !== me.name) {\n        this.owner._notifyNeedReload();\n        return false;\n    }\n\n    if (isFromOuter) {\n        if (this.isInserted) {\n            elementUpdateChildren(this, changes);\n        }\n    }\n    else {\n        if (this.isScoped) {\n            var varKeys = {};\n            each(this.aNode.vars, function (varItem) {\n                varKeys[varItem.name] = 1;\n                me.childScope.set(varItem.name, evalExpr(varItem.expr, me.scope, me.owner));\n            });\n\n            var scopedChanges = [];\n\n            nodeSBindUpdate(\n                this,\n                this.aNode.directives.bind,\n                changes,\n                function (name, value) {\n                    if (varKeys[name]) {\n                        return;\n                    }\n\n                    me.childScope.set(name, value);\n                    scopedChanges.push({\n                        type: DataChangeType.SET,\n                        expr: createAccessor([\n                            { type: ExprType.STRING, value: name }\n                        ]),\n                        value: value,\n                        option: {}\n                    });\n                }\n            );\n\n            each(changes, function (change) {\n                if (!me.isInserted) {\n                    scopedChanges.push(change);\n                }\n\n                each(me.aNode.vars, function (varItem) {\n                    var name = varItem.name;\n                    var relation = changeExprCompare(change.expr, varItem.expr, me.scope);\n\n                    if (relation < 1) {\n                        return;\n                    }\n\n                    if (change.type !== DataChangeType.SPLICE) {\n                        scopedChanges.push({\n                            type: DataChangeType.SET,\n                            expr: createAccessor([\n                                {type: ExprType.STRING, value: name}\n                            ]),\n                            value: me.childScope.get(name),\n                            option: change.option\n                        });\n                    }\n                    else if (relation === 2) {\n                        scopedChanges.push({\n                            expr: createAccessor([\n                                {type: ExprType.STRING, value: name}\n                            ]),\n                            type: DataChangeType.SPLICE,\n                            index: change.index,\n                            deleteCount: change.deleteCount,\n                            value: change.value,\n                            insertions: change.insertions,\n                            option: change.option\n                        });\n                    }\n                });\n            });\n\n            elementUpdateChildren(this, scopedChanges);\n        }\n        else if (!this.isInserted) {\n            elementUpdateChildren(this, changes);\n        }\n    }\n};\n\n// exports = module.exports = SlotNode;\n\n\n/**\n * @file 复制指令集合对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 复制指令集合对象\n *\n * @param {Object} source 要复制的指令集合对象\n * @param {Object=} excludes 需要排除的key集合\n * @return {Object}\n */\nfunction cloneDirectives(source, excludes) {\n    var result = {};\n    excludes = excludes || {};\n\n    for (var key in source) {\n        if (!excludes[key]) {\n            result[key] = source[key];\n        }\n    }\n\n    return result;\n}\n\n// exports = module.exports = cloneDirectives;\n\n\n/**\n * @file 简单执行销毁节点的行为\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var removeEl = require('../browser/remove-el');\n// var nodeDispose = require('./node-dispose');\n// var elementDisposeChildren = require('./element-dispose-children');\n\n/**\n * 简单执行销毁节点的行为\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n */\nfunction nodeOwnSimpleDispose(noDetach) {\n    elementDisposeChildren(this, noDetach, 1);\n\n    if (!noDetach) {\n        removeEl(this.el);\n    }\n\n    nodeDispose(this);\n}\n\n// exports = module.exports = nodeOwnSimpleDispose;\n\n\n/**\n * @file 创建节点对应的 stump comment 元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n\n/**\n * 创建节点对应的 stump comment 主元素\n */\nfunction nodeOwnCreateStump() {\n    this.el = this.el || document.createComment(this.id);\n}\n\n// exports = module.exports = nodeOwnCreateStump;\n\n\n/**\n * @file for 指令节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var inherits = require('../util/inherits');\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var createANode = require('../parser/create-a-node');\n// var ExprType = require('../parser/expr-type');\n// var parseExpr = require('../parser/parse-expr');\n// var createAccessor = require('../parser/create-accessor');\n// var cloneDirectives = require('../parser/clone-directives');\n// var Data = require('../runtime/data');\n// var DataChangeType = require('../runtime/data-change-type');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var evalExpr = require('../runtime/eval-expr');\n// var changesIsInDataRef = require('../runtime/changes-is-in-data-ref');\n// var removeEl = require('../browser/remove-el');\n// var insertBefore = require('../browser/insert-before');\n// var LifeCycle = require('./life-cycle');\n// var NodeType = require('./node-type');\n// var createNode = require('./create-node');\n// var createReverseNode = require('./create-reverse-node');\n// var nodeOwnSimpleDispose = require('./node-own-simple-dispose');\n// var nodeOwnCreateStump = require('./node-own-create-stump');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var dataCache = require('../runtime/data-cache');\n\n\n/**\n * 循环项的数据容器类\n *\n * @inner\n * @class\n * @param {Object} forElement for元素对象\n * @param {*} item 当前项的数据\n * @param {number} index 当前项的索引\n */\nfunction ForItemData(forElement, item, index) {\n    this.id = guid();\n    this.parent = forElement.scope;\n    this.raw = {};\n    this.listeners = [];\n\n    this.directive = forElement.aNode.directives['for']; // eslint-disable-line dot-notation\n    this.raw[this.directive.item.raw] = item;\n    this.raw[this.directive.index.raw] = index;\n}\n\n/**\n * 将数据操作的表达式，转换成为对parent数据操作的表达式\n * 主要是对item和index进行处理\n *\n * @param {Object} expr 表达式\n * @return {Object}\n */\nForItemData.prototype.exprResolve = function (expr) {\n    var directive = this.directive;\n    var me = this;\n\n    function resolveItem(expr) {\n        if (expr.type === ExprType.ACCESSOR\n            && expr.paths[0].value === directive.item.paths[0].value\n        ) {\n            return createAccessor(\n                directive.value.paths.concat(\n                    {\n                        type: ExprType.NUMBER,\n                        value: me.get(directive.index)\n                    },\n                    expr.paths.slice(1)\n                )\n            );\n        }\n\n        return expr;\n    }\n\n    expr = resolveItem(expr);\n\n    var resolvedPaths = [];\n\n    each(expr.paths, function (item) {\n        resolvedPaths.push(\n            item.type === ExprType.ACCESSOR\n                && item.paths[0].value === directive.index.paths[0].value\n            ? {\n                type: ExprType.NUMBER,\n                value: me.get(directive.index)\n            }\n            : resolveItem(item)\n        );\n    });\n\n    return createAccessor(resolvedPaths);\n};\n\n// 代理数据操作方法\ninherits(ForItemData, Data);\neach(\n    ['set', 'remove', 'unshift', 'shift', 'push', 'pop', 'splice'],\n    function (method) {\n        ForItemData.prototype['_' + method] = Data.prototype[method];\n        ForItemData.prototype[method] = function (expr) {\n            expr = this.exprResolve(parseExpr(expr));\n            dataCache.clear();\n            this.parent[method].apply(\n                this.parent,\n                [expr].concat(Array.prototype.slice.call(arguments, 1))\n            );\n        };\n    }\n);\n\n/**\n * 创建 for 指令元素的子元素\n *\n * @inner\n * @param {ForDirective} forElement for 指令元素对象\n * @param {*} item 子元素对应数据\n * @param {number} index 子元素对应序号\n * @return {Element}\n */\nfunction createForDirectiveChild(forElement, item, index) {\n    var itemScope = new ForItemData(forElement, item, index);\n    return createNode(forElement.itemANode, forElement, itemScope);\n}\n\n/**\n * for 指令节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction ForNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n    this.children = [];\n\n    this.itemANode = createANode({\n        children: aNode.children,\n        props: aNode.props,\n        events: aNode.events,\n        tagName: aNode.tagName,\n        vars: aNode.vars,\n        hotspot: aNode.hotspot,\n        directives: cloneDirectives(aNode.directives, {\n            'for': 1\n        })\n    });\n\n    this.param = aNode.directives['for']; // eslint-disable-line dot-notation\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        var me = this;\n        this.listData = evalExpr(this.param.value, this.scope, this.owner);\n        eachForData(\n            this,\n            function (item, i) {\n                var itemScope = new ForItemData(me, item, i);\n                var child = createReverseNode(me.itemANode, reverseWalker, me, itemScope);\n                me.children.push(child);\n            }\n        );\n\n        this._create();\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n    }\n    // #[end]\n}\n\n\nForNode.prototype.nodeType = NodeType.FOR;\nForNode.prototype._create = nodeOwnCreateStump;\nForNode.prototype.dispose = nodeOwnSimpleDispose;\n\n/**\n * 对 for 节点数据进行遍历\n *\n * @inner\n * @param {ForNode} forNode for节点对象\n * @param {Function} fn 数据遍历函数\n */\nfunction eachForData(forNode, fn) {\n    var listData = forNode.listData;\n\n    if (listData instanceof Array) {\n        for (var i = 0; i < listData.length; i++) {\n            fn(listData[i], i);\n        }\n    }\n    else if (listData && typeof listData === 'object') {\n        for (var i in listData) {\n            if (listData.hasOwnProperty(i)) {\n                (listData[i] != null) && fn(listData[i], i);\n            }\n        }\n    }\n}\n\n/**\n * 将元素attach到页面的行为\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nForNode.prototype.attach = function (parentEl, beforeEl) {\n    this._create();\n    insertBefore(this.el, parentEl, beforeEl);\n    this.listData = evalExpr(this.param.value, this.scope, this.owner);\n\n    this._createChildren();\n};\n\n/**\n * 创建子元素\n */\nForNode.prototype._createChildren = function () {\n    var me = this;\n    var parentEl = me.el.parentNode;\n\n    eachForData(this, function (value, i) {\n        var child = createForDirectiveChild(me, value, i);\n        me.children.push(child);\n        child.attach(parentEl, me.el);\n    });\n};\n\n/**\n * 将元素从页面上移除的行为\n */\nForNode.prototype.detach = function () {\n    if (this.lifeCycle.attached) {\n        elementDisposeChildren(this);\n        this.children = [];\n        removeEl(this.el);\n        this.lifeCycle = LifeCycle.detached;\n    }\n};\n\n/* eslint-disable fecs-max-statements */\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n */\nForNode.prototype._update = function (changes) {\n    var listData = evalExpr(this.param.value, this.scope, this.owner);\n    var oldIsArr = this.listData instanceof Array;\n    var newIsArr = listData instanceof Array;\n\n    if (this.children.length) {\n        if (!listData || newIsArr && listData.length === 0) {\n            this._disposeChildren();\n            this.listData = listData;\n            return;\n        }\n\n        // 就是这么暴力\n        // 不推荐使用for遍历object，用的话自己负责\n        if (oldIsArr !== newIsArr || !newIsArr) {\n            this.listData = listData;\n            var me = this;\n            this._disposeChildren(null, function () {\n                me._createChildren();\n            });\n            return;\n        }\n\n        this._updateArray(changes, listData);\n        this.listData = listData;\n    }\n    else {\n        this.listData = listData;\n        this._createChildren();\n    }\n};\n\n/**\n * 销毁释放子元素\n *\n * @param {Array?} children 要销毁的子元素，默认为自身的children\n * @param {Function} callback 释放完成的回调函数\n */\nForNode.prototype._disposeChildren = function (children, callback) {\n    var parentEl = this.el.parentNode;\n    var parentFirstChild = parentEl.firstChild;\n    var parentLastChild = parentEl.lastChild;\n\n    var len = this.children.length;\n\n    var violentClear = !this.aNode.directives.transition\n        && !children\n        // 是否 parent 的唯一 child\n        && (len\n                && parentFirstChild === this.children[0].el\n                && (parentLastChild === this.el\n                    || parentLastChild === this.children[len - 1].el)\n            || len === 0\n                && parentFirstChild === this.el\n                && parentLastChild === this.el\n        );\n\n    if (!children) {\n        children = this.children;\n        this.children = [];\n    }\n\n\n    var me = this;\n    var disposedChildCount = 0;\n    len = children.length;\n    if (!len) {\n        childDisposed();\n    }\n    else {\n        for (var i = 0; i < len; i++) {\n            var disposeChild = children[i];\n            if (disposeChild) {\n                disposeChild._ondisposed = childDisposed;\n                disposeChild.dispose(violentClear, violentClear);\n            }\n            else {\n                childDisposed();\n            }\n        }\n    }\n\n    function childDisposed() {\n        disposedChildCount++;\n        if (disposedChildCount >= len) {\n            if (violentClear) {\n                // cloneNode + replaceChild is faster\n                // parentEl.innerHTML = '';\n                var replaceNode = parentEl.cloneNode(false);\n                parentEl.parentNode.replaceChild(replaceNode, parentEl);\n                me.el = document.createComment(me.id);\n                replaceNode.appendChild(me.el);\n            }\n\n            callback && callback();\n        }\n    }\n};\n\n/**\n * 数组类型的视图更新\n *\n * @param {Array} changes 数据变化信息\n * @param {Array} newList 新数组数据\n */\nForNode.prototype._updateArray = function (changes, newList) {\n    var oldChildrenLen = this.children.length;\n    var childrenChanges = new Array(oldChildrenLen);\n\n    function pushToChildrenChanges(change) {\n        for (var i = 0, l = childrenChanges.length; i < l; i++) {\n            (childrenChanges[i] = childrenChanges[i] || []).push(change);\n        }\n    }\n\n    var disposeChildren = [];\n\n    // 控制列表是否整体更新的变量\n    var isChildrenRebuild;\n\n    // var newList = evalExpr(this.param.value, this.scope, this.owner) || [];\n    var newLen = newList.length;\n\n    /* eslint-disable no-redeclare */\n    for (var cIndex = 0; cIndex < changes.length; cIndex++) {\n        var change = changes[cIndex];\n        var relation = changeExprCompare(change.expr, this.param.value, this.scope);\n\n        if (!relation) {\n            // 无关时，直接传递给子元素更新，列表本身不需要动\n            pushToChildrenChanges(change);\n        }\n        else if (relation > 2) {\n            // 变更表达式是list绑定表达式的子项\n            // 只需要对相应的子项进行更新\n            var changePaths = change.expr.paths;\n            var forLen = this.param.value.paths.length;\n            var changeIndex = +evalExpr(changePaths[forLen], this.scope, this.owner);\n\n            if (isNaN(changeIndex)) {\n                pushToChildrenChanges(change);\n            }\n            else {\n                change = {\n                    type: change.type,\n                    expr: createAccessor(\n                        this.param.item.paths.concat(changePaths.slice(forLen + 1))\n                    ),\n                    value: change.value,\n                    index: change.index,\n                    deleteCount: change.deleteCount,\n                    insertions: change.insertions,\n                    option: change.option\n                };\n\n                (childrenChanges[changeIndex] = childrenChanges[changeIndex] || [])\n                    .push(change);\n\n                if (this.children[changeIndex]) {\n                    if (change.type === DataChangeType.SPLICE) {\n                        this.children[changeIndex].scope._splice(\n                            change.expr,\n                            [].concat(change.index, change.deleteCount, change.insertions),\n                            { silent: 1 }\n                        );\n                    }\n                    else {\n                        this.children[changeIndex].scope._set(\n                            change.expr,\n                            change.value,\n                            { silent: 1 }\n                        );\n                    }\n                }\n            }\n        }\n        else if (change.type !== DataChangeType.SPLICE) {\n            // 变更表达式是list绑定表达式本身或母项的重新设值\n            // 此时需要更新整个列表\n\n            var getItemKey = this.aNode.hotspot.getForKey;\n            if (getItemKey && newLen && oldChildrenLen) {\n                // 如果设置了trackBy，用lcs更新。开始 ====\n                var lcsFlags = [];\n                var newListKeys = [];\n                var oldListKeys = [];\n\n                each(newList, function (item) {\n                    newListKeys.push(getItemKey(item));\n                });\n\n                each(this.listData, function (item) {\n                    oldListKeys.push(getItemKey(item));\n                });\n\n\n                var newIndex;\n                var oldIndex;\n                for (oldIndex = 0; oldIndex <= oldChildrenLen; oldIndex++) {\n                    lcsFlags.push([]);\n\n                    for (newIndex = 0; newIndex <= newLen; newIndex++) {\n                        var lcsFlag = 0;\n                        if (newIndex && oldIndex) {\n                            lcsFlag = newListKeys[newIndex - 1] === oldListKeys[oldIndex - 1]\n                                ? lcsFlags[oldIndex - 1][newIndex - 1] + 1\n                                : Math.max(lcsFlags[oldIndex - 1][newIndex], lcsFlags[oldIndex][newIndex - 1]);\n                        }\n\n                        lcsFlags[oldIndex].push(lcsFlag);\n                    }\n                }\n\n                newIndex--;\n                oldIndex--;\n                while (1) {\n                    if (oldIndex && newIndex && oldListKeys[oldIndex - 1] === newListKeys[newIndex - 1]) {\n                        newIndex--;\n                        oldIndex--;\n\n                        // 如果数据本身引用发生变化，设置变更\n                        if (this.listData[oldIndex] !== newList[newIndex]) {\n                            (childrenChanges[oldIndex] = childrenChanges[oldIndex] || []).push({\n                                type: DataChangeType.SET,\n                                option: change.option,\n                                expr: createAccessor(this.param.item.paths.slice(0)),\n                                value: newList[newIndex]\n                            });\n                        }\n\n                        // 对list更上级数据的直接设置\n                        if (relation < 2) {\n                            (childrenChanges[oldIndex] = childrenChanges[oldIndex] || []).push(change);\n                        }\n                    }\n                    else if (newIndex && (!oldIndex || lcsFlags[oldIndex][newIndex - 1] >= lcsFlags[oldIndex - 1][newIndex])) {\n                        newIndex--;\n                        childrenChanges.splice(oldIndex, 0, 0);\n                        this.children.splice(oldIndex, 0, 0);\n                    }\n                    else if (oldIndex && (!newIndex || lcsFlags[oldIndex][newIndex - 1] < lcsFlags[oldIndex - 1][newIndex])) {\n                        oldIndex--;\n                        disposeChildren.push(this.children[oldIndex]);\n                        childrenChanges.splice(oldIndex, 1);\n                        this.children.splice(oldIndex, 1);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                // 如果设置了trackBy，用lcs更新。结束 ====\n            }\n            else {\n                // 老的比新的多的部分，标记需要dispose\n                if (oldChildrenLen > newLen) {\n                    disposeChildren = disposeChildren.concat(this.children.slice(newLen));\n                    childrenChanges = childrenChanges.slice(0, newLen);\n                    this.children = this.children.slice(0, newLen);\n                }\n\n                // 剩下的部分整项变更\n                for (var i = 0; i < newLen; i++) {\n                    (childrenChanges[i] = childrenChanges[i] || []).push({\n                        type: DataChangeType.SET,\n                        option: change.option,\n                        expr: createAccessor(this.param.item.paths.slice(0)),\n                        value: newList[i]\n                    });\n\n                    // 对list更上级数据的直接设置\n                    if (relation < 2) {\n                        childrenChanges[i].push(change);\n                    }\n\n                    if (this.children[i]) {\n                        this.children[i].scope._set(\n                            this.param.item,\n                            newList[i],\n                            {silent: 1}\n                        );\n                    }\n                    else {\n                        this.children[i] = 0;\n                    }\n                }\n            }\n\n            isChildrenRebuild = 1;\n        }\n        else if (relation === 2 && change.type === DataChangeType.SPLICE && !isChildrenRebuild) {\n            // 变更表达式是list绑定表达式本身数组的splice操作\n            // 此时需要删除部分项，创建部分项\n            var changeStart = change.index;\n            var deleteCount = change.deleteCount;\n            var insertionsLen = change.insertions.length;\n            var newCount = insertionsLen - deleteCount;\n\n            if (newCount) {\n                var indexChange = {\n                    type: DataChangeType.SET,\n                    option: change.option,\n                    expr: this.param.index\n                };\n\n                for (var i = changeStart + deleteCount; i < this.children.length; i++) {\n                    (childrenChanges[i] = childrenChanges[i] || []).push(indexChange);\n                    this.children[i] && this.children[i].scope._set(\n                        indexChange.expr,\n                        i - deleteCount + insertionsLen,\n                        {silent: 1}\n                    );\n                }\n            }\n\n            var deleteLen = deleteCount;\n            while (deleteLen--) {\n                if (deleteLen < insertionsLen) {\n                    var i = changeStart + deleteLen;\n                    // update\n                    (childrenChanges[i] = childrenChanges[i] || []).push({\n                        type: DataChangeType.SET,\n                        option: change.option,\n                        expr: createAccessor(this.param.item.paths.slice(0)),\n                        value: change.insertions[deleteLen]\n                    });\n                    if (this.children[i]) {\n                        this.children[i].scope._set(\n                            this.param.item,\n                            change.insertions[deleteLen],\n                            {silent: 1}\n                        );\n                    }\n                }\n            }\n\n            if (newCount < 0) {\n                disposeChildren = disposeChildren.concat(this.children.splice(changeStart + insertionsLen, -newCount));\n                childrenChanges.splice(changeStart + insertionsLen, -newCount);\n            }\n            else if (newCount > 0) {\n                var spliceArgs = [changeStart + deleteCount, 0].concat(new Array(newCount));\n                this.children.splice.apply(this.children, spliceArgs);\n                childrenChanges.splice.apply(childrenChanges, spliceArgs);\n            }\n        }\n    }\n\n    var newChildrenLen = this.children.length;\n\n    // 标记 length 是否发生变化\n    if (newChildrenLen !== oldChildrenLen && this.param.value.paths) {\n        var lengthChange = {\n            type: DataChangeType.SET,\n            option: {},\n            expr: createAccessor(\n                this.param.value.paths.concat({\n                    type: ExprType.STRING,\n                    value: 'length'\n                })\n            )\n        };\n\n        if (changesIsInDataRef([lengthChange], this.aNode.hotspot.data)) {\n            pushToChildrenChanges(lengthChange);\n        }\n    }\n\n    // 执行视图更新，先删再刷新\n    this._doCreateAndUpdate = doCreateAndUpdate;\n\n    var me = this;\n    if (disposeChildren.length === 0) {\n        doCreateAndUpdate();\n    }\n    else {\n        this._disposeChildren(disposeChildren, function () {\n            if (doCreateAndUpdate === me._doCreateAndUpdate) {\n                doCreateAndUpdate();\n            }\n        });\n    }\n\n    function doCreateAndUpdate() {\n        me._doCreateAndUpdate = null;\n\n        var beforeEl = me.el;\n        var parentEl = beforeEl.parentNode;\n\n        // 对相应的项进行更新\n        // 如果不attached则直接创建，如果存在则调用更新函数\n        var j = -1;\n        for (var i = 0; i < newChildrenLen; i++) {\n            var child = me.children[i];\n\n            if (child) {\n                childrenChanges[i] && child._update(childrenChanges[i]);\n            }\n            else {\n                if (j < i) {\n                    j = i + 1;\n                    beforeEl = null;\n                    while (j < newChildrenLen) {\n                        var nextChild = me.children[j];\n                        if (nextChild) {\n                            beforeEl = nextChild.sel || nextChild.el;\n                            break;\n                        }\n                        j++;\n                    }\n                }\n\n                me.children[i] = createForDirectiveChild(me, newList[i], i);\n                me.children[i].attach(parentEl, beforeEl || me.el);\n            }\n        }\n    }\n};\n\n\n// exports = module.exports = ForNode;\n\n\n/**\n * @file 清洗条件 aNode\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var createANode = require('../parser/create-a-node');\n// var cloneDirectives = require('../parser/clone-directives');\n\n\n/**\n * 清洗条件 aNode，返回纯净无条件指令的 aNode\n *\n * @param {ANode} aNode 条件节点对象\n * @return {ANode}\n */\nfunction rinseCondANode(aNode) {\n    var clearANode = createANode({\n        children: aNode.children,\n        props: aNode.props,\n        events: aNode.events,\n        tagName: aNode.tagName,\n        vars: aNode.vars,\n        hotspot: aNode.hotspot,\n        directives: cloneDirectives(aNode.directives, {\n            'if': 1,\n            'else': 1,\n            'elif': 1\n        })\n    });\n\n    return clearANode;\n}\n\n// exports = module.exports = rinseCondANode;\n\n\n/**\n * @file if 指令节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var insertBefore = require('../browser/insert-before');\n// var evalExpr = require('../runtime/eval-expr');\n// var NodeType = require('./node-type');\n// var rinseCondANode = require('./rinse-cond-anode');\n// var createNode = require('./create-node');\n// var createReverseNode = require('./create-reverse-node');\n// var nodeOwnCreateStump = require('./node-own-create-stump');\n// var elementUpdateChildren = require('./element-update-children');\n// var nodeOwnSimpleDispose = require('./node-own-simple-dispose');\n\n/**\n * if 指令节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction IfNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n    this.children = [];\n\n    this.cond = this.aNode.directives['if'].value; // eslint-disable-line dot-notation\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        if (evalExpr(this.cond, this.scope, this.owner)) {\n            this.elseIndex = -1;\n            this.children[0] = createReverseNode(\n                rinseCondANode(aNode),\n                reverseWalker,\n                this\n            );\n        }\n        else {\n            var me = this;\n            each(aNode.elses, function (elseANode, index) {\n                var elif = elseANode.directives.elif;\n\n                if (!elif || elif && evalExpr(elif.value, me.scope, me.owner)) {\n                    me.elseIndex = index;\n                    me.children[0] = createReverseNode(\n                        rinseCondANode(elseANode),\n                        reverseWalker,\n                        me\n                    );\n                    return false;\n                }\n            });\n        }\n\n        this._create();\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n    }\n    // #[end]\n}\n\nIfNode.prototype.nodeType = NodeType.IF;\n\nIfNode.prototype._create = nodeOwnCreateStump;\nIfNode.prototype.dispose = nodeOwnSimpleDispose;\n\nIfNode.prototype.attach = function (parentEl, beforeEl) {\n    var me = this;\n    var elseIndex;\n    var child;\n\n    if (evalExpr(this.cond, this.scope, this.owner)) {\n        child = createNode(rinseCondANode(me.aNode), me);\n        elseIndex = -1;\n    }\n    else {\n        each(me.aNode.elses, function (elseANode, index) {\n            var elif = elseANode.directives.elif;\n\n            if (!elif || elif && evalExpr(elif.value, me.scope, me.owner)) {\n                child = createNode(rinseCondANode(elseANode), me);\n                elseIndex = index;\n                return false;\n            }\n        });\n    }\n\n    if (child) {\n        me.children[0] = child;\n        child.attach(parentEl, beforeEl);\n        me.elseIndex = elseIndex;\n    }\n\n\n    this._create();\n    insertBefore(this.el, parentEl, beforeEl);\n};\n\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n */\nIfNode.prototype._update = function (changes) {\n    var me = this;\n    var childANode = me.aNode;\n    var elseIndex;\n\n    if (evalExpr(this.cond, this.scope, this.owner)) {\n        elseIndex = -1;\n    }\n    else {\n        each(me.aNode.elses, function (elseANode, index) {\n            var elif = elseANode.directives.elif;\n\n            if (elif && evalExpr(elif.value, me.scope, me.owner) || !elif) {\n                elseIndex = index;\n                childANode = elseANode;\n                return false;\n            }\n        });\n    }\n\n    if (elseIndex === me.elseIndex) {\n        elementUpdateChildren(me, changes);\n    }\n    else {\n        var child = me.children[0];\n        me.children = [];\n        if (child) {\n            child._ondisposed = newChild;\n            child.dispose();\n        }\n        else {\n            newChild();\n        }\n\n        me.elseIndex = elseIndex;\n    }\n\n    function newChild() {\n        if (typeof elseIndex !== 'undefined') {\n            var child = createNode(rinseCondANode(childANode), me);\n            // var parentEl = getNodeStumpParent(me);\n            child.attach(me.el.parentNode, me.el);\n\n            me.children[0] = child;\n        }\n    }\n};\n\n// exports = module.exports = IfNode;\n\n\n/**\n * @file template 节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var insertBefore = require('../browser/insert-before');\n// var NodeType = require('./node-type');\n// var LifeCycle = require('./life-cycle');\n// var nodeDispose = require('./node-dispose');\n// var createReverseNode = require('./create-reverse-node');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var elementOwnToPhase = require('./element-own-to-phase');\n// var elementUpdateChildren = require('./element-update-children');\n// var nodeOwnOnlyChildrenAttach = require('./node-own-only-children-attach');\n\n/**\n * template 节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction TemplateNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        this.sel = document.createComment(this.id);\n        insertBefore(this.sel, reverseWalker.target, reverseWalker.current);\n\n        var me = this;\n        each(this.aNode.children, function (aNodeChild) {\n            me.children.push(createReverseNode(aNodeChild, reverseWalker, me));\n        });\n\n        this.el = document.createComment(this.id);\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n\n        this._toPhase('attached');\n    }\n    // #[end]\n}\n\n\n\nTemplateNode.prototype.nodeType = NodeType.TPL;\n\nTemplateNode.prototype.attach = nodeOwnOnlyChildrenAttach;\n\n/**\n * 销毁释放\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nTemplateNode.prototype.dispose = function (noDetach, noTransition) {\n    elementDisposeChildren(this, noDetach, noTransition);\n    nodeDispose(this);\n};\n\n\nTemplateNode.prototype._toPhase = elementOwnToPhase;\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n */\nTemplateNode.prototype._update = function (changes) {\n    elementUpdateChildren(this, changes);\n};\n\n// exports = module.exports = TemplateNode;\n\n\n/**\n * @file 对元素的子节点进行反解\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var each = require('../util/each');\n// var DOMChildrenWalker = require('./dom-children-walker');\n// var createReverseNode = require('./create-reverse-node');\n\n// #[begin] reverse\n\n/**\n * 对元素的子节点进行反解\n *\n * @param {Object} element 元素\n */\nfunction reverseElementChildren(element) {\n    var htmlDirective = element.aNode.directives.html;\n\n    if (!htmlDirective) {\n        var reverseWalker = new DOMChildrenWalker(element.el);\n\n        each(element.aNode.children, function (aNodeChild) {\n            element.children.push(createReverseNode(aNodeChild, reverseWalker, element));\n        });\n    }\n}\n// #[end]\n\n// exports = module.exports = reverseElementChildren;\n\n\n/**\n * @file 处理元素的属性操作\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var getPropHandler = require('./get-prop-handler');\n\n/**\n * 处理元素属性操作\n *\n * @param {Object} element 元素对象\n * @param {*} value 属性值\n * @param {Object} prop 属性信息对象\n */\nfunction handleProp(element, value, prop) {\n    var name = prop.name;\n    getPropHandler(element.tagName, name).prop(element.el, value, name, element, prop);\n}\n\n// exports = module.exports = handleProp;\n\n\n/**\n * @file 创建节点对应的 HTMLElement 主元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var evalExpr = require('../runtime/eval-expr');\n// var createEl = require('../browser/create-el');\n// var handleProp = require('./handle-prop');\n// var LifeCycle = require('./life-cycle');\n// var NodeType = require('./node-type');\n\nvar emptyPropWhenCreate = {\n    'class': 1,\n    'style': 1,\n    'id': 1\n};\n\n/**\n * 创建节点对应的 HTMLElement 主元素\n */\nfunction elementOwnCreate() {\n    if (!this.lifeCycle.created) {\n        var isComponent = this.nodeType === NodeType.CMPT;\n        var sourceNode = this.aNode.hotspot.sourceNode;\n        var props = this.aNode.props;\n\n        if (sourceNode) {\n            this.el = sourceNode.cloneNode();\n            props = this.aNode.hotspot.dynamicProps;\n        }\n        else {\n            this.el = createEl(this.tagName);\n        }\n\n        for (var key in this._sbindData) {\n            getPropHandler(this.tagName, key).prop(this.el, this._sbindData[key], key, this);\n        }\n\n        for (var i = 0, l = props.length; i < l; i++) {\n            var prop = props[i];\n            var value = isComponent\n                ? evalExpr(prop.expr, this.data, this)\n                : evalExpr(prop.expr, this.scope, this.owner);\n\n            if (value || !emptyPropWhenCreate[prop.name]) {\n                handleProp(this, value, prop);\n            }\n        }\n\n        this._toPhase('created');\n    }\n}\n\n// exports = module.exports = elementOwnCreate;\n\n\n/**\n * @file 将元素attach到页面\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var createNode = require('./create-node');\n// var evalExpr = require('../runtime/eval-expr');\n// var insertBefore = require('../browser/insert-before');\n\n/**\n * 将元素attach到页面\n *\n * @param {Object} element 元素节点\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction elementAttach(element, parentEl, beforeEl) {\n    element._create();\n    insertBefore(element.el, parentEl, beforeEl);\n\n    if (!element._contentReady) {\n        var htmlDirective = element.aNode.directives.html;\n\n        if (htmlDirective) {\n            element.el.innerHTML = evalExpr(htmlDirective.value, element.scope, element.owner);\n        }\n        else {\n            var aNodeChildren = element.aNode.children;\n            for (var i = 0; i < aNodeChildren.length; i++) {\n                var child = createNode(aNodeChildren[i], element);\n                element.children.push(child);\n                child.attach(element.el);\n            }\n        }\n\n        element._contentReady = 1;\n    }\n}\n\n\n// exports = module.exports = elementAttach;\n\n\n/**\n * @file 将元素attach到页面\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var elementAttach = require('./element-attach');\n\n/**\n * 将元素attach到页面\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction elementOwnAttach(parentEl, beforeEl) {\n    if (!this.lifeCycle.attached) {\n        elementAttach(this, parentEl, beforeEl);\n        this._attached();\n    }\n}\n\n// exports = module.exports = elementOwnAttach;\n\n\n/**\n * @file 获取 element 的 transition 控制对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var evalArgs = require('../runtime/eval-args');\n// var findMethod = require('../runtime/find-method');\n// var NodeType = require('./node-type');\n\n/**\n * 获取 element 的 transition 控制对象\n *\n * @param {Object} element 元素\n * @return {Object?}\n */\nfunction elementGetTransition(element) {\n    var directive = element.aNode.directives.transition;\n    var owner = element.owner;\n\n    if (element.nodeType === NodeType.CMPT) {\n        var cmptGivenTransition = element.givenANode && element.givenANode.directives.transition;\n        if (cmptGivenTransition) {\n            directive = cmptGivenTransition;\n        }\n        else {\n            owner = element;\n        }\n    }\n\n    var transition;\n    if (directive && owner) {\n        transition = findMethod(owner, directive.value.name);\n\n        if (typeof transition === 'function') {\n            transition = transition.apply(\n                owner,\n                evalArgs(directive.value.args, element.scope, owner)\n            );\n        }\n    }\n\n    return transition || element.transition;\n}\n\n// exports = module.exports = elementGetTransition;\n\n\n/**\n * @file 元素节点执行leave行为\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var elementGetTransition = require('./element-get-transition');\n\n\n/**\n * 元素节点执行leave行为\n *\n * @param {Object} element 元素\n */\nfunction elementLeave(element) {\n    var lifeCycle = element.lifeCycle;\n    if (lifeCycle.leaving) {\n        return;\n    }\n\n    if (element.disposeNoTransition) {\n        element._doneLeave();\n    }\n    else {\n        var transition = elementGetTransition(element);\n\n        if (transition && transition.leave) {\n            element._toPhase('leaving');\n            transition.leave(element.el, function () {\n                element._doneLeave();\n            });\n        }\n        else {\n            element._doneLeave();\n        }\n    }\n}\n\n// exports = module.exports = elementLeave;\n\n\n/**\n * @file 将元素从页面上移除\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var elementLeave = require('./element-leave');\n\n/**\n * 将元素从页面上移除\n */\nfunction elementOwnDetach() {\n    elementLeave(this);\n}\n\n\n// exports = module.exports = elementOwnDetach;\n\n\n/**\n * @file 销毁释放元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var elementLeave = require('./element-leave');\n\n/**\n * 销毁释放元素\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nfunction elementOwnDispose(noDetach, noTransition) {\n    this.leaveDispose = 1;\n    this.disposeNoDetach = noDetach;\n    this.disposeNoTransition = noTransition;\n\n    elementLeave(this);\n}\n\n// exports = module.exports = elementOwnDispose;\n\n\n/**\n * @file 为元素的 el 绑定事件\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var on = require('../browser/on');\n\n/**\n * 为元素的 el 绑定事件\n *\n * @param {string} name 事件名\n * @param {Function} listener 监听器\n * @param {boolean} capture 是否是捕获阶段触发\n */\nfunction elementOwnOnEl(name, listener, capture) {\n    if (typeof listener === 'function') {\n        capture = !!capture;\n        this._elFns.push([name, listener, capture]);\n        on(this.el, name, listener, capture);\n    }\n}\n\n// exports = module.exports = elementOwnOnEl;\n\n\n/**\n * @file  事件绑定不存在的 warning\n * @author varsha(wangshuonpu@gmail.com)\n */\n\n// var each = require('../util/each');\n\n// #[begin] error\n/**\n * 事件绑定不存在的 warning\n *\n * @param {Object} eventBind 事件绑定对象\n * @param {Component} owner 所属的组件对象\n */\nfunction warnEventListenMethod(eventBind, owner) {\n    var valid = true;\n    var method = owner;\n    each(eventBind.expr.name.paths, function (path) {\n        if (!path.value) {\n            return false;\n        }\n\n        method = method[path.value];\n        valid = !!method;\n        return valid;\n    });\n\n    if (!valid) {\n        var paths = [];\n        each(eventBind.expr.name.paths, function (path) {\n            paths.push(path.value);\n        });\n        var message = '[SAN WARNING] ' + eventBind.name + ' listen fail,\"' + paths.join('.') + '\" not exist';\n\n        /* eslint-disable no-console */\n        if (typeof console === 'object' && console.warn) {\n            console.warn(message);\n        }\n        else {\n            throw new Error(message);\n        }\n        /* eslint-enable no-console */\n    }\n}\n// #[end]\n\n// exports = module.exports = warnEventListenMethod;\n\n\n/**\n * @file 完成元素 attached 后的行为\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var bind = require('../util/bind');\n// var empty = require('../util/empty');\n// var isBrowser = require('../browser/is-browser');\n// var trigger = require('../browser/trigger');\n// var NodeType = require('./node-type');\n// var elementGetTransition = require('./element-get-transition');\n// var eventDeclarationListener = require('./event-declaration-listener');\n// var getPropHandler = require('./get-prop-handler');\n// var warnEventListenMethod = require('./warn-event-listen-method');\n\n/**\n * 双绑输入框CompositionEnd事件监听函数\n *\n * @inner\n */\nfunction inputOnCompositionEnd() {\n    if (!this.composing) {\n        return;\n    }\n\n    this.composing = 0;\n\n    trigger(this, 'input');\n}\n\n/**\n * 双绑输入框CompositionStart事件监听函数\n *\n * @inner\n */\nfunction inputOnCompositionStart() {\n    this.composing = 1;\n}\n\nfunction xPropOutputer(xProp, data) {\n    getPropHandler(this.tagName, xProp.name).output(this, xProp, data);\n}\n\nfunction inputXPropOutputer(element, xProp, data) {\n    var outputer = bind(xPropOutputer, element, xProp, data);\n    return function (e) {\n        if (!this.composing) {\n            outputer(e);\n        }\n    };\n}\n\n/**\n * 完成元素 attached 后的行为\n *\n * @param {Object} element 元素节点\n */\nfunction elementOwnAttached() {\n    this._toPhase('created');\n\n    var isComponent = this.nodeType === NodeType.CMPT;\n    var data = isComponent ? this.data : this.scope;\n\n    /* eslint-disable no-redeclare */\n\n    // 处理自身变化时双向绑定的逻辑\n    var xProps = this.aNode.hotspot.xProps;\n    for (var i = 0, l = xProps.length; i < l; i++) {\n        var xProp = xProps[i];\n\n        switch (xProp.name) {\n            case 'value':\n                switch (this.tagName) {\n                    case 'input':\n                    case 'textarea':\n                        if (isBrowser && window.CompositionEvent) {\n                            this._onEl('change', inputOnCompositionEnd);\n                            this._onEl('compositionstart', inputOnCompositionStart);\n                            this._onEl('compositionend', inputOnCompositionEnd);\n                        }\n\n                        this._onEl(\n                            ('oninput' in this.el) ? 'input' : 'propertychange',\n                            inputXPropOutputer(this, xProp, data)\n                        );\n\n                        break;\n\n                    case 'select':\n                        this._onEl('change', bind(xPropOutputer, this, xProp, data));\n                        break;\n                }\n                break;\n\n            case 'checked':\n                switch (this.tagName) {\n                    case 'input':\n                        switch (this.el.type) {\n                            case 'checkbox':\n                            case 'radio':\n                                this._onEl('click', bind(xPropOutputer, this, xProp, data));\n                        }\n                }\n                break;\n        }\n    }\n\n    // bind events\n    var events = isComponent\n        ? this.aNode.events.concat(this.nativeEvents)\n        : this.aNode.events;\n\n    for (var i = 0, l = events.length; i < l; i++) {\n        var eventBind = events[i];\n        var owner = isComponent ? this : this.owner;\n\n        // 判断是否是nativeEvent，下面的warn方法和事件绑定都需要\n        // 依此指定eventBind.expr.name位于owner还是owner.owner上\n        if (eventBind.modifier.native) {\n            owner = owner.owner;\n            data = this.scope || owner.data;\n        }\n\n        // #[begin] error\n        warnEventListenMethod(eventBind, owner);\n        // #[end]\n\n        this._onEl(\n            eventBind.name,\n            bind(\n                eventDeclarationListener,\n                owner,\n                eventBind,\n                0,\n                data\n            ),\n            eventBind.modifier.capture\n        );\n    }\n\n    this._toPhase('attached');\n\n\n    if (this._isInitFromEl) {\n        this._isInitFromEl = false;\n    }\n    else {\n        var transition = elementGetTransition(this);\n        if (transition && transition.enter) {\n            transition.enter(this.el, empty);\n        }\n    }\n}\n\n// exports = module.exports = elementOwnAttached;\n\n\n/**\n * @file 销毁元素节点\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var un = require('../browser/un');\n// var removeEl = require('../browser/remove-el');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var nodeDispose = require('./node-dispose');\n\n/**\n * 销毁元素节点\n *\n * @param {Object} element 要销毁的元素节点\n * @param {Object=} options 销毁行为的参数\n */\nfunction elementDispose(element) {\n    elementDisposeChildren(element, 1, 1);\n\n    // el 事件解绑\n    var len = element._elFns.length;\n    while (len--) {\n        var fn = element._elFns[len];\n        un(element.el, fn[0], fn[1], fn[2]);\n    }\n    element._elFns = null;\n\n\n    // 如果没有parent，说明是一个root component，一定要从dom树中remove\n    if (!element.disposeNoDetach || !element.parent) {\n        removeEl(element.el);\n    }\n\n    if (element._toPhase) {\n        element._toPhase('detached');\n    }\n\n    nodeDispose(element);\n}\n\n\n// exports = module.exports = elementDispose;\n\n\n/**\n * @file 初始化 element 节点的 tagName 处理\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ieOldThan9 = require('../browser/ie-old-than-9');\n\n/**\n * 初始化 element 节点的 tagName 处理\n *\n * @param {Object} node 节点对象\n */\nfunction elementInitTagName(node) {\n    node.tagName = node.tagName || node.aNode.tagName || 'div';\n\n    // #[begin] allua\n    // ie8- 不支持innerHTML输出自定义标签\n    if (ieOldThan9 && node.tagName.indexOf('-') > 0) {\n        node.tagName = 'div';\n    }\n    // #[end]\n}\n\n\n// exports = module.exports = elementInitTagName;\n\n\n/**\n * @file 给 devtool 发通知消息\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var isBrowser = require('../browser/is-browser');\n\n// #[begin] devtool\nvar san4devtool;\n\n/**\n * 给 devtool 发通知消息\n *\n * @param {string} name 消息名称\n * @param {*} arg 消息参数\n */\nfunction emitDevtool(name, arg) {\n    if (isBrowser && san4devtool && san4devtool.debug && window.__san_devtool__) {\n        window.__san_devtool__.emit(name, arg);\n    }\n}\n\nemitDevtool.start = function (main) {\n    san4devtool = main;\n    emitDevtool('san', main);\n};\n// #[end]\n\n// exports = module.exports = emitDevtool;\n\n\n/**\n * @file 组件类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var bind = require('../util/bind');\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var extend = require('../util/extend');\n// var nextTick = require('../util/next-tick');\n// var emitDevtool = require('../util/emit-devtool');\n// var ExprType = require('../parser/expr-type');\n// var parseExpr = require('../parser/parse-expr');\n// var createAccessor = require('../parser/create-accessor');\n// var postProp = require('../parser/post-prop');\n// var removeEl = require('../browser/remove-el');\n// var Data = require('../runtime/data');\n// var evalExpr = require('../runtime/eval-expr');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var DataChangeType = require('../runtime/data-change-type');\n// var compileComponent = require('./compile-component');\n// var componentPreheat = require('./component-preheat');\n// var LifeCycle = require('./life-cycle');\n// var getANodeProp = require('./get-a-node-prop');\n// var isDataChangeByElement = require('./is-data-change-by-element');\n// var eventDeclarationListener = require('./event-declaration-listener');\n// var reverseElementChildren = require('./reverse-element-children');\n// var camelComponentBinds = require('./camel-component-binds');\n// var NodeType = require('./node-type');\n// var nodeSBindInit = require('./node-s-bind-init');\n// var nodeSBindUpdate = require('./node-s-bind-update');\n// var elementInitTagName = require('./element-init-tag-name');\n// var elementOwnAttached = require('./element-own-attached');\n// var elementDispose = require('./element-dispose');\n// var elementUpdateChildren = require('./element-update-children');\n// var elementOwnOnEl = require('./element-own-on-el');\n// var elementOwnCreate = require('./element-own-create');\n// var elementOwnAttach = require('./element-own-attach');\n// var elementOwnDetach = require('./element-own-detach');\n// var elementOwnDispose = require('./element-own-dispose');\n// var warnEventListenMethod = require('./warn-event-listen-method');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var elementAttach = require('./element-attach');\n// var handleProp = require('./handle-prop');\n// var createDataTypesChecker = require('../util/create-data-types-checker');\n\n\n\n\n/**\n * 组件类\n *\n * @class\n * @param {Object} options 初始化参数\n */\nfunction Component(options) { // eslint-disable-line\n    options = options || {};\n\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n    this._elFns = [];\n    this.listeners = {};\n    this.slotChildren = [];\n\n    var clazz = this.constructor;\n\n    this.filters = this.filters || clazz.filters || {};\n    this.computed = this.computed || clazz.computed || {};\n    this.messages = this.messages || clazz.messages || {};\n\n    if (options.transition) {\n        this.transition = options.transition;\n    }\n\n    this.subTag = options.subTag;\n\n    // compile\n    compileComponent(clazz);\n    componentPreheat(clazz);\n\n    var me = this;\n    var protoANode = clazz.prototype.aNode;\n\n    me.givenANode = options.aNode;\n    me.givenNamedSlotBinds = [];\n    me.givenSlots = {\n        named: {}\n    };\n\n    this.owner = options.owner;\n    this.scope = options.scope;\n    this.el = options.el;\n\n    var parent = options.parent;\n    if (parent) {\n        this.parent = parent;\n        this.parentComponent = parent.nodeType === NodeType.CMPT\n            ? parent\n            : parent && parent.parentComponent;\n    }\n\n    this.id = guid();\n\n    // #[begin] reverse\n    if (this.el) {\n        var firstCommentNode = this.el.firstChild;\n        if (firstCommentNode.nodeType === 3) {\n            firstCommentNode = firstCommentNode.nextSibling;\n        }\n\n        if (firstCommentNode && firstCommentNode.nodeType === 8) {\n            var stumpMatch = firstCommentNode.data.match(/^\\s*s-data:([\\s\\S]+)?$/);\n            if (stumpMatch) {\n                var stumpText = stumpMatch[1];\n\n                // fill component data\n                options.data = (new Function(\n                    'return ' + stumpText.replace(/^[\\s\\n]*/, '')\n                ))();\n\n                if (firstCommentNode.previousSibling) {\n                    removeEl(firstCommentNode.previousSibling);\n                }\n                removeEl(firstCommentNode);\n            }\n        }\n    }\n    // #[end]\n\n    // native事件数组\n    this.nativeEvents = [];\n\n    if (this.givenANode) {\n        // 组件运行时传入的结构，做slot解析\n        this._createGivenSlots();\n\n        each(this.givenANode.events, function (eventBind) {\n            // 保存当前实例的native事件，下面创建aNode时候做合并\n            if (eventBind.modifier.native) {\n                me.nativeEvents.push(eventBind);\n                return;\n            }\n\n            // #[begin] error\n            warnEventListenMethod(eventBind, options.owner);\n            // #[end]\n\n            me.on(\n                eventBind.name,\n                bind(eventDeclarationListener, options.owner, eventBind, 1, options.scope),\n                eventBind\n            );\n        });\n\n        this.tagName = protoANode.tagName || me.givenANode.tagName;\n        this.binds = camelComponentBinds(this.givenANode.props);\n\n        // init s-bind data\n        nodeSBindInit(this, this.givenANode.directives.bind);\n    }\n\n    this._toPhase('compiled');\n\n    // init data\n    this.data = new Data(\n        extend(\n            typeof this.initData === 'function' && this.initData() || {},\n            options.data || this._sbindData\n        )\n    );\n\n    elementInitTagName(this);\n\n    each(this.binds, function (bind) {\n        postProp(bind);\n\n        if (me.scope) {\n            var value = evalExpr(bind.expr, me.scope, me.owner);\n            if (typeof value !== 'undefined') {\n                // See: https://github.com/ecomfe/san/issues/191\n                me.data.set(bind.name, value);\n            }\n        }\n    });\n\n    // #[begin] error\n    // 在初始化 + 数据绑定后，开始数据校验\n    // NOTE: 只在开发版本中进行属性校验\n    var dataTypes = this.dataTypes || clazz.dataTypes;\n    if (dataTypes) {\n        var dataTypeChecker = createDataTypesChecker(\n            dataTypes,\n            this.subTag || this.name || clazz.name\n        );\n        this.data.setTypeChecker(dataTypeChecker);\n        this.data.checkDataTypes();\n    }\n    // #[end]\n\n    this.computedDeps = {};\n    /* eslint-disable guard-for-in */\n    for (var expr in this.computed) {\n        if (!this.computedDeps[expr]) {\n            this._calcComputed(expr);\n        }\n    }\n    /* eslint-enable guard-for-in */\n\n    if (!this.dataChanger) {\n        this.dataChanger = bind(this._dataChanger, this);\n        this.data.listen(this.dataChanger);\n    }\n    this._toPhase('inited');\n\n    // #[begin] reverse\n    if (this.el) {\n        reverseElementChildren(this);\n        this._attached();\n    }\n\n    var walker = options.reverseWalker;\n    if (walker) {\n        var currentNode = walker.current;\n        if (currentNode && currentNode.nodeType === 1) {\n            this.el = currentNode;\n            walker.goNext();\n        }\n\n        reverseElementChildren(this);\n\n        this._attached();\n    }\n    // #[end]\n}\n\n\n/**\n * 初始化创建组件外部传入的插槽对象\n *\n * @protected\n */\nComponent.prototype._createGivenSlots = function () {\n    var me = this;\n    me.givenSlots.named = {};\n\n    // 组件运行时传入的结构，做slot解析\n    me.givenANode && me.scope && each(me.givenANode.children, function (child) {\n        var target;\n\n        var slotBind = !child.textExpr && getANodeProp(child, 'slot');\n        if (slotBind) {\n            !me.givenSlotInited && me.givenNamedSlotBinds.push(slotBind);\n\n            var slotName = evalExpr(slotBind.expr, me.scope, me.owner);\n            target = me.givenSlots.named[slotName];\n            if (!target) {\n                target = me.givenSlots.named[slotName] = [];\n            }\n        }\n        else if (!me.givenSlotInited) {\n            target = me.givenSlots.noname;\n            if (!target) {\n                target = me.givenSlots.noname = [];\n            }\n        }\n\n        target && target.push(child);\n    });\n\n    me.givenSlotInited = true;\n};\n\n/**\n * 类型标识\n *\n * @type {string}\n */\nComponent.prototype.nodeType = NodeType.CMPT;\n\n/**\n * 在下一个更新周期运行函数\n *\n * @param {Function} fn 要运行的函数\n */\nComponent.prototype.nextTick = nextTick;\n\n/* eslint-disable operator-linebreak */\n/**\n * 使节点到达相应的生命周期\n *\n * @protected\n * @param {string} name 生命周期名称\n */\nComponent.prototype._callHook =\nComponent.prototype._toPhase = function (name) {\n    if (!this.lifeCycle[name]) {\n        this.lifeCycle = LifeCycle[name] || this.lifeCycle;\n        if (typeof this[name] === 'function') {\n            this[name]();\n        }\n        this['_after' + name] = 1;\n\n        // 通知devtool\n        // #[begin] devtool\n        emitDevtool('comp-' + name, this);\n        // #[end]\n    }\n};\n/* eslint-enable operator-linebreak */\n\n\n/**\n * 添加事件监听器\n *\n * @param {string} name 事件名\n * @param {Function} listener 监听器\n * @param {string?} declaration 声明式\n */\nComponent.prototype.on = function (name, listener, declaration) {\n    if (typeof listener === 'function') {\n        if (!this.listeners[name]) {\n            this.listeners[name] = [];\n        }\n        this.listeners[name].push({fn: listener, declaration: declaration});\n    }\n};\n\n/**\n * 移除事件监听器\n *\n * @param {string} name 事件名\n * @param {Function=} listener 监听器\n */\nComponent.prototype.un = function (name, listener) {\n    var nameListeners = this.listeners[name];\n    var len = nameListeners && nameListeners.length;\n\n    while (len--) {\n        if (!listener || listener === nameListeners[len].fn) {\n            nameListeners.splice(len, 1);\n        }\n    }\n};\n\n\n/**\n * 派发事件\n *\n * @param {string} name 事件名\n * @param {Object} event 事件对象\n */\nComponent.prototype.fire = function (name, event) {\n    var me = this;\n    each(this.listeners[name], function (listener) {\n        listener.fn.call(me, event);\n    });\n};\n\n/**\n * 计算 computed 属性的值\n *\n * @private\n * @param {string} computedExpr computed表达式串\n */\nComponent.prototype._calcComputed = function (computedExpr) {\n    var computedDeps = this.computedDeps[computedExpr];\n    if (!computedDeps) {\n        computedDeps = this.computedDeps[computedExpr] = {};\n    }\n\n    this.data.set(computedExpr, this.computed[computedExpr].call({\n        data: {\n            get: bind(function (expr) {\n                // #[begin] error\n                if (!expr) {\n                    throw new Error('[SAN ERROR] call get method in computed need argument');\n                }\n                // #[end]\n\n                if (!computedDeps[expr]) {\n                    computedDeps[expr] = 1;\n\n                    if (this.computed[expr]) {\n                        this._calcComputed(expr);\n                    }\n\n                    this.watch(expr, function () {\n                        this._calcComputed(computedExpr);\n                    });\n                }\n\n                return this.data.get(expr);\n            }, this)\n        }\n    }));\n};\n\n/**\n * 派发消息\n * 组件可以派发消息，消息将沿着组件树向上传递，直到遇上第一个处理消息的组件\n *\n * @param {string} name 消息名称\n * @param {*?} value 消息值\n */\nComponent.prototype.dispatch = function (name, value) {\n    var parentComponent = this.parentComponent;\n\n    while (parentComponent) {\n        var receiver = parentComponent.messages[name] || parentComponent.messages['*'];\n        if (typeof receiver === 'function') {\n            receiver.call(\n                parentComponent,\n                {target: this, value: value, name: name}\n            );\n            break;\n        }\n\n        parentComponent = parentComponent.parentComponent;\n    }\n};\n\n/**\n * 获取组件内部的 slot\n *\n * @param {string=} name slot名称，空为default slot\n * @return {Array}\n */\nComponent.prototype.slot = function (name) {\n    var result = [];\n    var me = this;\n\n    function childrenTraversal(children) {\n        each(children, function (child) {\n            if (child.nodeType === NodeType.SLOT && child.owner === me) {\n                if (child.isNamed && child.name === name\n                    || !child.isNamed && !name\n                ) {\n                    result.push(child);\n                }\n            }\n            else {\n                childrenTraversal(child.children);\n            }\n        });\n    }\n\n    childrenTraversal(this.children);\n    return result;\n};\n\n/**\n * 获取带有 san-ref 指令的子组件引用\n *\n * @param {string} name 子组件的引用名\n * @return {Component}\n */\nComponent.prototype.ref = function (name) {\n    var refTarget;\n    var owner = this;\n\n    function childrenTraversal(children) {\n        each(children, function (child) {\n            elementTraversal(child);\n            return !refTarget;\n        });\n    }\n\n    function elementTraversal(element) {\n        var nodeType = element.nodeType;\n        if (nodeType === NodeType.TEXT) {\n            return;\n        }\n\n        if (element.owner === owner) {\n            var ref;\n            switch (element.nodeType) {\n                case NodeType.ELEM:\n                    ref = element.aNode.directives.ref;\n                    if (ref && evalExpr(ref.value, element.scope, owner) === name) {\n                        refTarget = element.el;\n                    }\n                    break;\n\n                case NodeType.CMPT:\n                    ref = element.givenANode.directives.ref;\n                    if (ref && evalExpr(ref.value, element.scope, owner) === name) {\n                        refTarget = element;\n                    }\n            }\n\n            !refTarget && childrenTraversal(element.slotChildren);\n        }\n\n        !refTarget && childrenTraversal(element.children);\n    }\n\n    childrenTraversal(this.children);\n\n    return refTarget;\n};\n\n\n/**\n * 视图更新函数\n *\n * @param {Array?} changes 数据变化信息\n */\nComponent.prototype._update = function (changes) {\n    if (this.lifeCycle.disposed) {\n        return;\n    }\n\n    var me = this;\n\n\n    var needReloadForSlot = false;\n    this._notifyNeedReload = function () {\n        needReloadForSlot = true;\n    };\n\n    if (changes) {\n        nodeSBindUpdate(\n            this,\n            this.givenANode.directives.bind,\n            changes,\n            function (name, value) {\n                if (name in me.givenANode.hotspot.props) {\n                    return;\n                }\n\n                me.data.set(name, value, {\n                    target: {\n                        id: me.owner.id\n                    }\n                });\n            }\n        );\n\n\n        each(changes, function (change) {\n            var changeExpr = change.expr;\n\n            each(me.binds, function (bindItem) {\n                var relation;\n                var setExpr = bindItem.name;\n                var updateExpr = bindItem.expr;\n\n                if (!isDataChangeByElement(change, me, setExpr)\n                    && (relation = changeExprCompare(changeExpr, updateExpr, me.scope))\n                ) {\n                    if (relation > 2) {\n                        setExpr = createAccessor(\n                            [\n                                {\n                                    type: ExprType.STRING,\n                                    value: setExpr\n                                }\n                            ].concat(changeExpr.paths.slice(updateExpr.paths.length))\n                        );\n                        updateExpr = changeExpr;\n                    }\n\n                    if (relation >= 2 && change.type === DataChangeType.SPLICE) {\n                        me.data.splice(setExpr, [change.index, change.deleteCount].concat(change.insertions), {\n                            target: {\n                                id: me.owner.id\n                            }\n                        });\n                    }\n                    else {\n                        me.data.set(setExpr, evalExpr(updateExpr, me.scope, me.owner), {\n                            target: {\n                                id: me.owner.id\n                            }\n                        });\n                    }\n                }\n            });\n\n            each(me.givenNamedSlotBinds, function (bindItem) {\n                needReloadForSlot = needReloadForSlot || changeExprCompare(changeExpr, bindItem.expr, me.scope);\n                return !needReloadForSlot;\n            });\n        });\n\n        if (needReloadForSlot) {\n            this._createGivenSlots();\n            this._repaintChildren();\n        }\n        else {\n            var slotChildrenLen = this.slotChildren.length;\n            while (slotChildrenLen--) {\n                var slotChild = this.slotChildren[slotChildrenLen];\n\n                if (slotChild.lifeCycle.disposed) {\n                    this.slotChildren.splice(slotChildrenLen, 1);\n                }\n                else if (slotChild.isInserted) {\n                    slotChild._update(changes, 1);\n                }\n            }\n        }\n    }\n\n    var dataChanges = this.dataChanges;\n    if (dataChanges) {\n        this.dataChanges = null;\n        each(this.aNode.hotspot.dynamicProps, function (prop) {\n            each(dataChanges, function (change) {\n                if (changeExprCompare(change.expr, prop.expr, me.data)\n                    || prop.hintExpr && changeExprCompare(change.expr, prop.hintExpr, me.data)\n                ) {\n                    handleProp(me, evalExpr(prop.expr, me.data, me), prop);\n                    return false;\n                }\n            });\n        });\n\n        elementUpdateChildren(this, dataChanges);\n        if (needReloadForSlot) {\n            this._createGivenSlots();\n            this._repaintChildren();\n        }\n\n        this._toPhase('updated');\n\n        if (this.owner) {\n            this._updateBindxOwner(dataChanges);\n            this.owner._update();\n        }\n    }\n\n    this._notifyNeedReload = null;\n};\n\nComponent.prototype._updateBindxOwner = function (dataChanges) {\n    var me = this;\n\n    if (this.owner) {\n        each(dataChanges, function (change) {\n            each(me.binds, function (bindItem) {\n                var changeExpr = change.expr;\n                if (bindItem.x\n                    && !isDataChangeByElement(change, me.owner)\n                    && changeExprCompare(changeExpr, parseExpr(bindItem.name), me.data)\n                ) {\n                    var updateScopeExpr = bindItem.expr;\n                    if (changeExpr.paths.length > 1) {\n                        updateScopeExpr = createAccessor(\n                            bindItem.expr.paths.concat(changeExpr.paths.slice(1))\n                        );\n                    }\n\n                    me.scope.set(\n                        updateScopeExpr,\n                        evalExpr(changeExpr, me.data, me),\n                        {\n                            target: {\n                                id: me.id,\n                                prop: bindItem.name\n                            }\n                        }\n                    );\n                }\n            });\n        });\n    }\n};\n\n/**\n * 重新绘制组件的内容\n * 当 dynamic slot name 发生变更或 slot 匹配发生变化时，重新绘制\n * 在组件级别重绘有点粗暴，但是能保证视图结果正确性\n */\nComponent.prototype._repaintChildren = function () {\n    elementDisposeChildren(this, 0, 1);\n    this.children = [];\n\n    this._contentReady = 0;\n    this.slotChildren = [];\n    elementAttach(this);\n};\n\n\n/**\n * 组件内部监听数据变化的函数\n *\n * @private\n * @param {Object} change 数据变化信息\n */\nComponent.prototype._dataChanger = function (change) {\n    if (this.lifeCycle.created && this._aftercreated) {\n        if (!this.dataChanges) {\n            nextTick(this._update, this);\n            this.dataChanges = [];\n        }\n\n        this.dataChanges.push(change);\n    }\n    else if (this.lifeCycle.inited && this.owner) {\n        this._updateBindxOwner([change]);\n    }\n};\n\n\n/**\n * 监听组件的数据变化\n *\n * @param {string} dataName 变化的数据项\n * @param {Function} listener 监听函数\n */\nComponent.prototype.watch = function (dataName, listener) {\n    var dataExpr = parseExpr(dataName);\n\n    this.data.listen(bind(function (change) {\n        if (changeExprCompare(change.expr, dataExpr, this.data)) {\n            listener.call(this, evalExpr(dataExpr, this.data, this), change);\n        }\n    }, this));\n};\n\n/**\n * 组件销毁的行为\n *\n * @param {Object} options 销毁行为的参数\n */\nComponent.prototype.dispose = elementOwnDispose;\n\nComponent.prototype._doneLeave = function () {\n    if (this.leaveDispose) {\n        if (!this.lifeCycle.disposed) {\n            // 这里不用挨个调用 dispose 了，因为 children 释放链会调用的\n            this.slotChildren = null;\n\n            this.data.unlisten();\n            this.dataChanger = null;\n            this.dataChanges = null;\n\n            elementDispose(\n                this,\n                this.disposeNoDetach,\n                this.disposeNoTransition\n            );\n            this.listeners = null;\n\n            this.givenANode = null;\n            this.givenSlots = null;\n            this.givenNamedSlotBinds = null;\n        }\n    }\n    else if (this.lifeCycle.attached) {\n        removeEl(this.el);\n        this._toPhase('detached');\n    }\n};\n\n/**\n * 完成组件 attached 后的行为\n *\n * @param {Object} element 元素节点\n */\nComponent.prototype._attached = elementOwnAttached;\n\nComponent.prototype.attach = elementOwnAttach;\nComponent.prototype.detach = elementOwnDetach;\nComponent.prototype._create = elementOwnCreate;\nComponent.prototype._onEl = elementOwnOnEl;\n\n\n// exports = module.exports = Component;\n\n\n/**\n * @file 创建组件类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Component = require('./component');\n// var inherits = require('../util/inherits');\n\n/**\n * 创建组件类\n *\n * @param {Object} proto 组件类的方法表\n * @return {Function}\n */\nfunction defineComponent(proto) {\n    // 如果传入一个不是 san component 的 constructor，直接返回不是组件构造函数\n    // 这种场景导致的错误 san 不予考虑\n    if (typeof proto === 'function') {\n        return proto;\n    }\n\n    // #[begin] error\n    if (typeof proto !== 'object') {\n        throw new Error('[SAN FATAL] param must be a plain object.');\n    }\n    // #[end]\n\n    function ComponentClass(option) { // eslint-disable-line\n        Component.call(this, option);\n    }\n\n    ComponentClass.prototype = proto;\n    inherits(ComponentClass, Component);\n\n    return ComponentClass;\n}\n\n// exports = module.exports = defineComponent;\n\n\n/**\n * @file 编译组件类\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var createANode = require('../parser/create-a-node');\n// var parseTemplate = require('../parser/parse-template');\n// var parseText = require('../parser/parse-text');\n// var defineComponent = require('./define-component');\n\n\n/**\n * 编译组件类。预解析template和components\n *\n * @param {Function} ComponentClass 组件类\n */\nfunction compileComponent(ComponentClass) {\n    var proto = ComponentClass.prototype;\n\n    // pre define components class\n    if (!proto.hasOwnProperty('_cmptReady')) {\n        proto.components = ComponentClass.components || proto.components || {};\n        var components = proto.components;\n\n        for (var key in components) { // eslint-disable-line\n            var componentClass = components[key];\n\n            if (typeof componentClass === 'object') {\n                components[key] = defineComponent(componentClass);\n            }\n            else if (componentClass === 'self') {\n                components[key] = ComponentClass;\n            }\n        }\n\n        proto._cmptReady = 1;\n    }\n\n\n    // pre compile template\n    if (!proto.hasOwnProperty('aNode')) {\n        proto.aNode = createANode();\n\n        var tpl = ComponentClass.template || proto.template;\n        if (tpl) {\n            var aNode = parseTemplate(tpl, {\n                trimWhitespace: proto.trimWhitespace || ComponentClass.trimWhitespace,\n                delimiters: proto.delimiters || ComponentClass.delimiters\n            });\n            var firstChild = aNode.children[0];\n\n            // #[begin] error\n            if (aNode.children.length !== 1 || firstChild.textExpr) {\n                throw new Error('[SAN FATAL] template must have a root element.');\n            }\n            // #[end]\n\n            proto.aNode = firstChild;\n            if (firstChild.tagName === 'template') {\n                firstChild.tagName = null;\n            }\n\n            var componentPropExtra = {\n                'class': {name: 'class', expr: parseText('{{class | _class | _sep(\" \")}}')},\n                'style': {name: 'style', expr: parseText('{{style | _style | _sep(\";\")}}')},\n                'id': {name: 'id', expr: parseText('{{id}}')}\n            };\n\n            var len = firstChild.props.length;\n            while (len--) {\n                var prop = firstChild.props[len];\n                var extra = componentPropExtra[prop.name];\n\n                if (extra) {\n                    firstChild.props.splice(len, 1);\n                    componentPropExtra[prop.name] = prop;\n\n                    if (prop.name !== 'id') {\n                        prop.expr.segs.push(extra.expr.segs[0]);\n                        prop.expr.value = null;\n                    }\n                }\n            }\n\n            firstChild.props.push(\n                componentPropExtra['class'], // eslint-disable-line dot-notation\n                componentPropExtra.style,\n                componentPropExtra.id\n            );\n        }\n    }\n}\n\n// exports = module.exports = compileComponent;\n\n\n/**\n * @file 组件预热\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var each = require('../util/each');\n// var createEl = require('../browser/create-el');\n// var getPropHandler = require('./get-prop-handler');\n// var getANodeProp = require('./get-a-node-prop');\n// var isBrowser = require('../browser/is-browser');\n\n/**\n * 组件预热，分析组件aNode的数据引用等信息\n *\n * @param {Function} ComponentClass 组件类\n */\nfunction componentPreheat(ComponentClass) {\n    var stack = [];\n\n    function recordHotspotData(refs, notContentData) {\n        var len = stack.length;\n        each(stack, function (aNode, index) {\n            if (!notContentData || index !== len - 1) {\n                each(refs, function (ref) {\n                    aNode.hotspot.data[ref] = 1;\n                });\n            }\n        });\n    }\n\n\n    function analyseANodeHotspot(aNode) {\n        if (!aNode.hotspot) {\n            stack.push(aNode);\n\n\n            if (aNode.textExpr) {\n                aNode.hotspot = {data: {}};\n                recordHotspotData(analyseExprDataHotspot(aNode.textExpr));\n            }\n            else {\n                var sourceNode;\n                if (isBrowser && aNode.tagName && !/^(template|slot|select|input|option)$/i.test(aNode.tagName)) {\n                    sourceNode = createEl(aNode.tagName);\n                }\n\n                aNode.hotspot = {\n                    data: {},\n                    dynamicProps: [],\n                    xProps: [],\n                    props: {},\n                    sourceNode: sourceNode\n                };\n\n\n                // === analyse hotspot data: start\n                each(aNode.vars, function (varItem) {\n                    recordHotspotData(analyseExprDataHotspot(varItem.expr));\n                });\n\n                each(aNode.props, function (prop) {\n                    recordHotspotData(analyseExprDataHotspot(prop.expr));\n                });\n\n                /* eslint-disable guard-for-in */\n                for (var key in aNode.directives) {\n                    var directive = aNode.directives[key];\n                    recordHotspotData(analyseExprDataHotspot(directive.value), !/^(html|bind)$/.test(key));\n\n                    // init trackBy getKey function\n                    if (key === 'for') {\n                        var trackBy = directive.trackBy;\n                        if (trackBy\n                            && trackBy.type === ExprType.ACCESSOR\n                            && trackBy.paths[0].value === directive.item.raw\n                        ) {\n                            aNode.hotspot.getForKey = new Function(\n                                directive.item.raw,\n                                'return ' + trackBy.raw\n                            );\n                        }\n                    }\n                }\n                /* eslint-enable guard-for-in */\n\n                each(aNode.elses, function (child) {\n                    analyseANodeHotspot(child);\n                });\n\n                each(aNode.children, function (child) {\n                    analyseANodeHotspot(child);\n                });\n                // === analyse hotspot data: end\n\n\n                // === analyse hotspot props: start\n                each(aNode.props, function (prop, index) {\n                    aNode.hotspot.props[prop.name] = index;\n\n                    if (prop.name === 'id') {\n                        prop.id = true;\n                        aNode.hotspot.idProp = prop;\n                        aNode.hotspot.dynamicProps.push(prop);\n                    }\n                    else if (prop.expr.value != null) {\n                        if (sourceNode) {\n                            getPropHandler(aNode.tagName, prop.name)\n                                .prop(sourceNode, prop.expr.value, prop.name, aNode);\n                        }\n                    }\n                    else {\n                        if (prop.x) {\n                            aNode.hotspot.xProps.push(prop);\n                        }\n                        aNode.hotspot.dynamicProps.push(prop);\n                    }\n                });\n\n                // ie 下，如果 option 没有 value 属性，select.value = xx 操作不会选中 option\n                // 所以没有设置 value 时，默认把 option 的内容作为 value\n                if (aNode.tagName === 'option'\n                    && !getANodeProp(aNode, 'value')\n                    && aNode.children[0]\n                ) {\n                    var valueProp = {\n                        name: 'value',\n                        expr: aNode.children[0].textExpr\n                    };\n                    aNode.props.push(valueProp);\n                    aNode.hotspot.dynamicProps.push(valueProp);\n                    aNode.hotspot.props.value = aNode.props.length - 1;\n                }\n                // === analyse hotspot props: end\n            }\n\n            stack.pop();\n        }\n    }\n\n    analyseANodeHotspot(ComponentClass.prototype.aNode);\n}\n\n/**\n * 分析表达式的数据引用\n *\n * @param {Object} expr 要分析的表达式\n * @return {Array}\n */\nfunction analyseExprDataHotspot(expr) {\n    var refs = [];\n\n    function analyseExprs(exprs) {\n        each(exprs, function (expr) {\n            refs = refs.concat(analyseExprDataHotspot(expr));\n        });\n    }\n\n    switch (expr.type) {\n        case ExprType.ACCESSOR:\n            var paths = expr.paths;\n            refs.push(paths[0].value);\n\n            if (paths.length > 1) {\n                refs.push(paths[0].value + '.' + (paths[1].value || '*'));\n            }\n\n            analyseExprs(paths.slice(1));\n            break;\n\n        case ExprType.UNARY:\n            return analyseExprDataHotspot(expr.expr);\n\n        case ExprType.TEXT:\n        case ExprType.BINARY:\n        case ExprType.TERTIARY:\n            analyseExprs(expr.segs);\n            break;\n\n        case ExprType.INTERP:\n            refs = analyseExprDataHotspot(expr.expr);\n\n            each(expr.filters, function (filter) {\n                analyseExprs(filter.name.paths);\n                analyseExprs(filter.args);\n            });\n\n            break;\n\n    }\n\n    return refs;\n}\n\n// exports = module.exports = componentPreheat;\n\n\n/**\n * @file 将 binds 的 name 从 kebabcase 转换成 camelcase\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var kebab2camel = require('../util/kebab2camel');\n// var each = require('../util/each');\n\n/**\n * 将 binds 的 name 从 kebabcase 转换成 camelcase\n *\n * @param {Array} binds binds集合\n * @return {Array}\n */\nfunction camelComponentBinds(binds) {\n    var result = [];\n    each(binds, function (bind) {\n        result.push({\n            name: kebab2camel(bind.name),\n            expr: bind.expr,\n            x: bind.x,\n            raw: bind.raw\n        });\n    });\n\n    return result;\n}\n\n// exports = module.exports = camelComponentBinds;\n\n\n/**\n * @file 编译源码的 helper 方法集合\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var ExprType = require('../parser/expr-type');\n\n// #[begin] ssr\n// \n// /**\n//  * 编译源码的 helper 方法集合对象\n//  */\n// var compileExprSource = {\n// \n//     /**\n//      * 字符串字面化\n//      *\n//      * @param {string} source 需要字面化的字符串\n//      * @return {string} 字符串字面化结果\n//      */\n//     stringLiteralize: function (source) {\n//         return '\"'\n//             + source\n//                 .replace(/\\x5C/g, '\\\\\\\\')\n//                 .replace(/\"/g, '\\\\\"')\n//                 .replace(/\\x0A/g, '\\\\n')\n//                 .replace(/\\x09/g, '\\\\t')\n//                 .replace(/\\x0D/g, '\\\\r')\n//                 // .replace( /\\x08/g, '\\\\b' )\n//                 // .replace( /\\x0C/g, '\\\\f' )\n//             + '\"';\n//     },\n// \n//     /**\n//      * 生成数据访问表达式代码\n//      *\n//      * @param {Object?} accessorExpr accessor表达式对象\n//      * @return {string}\n//      */\n//     dataAccess: function (accessorExpr) {\n//         var code = 'componentCtx.data';\n//         if (accessorExpr) {\n//             each(accessorExpr.paths, function (path) {\n//                 if (path.type === ExprType.ACCESSOR) {\n//                     code += '[' + compileExprSource.dataAccess(path) + ']';\n//                     return;\n//                 }\n// \n//                 switch (typeof path.value) {\n//                     case 'string':\n//                         code += '.' + path.value;\n//                         break;\n// \n//                     case 'number':\n//                         code += '[' + path.value + ']';\n//                         break;\n//                 }\n//             });\n//         }\n// \n//         return code;\n//     },\n// \n//     /**\n//      * 生成插值代码\n//      *\n//      * @param {Object} interpExpr 插值表达式对象\n//      * @return {string}\n//      */\n//     interp: function (interpExpr) {\n//         var code = compileExprSource.expr(interpExpr.expr);\n// \n// \n//         each(interpExpr.filters, function (filter) {\n//             code = 'componentCtx.callFilter(\"' + filter.name.paths[0].value + '\", [' + code;\n//             each(filter.args, function (arg) {\n//                 code += ', ' + compileExprSource.expr(arg);\n//             });\n//             code += '])';\n//         });\n// \n//         if (!interpExpr.original) {\n//             return 'escapeHTML(' + code + ')';\n//         }\n// \n//         return code;\n//     },\n// \n//     /**\n//      * 生成文本片段代码\n//      *\n//      * @param {Object} textExpr 文本片段表达式对象\n//      * @return {string}\n//      */\n//     text: function (textExpr) {\n//         if (textExpr.segs.length === 0) {\n//             return '\"\"';\n//         }\n// \n//         var code = '';\n// \n//         each(textExpr.segs, function (seg) {\n//             var segCode = compileExprSource.expr(seg);\n//             code += code ? ' + ' + segCode : segCode;\n//         });\n// \n//         return code;\n//     },\n// \n//     /**\n//      * 生成数组字面量代码\n//      *\n//      * @param {Object} arrayExpr 数组字面量表达式对象\n//      * @return {string}\n//      */\n//     array: function (arrayExpr) {\n//         var code = [];\n// \n//         each(arrayExpr.items, function (item) {\n//             code.push((item.spread ? '...' : '') + compileExprSource.expr(item.expr));\n//         });\n// \n//         return '[\\n' + code.join(',\\n') + '\\n]';\n//     },\n// \n//     /**\n//      * 生成对象字面量代码\n//      *\n//      * @param {Object} objExpr 对象字面量表达式对象\n//      * @return {string}\n//      */\n//     object: function (objExpr) {\n//         var code = [];\n// \n//         each(objExpr.items, function (item) {\n//             if (item.spread) {\n//                 code.push('...' + compileExprSource.expr(item.expr));\n//             }\n//             else {\n//                 code.push(compileExprSource.expr(item.name) + ':' + compileExprSource.expr(item.expr));\n//             }\n//         });\n// \n//         return '{\\n' + code.join(',\\n') + '\\n}';\n//     },\n// \n//     /**\n//      * 二元表达式操作符映射表\n//      *\n//      * @type {Object}\n//      */\n//     binaryOp: {\n//         /* eslint-disable */\n//         43: '+',\n//         45: '-',\n//         42: '*',\n//         47: '/',\n//         60: '<',\n//         62: '>',\n//         76: '&&',\n//         94: '!=',\n//         121: '<=',\n//         122: '==',\n//         123: '>=',\n//         155: '!==',\n//         183: '===',\n//         248: '||'\n//         /* eslint-enable */\n//     },\n// \n//     /**\n//      * 生成表达式代码\n//      *\n//      * @param {Object} expr 表达式对象\n//      * @return {string}\n//      */\n//     expr: function (expr) {\n//         switch (expr.type) {\n//             case ExprType.UNARY:\n//                 return '!' + compileExprSource.expr(expr.expr);\n// \n//             case ExprType.BINARY:\n//                 return compileExprSource.expr(expr.segs[0])\n//                     + compileExprSource.binaryOp[expr.operator]\n//                     + compileExprSource.expr(expr.segs[1]);\n// \n//             case ExprType.TERTIARY:\n//                 return compileExprSource.expr(expr.segs[0])\n//                     + '?' + compileExprSource.expr(expr.segs[1])\n//                     + ':' + compileExprSource.expr(expr.segs[2]);\n// \n//             case ExprType.STRING:\n//                 return compileExprSource.stringLiteralize(expr.literal || expr.value);\n// \n//             case ExprType.NUMBER:\n//                 return expr.value;\n// \n//             case ExprType.BOOL:\n//                 return expr.value ? 'true' : 'false';\n// \n//             case ExprType.ACCESSOR:\n//                 return compileExprSource.dataAccess(expr);\n// \n//             case ExprType.INTERP:\n//                 return compileExprSource.interp(expr);\n// \n//             case ExprType.TEXT:\n//                 return compileExprSource.text(expr);\n// \n//             case ExprType.ARRAY:\n//                 return compileExprSource.array(expr);\n// \n//             case ExprType.OBJECT:\n//                 return compileExprSource.object(expr);\n//         }\n//     }\n// };\n// #[end]\n\n// exports = module.exports = compileExprSource;\n\n\n/**\n * @file 编译源码的中间buffer类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var compileExprSource = require('./compile-expr-source');\n\n\n// #[begin] ssr\n// /**\n//  * 编译源码的中间buffer类\n//  *\n//  * @class\n//  */\n// function CompileSourceBuffer() {\n//     this.segs = [];\n// }\n// \n// /**\n//  * 添加原始代码，将原封不动输出\n//  *\n//  * @param {string} code 原始代码\n//  */\n// CompileSourceBuffer.prototype.addRaw = function (code) {\n//     this.segs.push({\n//         type: 'RAW',\n//         code: code\n//     });\n// };\n// \n// /**\n//  * 添加被拼接为html的原始代码\n//  *\n//  * @param {string} code 原始代码\n//  */\n// CompileSourceBuffer.prototype.joinRaw = function (code) {\n//     this.segs.push({\n//         type: 'JOIN_RAW',\n//         code: code\n//     });\n// };\n// \n// /**\n//  * 添加renderer方法的起始源码\n//  */\n// CompileSourceBuffer.prototype.addRendererStart = function () {\n//     this.addRaw('function (data, parentCtx, givenSlots) {');\n//     this.addRaw('var html = \"\";');\n// };\n// \n// /**\n//  * 添加renderer方法的结束源码\n//  */\n// CompileSourceBuffer.prototype.addRendererEnd = function () {\n//     this.addRaw('return html;');\n//     this.addRaw('}');\n// };\n// \n// /**\n//  * 添加被拼接为html的静态字符串\n//  *\n//  * @param {string} str 被拼接的字符串\n//  */\n// CompileSourceBuffer.prototype.joinString = function (str) {\n//     this.segs.push({\n//         str: str,\n//         type: 'JOIN_STRING'\n//     });\n// };\n// \n// /**\n//  * 添加被拼接为html的数据访问\n//  *\n//  * @param {Object?} accessor 数据访问表达式对象\n//  */\n// CompileSourceBuffer.prototype.joinDataStringify = function () {\n//     this.segs.push({\n//         type: 'JOIN_DATA_STRINGIFY'\n//     });\n// };\n// \n// /**\n//  * 添加被拼接为html的表达式\n//  *\n//  * @param {Object} expr 表达式对象\n//  */\n// CompileSourceBuffer.prototype.joinExpr = function (expr) {\n//     this.segs.push({\n//         expr: expr,\n//         type: 'JOIN_EXPR'\n//     });\n// };\n// \n// /**\n//  * 生成编译后代码\n//  *\n//  * @return {string}\n//  */\n// CompileSourceBuffer.prototype.toCode = function () {\n//     var code = [];\n//     var temp = '';\n// \n//     function genStrLiteral() {\n//         if (temp) {\n//             code.push('html += ' + compileExprSource.stringLiteralize(temp) + ';');\n//         }\n// \n//         temp = '';\n//     }\n// \n//     each(this.segs, function (seg) {\n//         if (seg.type === 'JOIN_STRING') {\n//             temp += seg.str;\n//             return;\n//         }\n// \n//         genStrLiteral();\n//         switch (seg.type) {\n//             case 'JOIN_DATA_STRINGIFY':\n//                 code.push('html += stringifier.any(' + compileExprSource.dataAccess() + ');');\n//                 break;\n// \n//             case 'JOIN_EXPR':\n//                 code.push('html += ' + compileExprSource.expr(seg.expr) + ';');\n//                 break;\n// \n//             case 'JOIN_RAW':\n//                 code.push('html += ' + seg.code + ';');\n//                 break;\n// \n//             case 'RAW':\n//                 code.push(seg.code);\n//                 break;\n// \n//         }\n//     });\n// \n//     genStrLiteral();\n// \n//     return code.join('\\n');\n// };\n// \n// #[end]\n\n// exports = module.exports = CompileSourceBuffer;\n\n\n/**\n * @file 将组件编译成 render 方法的 js 源码\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var parseExpr = require('../parser/parse-expr');\n// var createANode = require('../parser/create-a-node');\n// var cloneDirectives = require('../parser/clone-directives');\n// var autoCloseTags = require('../browser/auto-close-tags');\n// var CompileSourceBuffer = require('./compile-source-buffer');\n// var compileExprSource = require('./compile-expr-source');\n// var rinseCondANode = require('./rinse-cond-anode');\n// var getANodeProp = require('./get-a-node-prop');\n\n// #[begin] ssr\n// \n// /**\n//  * 生成序列化时起始桩的html\n//  *\n//  * @param {string} type 桩类型标识\n//  * @param {string?} content 桩内的内容\n//  * @return {string}\n//  */\n// function serializeStump(type, content) {\n//     return '<!--s-' + type + (content ? ':' + content : '') + '-->';\n// }\n// \n// /**\n//  * 生成序列化时结束桩的html\n//  *\n//  * @param {string} type 桩类型标识\n//  * @return {string}\n//  */\n// function serializeStumpEnd(type) {\n//     return '<!--/s-' + type + '-->';\n// }\n// \n// /**\n//  * element 的编译方法集合对象\n//  *\n//  * @inner\n//  */\n// var elementSourceCompiler = {\n// \n//     /* eslint-disable max-params */\n//     /**\n//      * 编译元素标签头\n//      *\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {string} tagName 标签名\n//      * @param {Array} props 属性列表\n//      * @param {string?} extraProp 额外的属性串\n//      */\n//     tagStart: function (sourceBuffer, tagName, props, extraProp, bindDirective) {\n//         sourceBuffer.joinString('<' + tagName);\n//         sourceBuffer.joinString(extraProp || '');\n// \n//         // index list\n//         var propsIndex = {};\n//         each(props, function (prop) {\n//             propsIndex[prop.name] = prop;\n//         });\n// \n//         each(props, function (prop) {\n//             if (prop.name === 'slot') {\n//                 return;\n//             }\n// \n//             if (prop.name === 'value') {\n//                 switch (tagName) {\n//                     case 'textarea':\n//                         return;\n// \n//                     case 'select':\n//                         sourceBuffer.addRaw('$selectValue = '\n//                             + compileExprSource.expr(prop.expr)\n//                             + ' || \"\";'\n//                         );\n//                         return;\n// \n//                     case 'option':\n//                         sourceBuffer.addRaw('$optionValue = '\n//                             + compileExprSource.expr(prop.expr)\n//                             + ';'\n//                         );\n//                         // value\n//                         sourceBuffer.addRaw('if ($optionValue != null) {');\n//                         sourceBuffer.joinRaw('\" value=\\\\\"\" + $optionValue + \"\\\\\"\"');\n//                         sourceBuffer.addRaw('}');\n// \n//                         // selected\n//                         sourceBuffer.addRaw('if ($optionValue === $selectValue) {');\n//                         sourceBuffer.joinString(' selected');\n//                         sourceBuffer.addRaw('}');\n//                         return;\n//                 }\n//             }\n// \n//             switch (prop.name) {\n//                 case 'readonly':\n//                 case 'disabled':\n//                 case 'multiple':\n//                     if (prop.raw === '') {\n//                         sourceBuffer.joinString(' ' + prop.name);\n//                     }\n//                     else {\n//                         sourceBuffer.joinRaw('boolAttrFilter(\"' + prop.name + '\", '\n//                             + compileExprSource.expr(prop.expr)\n//                             + ')'\n//                         );\n//                     }\n//                     break;\n// \n//                 case 'checked':\n//                     if (tagName === 'input') {\n//                         var valueProp = propsIndex.value;\n//                         var valueCode = compileExprSource.expr(valueProp.expr);\n// \n//                         if (valueProp) {\n//                             switch (propsIndex.type.raw) {\n//                                 case 'checkbox':\n//                                     sourceBuffer.addRaw('if (contains('\n//                                         + compileExprSource.expr(prop.expr)\n//                                         + ', '\n//                                         + valueCode\n//                                         + ')) {'\n//                                     );\n//                                     sourceBuffer.joinString(' checked');\n//                                     sourceBuffer.addRaw('}');\n//                                     break;\n// \n//                                 case 'radio':\n//                                     sourceBuffer.addRaw('if ('\n//                                         + compileExprSource.expr(prop.expr)\n//                                         + ' === '\n//                                         + valueCode\n//                                         + ') {'\n//                                     );\n//                                     sourceBuffer.joinString(' checked');\n//                                     sourceBuffer.addRaw('}');\n//                                     break;\n//                             }\n//                         }\n//                     }\n//                     break;\n// \n//                 default:\n//                     if (prop.attr) {\n//                         sourceBuffer.joinString(' ' + prop.attr);\n//                     }\n//                     else {\n//                         sourceBuffer.joinRaw('attrFilter(\"' + prop.name + '\", '\n//                             + (prop.x ? 'escapeHTML(' : '')\n//                             + compileExprSource.expr(prop.expr)\n//                             + (prop.x ? ')' : '')\n//                             + ')'\n//                         );\n//                     }\n//                     break;\n//             }\n//         });\n// \n//         if (bindDirective) {\n//             sourceBuffer.addRaw(\n//                 '(function ($bindObj) {for (var $key in $bindObj) {'\n//                 + 'var $value = $bindObj[$key];'\n//             );\n// \n//             if (tagName === 'textarea') {\n//                 sourceBuffer.addRaw(\n//                     'if ($key === \"value\") {'\n//                     + 'continue;'\n//                     + '}'\n//                 );\n//             }\n// \n//             sourceBuffer.addRaw('switch ($key) {\\n'\n//                 + 'case \"readonly\":\\n'\n//                 + 'case \"disabled\":\\n'\n//                 + 'case \"multiple\":\\n'\n//                 + 'case \"multiple\":\\n'\n//                 + 'html += boolAttrFilter($key, escapeHTML($value));\\n'\n//                 + 'break;\\n'\n//                 + 'default:\\n'\n//                 + 'html += attrFilter($key, escapeHTML($value));'\n//                 + '}'\n//             );\n// \n//             sourceBuffer.addRaw(\n//                 '}})('\n//                 + compileExprSource.expr(bindDirective.value)\n//                 + ');'\n//             );\n//         }\n// \n//         sourceBuffer.joinString('>');\n//     },\n//     /* eslint-enable max-params */\n// \n//     /**\n//      * 编译元素闭合\n//      *\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {string} tagName 标签名\n//      */\n//     tagEnd: function (sourceBuffer, tagName) {\n//         if (!autoCloseTags[tagName]) {\n//             sourceBuffer.joinString('</' + tagName + '>');\n//         }\n// \n//         if (tagName === 'select') {\n//             sourceBuffer.addRaw('$selectValue = null;');\n//         }\n// \n//         if (tagName === 'option') {\n//             sourceBuffer.addRaw('$optionValue = null;');\n//         }\n//     },\n// \n//     /**\n//      * 编译元素内容\n//      *\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {ANode} aNode 元素的抽象节点信息\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     inner: function (sourceBuffer, aNode, owner) {\n//         // inner content\n//         if (aNode.tagName === 'textarea') {\n//             var valueProp = getANodeProp(aNode, 'value');\n//             if (valueProp) {\n//                 sourceBuffer.joinRaw('escapeHTML('\n//                     + compileExprSource.expr(valueProp.expr)\n//                     + ')'\n//                 );\n//             }\n// \n//             return;\n//         }\n// \n//         var htmlDirective = aNode.directives.html;\n//         if (htmlDirective) {\n//             sourceBuffer.joinExpr(htmlDirective.value);\n//         }\n//         else {\n//             /* eslint-disable no-use-before-define */\n//             each(aNode.children, function (aNodeChild) {\n//                 sourceBuffer.addRaw(aNodeCompiler.compile(aNodeChild, sourceBuffer, owner));\n//             });\n//             /* eslint-enable no-use-before-define */\n//         }\n//     }\n// };\n// \n// /**\n//  * ANode 的编译方法集合对象\n//  *\n//  * @inner\n//  */\n// var aNodeCompiler = {\n// \n//     /**\n//      * 编译节点\n//      *\n//      * @param {ANode} aNode 抽象节点\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      * @param {Object} extra 编译所需的一些额外信息\n//      */\n//     compile: function (aNode, sourceBuffer, owner, extra) {\n//         extra = extra || {};\n//         var compileMethod = 'compileElement';\n// \n//         if (aNode.textExpr) {\n//             compileMethod = 'compileText';\n//         }\n//         else if (aNode.directives['if']) { // eslint-disable-line dot-notation\n//             compileMethod = 'compileIf';\n//         }\n//         else if (aNode.directives['for']) { // eslint-disable-line dot-notation\n//             compileMethod = 'compileFor';\n//         }\n//         else if (aNode.tagName === 'slot') {\n//             compileMethod = 'compileSlot';\n//         }\n//         else if (aNode.tagName === 'template') {\n//             compileMethod = 'compileTemplate';\n//         }\n//         else {\n//             var ComponentType = owner.getComponentType\n//                 ? owner.getComponentType(aNode)\n//                 : owner.components[aNode.tagName];\n//             if (ComponentType) {\n//                 compileMethod = 'compileComponent';\n//                 extra.ComponentClass = ComponentType;\n//             }\n//         }\n// \n//         aNodeCompiler[compileMethod](aNode, sourceBuffer, owner, extra);\n//     },\n// \n//     /**\n//      * 编译文本节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      */\n//     compileText: function (aNode, sourceBuffer) {\n//         if (aNode.textExpr.original) {\n//             sourceBuffer.joinString(serializeStump('text'));\n//         }\n// \n//         sourceBuffer.joinExpr(aNode.textExpr);\n// \n//         if (aNode.textExpr.original) {\n//             sourceBuffer.joinString(serializeStumpEnd('text'));\n//         }\n//     },\n// \n//     /**\n//      * 编译template节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileTemplate: function (aNode, sourceBuffer, owner) {\n//         elementSourceCompiler.inner(sourceBuffer, aNode, owner);\n//     },\n// \n//     /**\n//      * 编译 if 节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileIf: function (aNode, sourceBuffer, owner) {\n//         sourceBuffer.addRaw('(function () {');\n// \n//         sourceBuffer.addRaw('var ifIndex = null;');\n// \n//         // output main if\n//         var ifDirective = aNode.directives['if']; // eslint-disable-line dot-notation\n//         sourceBuffer.addRaw('if (' + compileExprSource.expr(ifDirective.value) + ') {');\n//         sourceBuffer.addRaw(\n//             aNodeCompiler.compile(\n//                 rinseCondANode(aNode),\n//                 sourceBuffer,\n//                 owner\n//             )\n//         );\n//         sourceBuffer.addRaw('}');\n// \n//         // output elif and else\n//         each(aNode.elses, function (elseANode, index) {\n//             var elifDirective = elseANode.directives.elif;\n//             if (elifDirective) {\n//                 sourceBuffer.addRaw('else if (' + compileExprSource.expr(elifDirective.value) + ') {');\n//             }\n//             else {\n//                 sourceBuffer.addRaw('else {');\n//             }\n// \n//             sourceBuffer.addRaw(\n//                 aNodeCompiler.compile(\n//                     rinseCondANode(elseANode),\n//                     sourceBuffer,\n//                     owner\n//                 )\n//             );\n//             sourceBuffer.addRaw('}');\n//         });\n// \n//         sourceBuffer.addRaw('})();');\n//     },\n// \n//     /**\n//      * 编译 for 节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileFor: function (aNode, sourceBuffer, owner) {\n//         var forElementANode = createANode({\n//             children: aNode.children,\n//             props: aNode.props,\n//             events: aNode.events,\n//             tagName: aNode.tagName,\n//             directives: cloneDirectives(aNode.directives, {\n//                 'for': 1\n//             }),\n//             hotspot: aNode.hotspot\n//         });\n// \n//         var forDirective = aNode.directives['for']; // eslint-disable-line dot-notation\n//         var itemName = forDirective.item.raw;\n//         var indexName = forDirective.index.raw;\n//         var listName = guid();\n// \n//         if (indexName === '$index') {\n//             indexName = guid();\n//         }\n// \n//         sourceBuffer.addRaw('var ' + listName + ' = ' + compileExprSource.expr(forDirective.value) + ';');\n//         sourceBuffer.addRaw('if (' + listName + ' instanceof Array) {');\n// \n//         // for array\n//         sourceBuffer.addRaw('for ('\n//             + 'var ' + indexName + ' = 0; '\n//             + indexName + ' < ' + listName + '.length; '\n//             + indexName + '++) {'\n//         );\n//         sourceBuffer.addRaw('componentCtx.data.' + indexName + '=' + indexName + ';');\n//         sourceBuffer.addRaw('componentCtx.data.' + itemName + '= ' + listName + '[' + indexName + '];');\n//         sourceBuffer.addRaw(\n//             aNodeCompiler.compile(\n//                 forElementANode,\n//                 sourceBuffer,\n//                 owner\n//             )\n//         );\n//         sourceBuffer.addRaw('}');\n// \n//         sourceBuffer.addRaw('} else if (typeof ' + listName + ' === \"object\") {');\n// \n//         // for object\n//         sourceBuffer.addRaw('for (var ' + indexName + ' in ' + listName + ') {');\n//         sourceBuffer.addRaw('if (' + listName + '[' + indexName + '] != null) {');\n//         sourceBuffer.addRaw('componentCtx.data.' + indexName + '=' + indexName + ';');\n//         sourceBuffer.addRaw('componentCtx.data.' + itemName + '= ' + listName + '[' + indexName + '];');\n//         sourceBuffer.addRaw(\n//             aNodeCompiler.compile(\n//                 forElementANode,\n//                 sourceBuffer,\n//                 owner\n//             )\n//         );\n//         sourceBuffer.addRaw('}');\n//         sourceBuffer.addRaw('}');\n// \n//         sourceBuffer.addRaw('}');\n//     },\n// \n//     /**\n//      * 编译 slot 节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileSlot: function (aNode, sourceBuffer, owner) {\n//         sourceBuffer.addRaw('(function () {');\n// \n//         sourceBuffer.addRaw('function $defaultSlotRender(componentCtx) {');\n//         sourceBuffer.addRaw('  var html = \"\";');\n//         each(aNode.children, function (aNodeChild) {\n//             sourceBuffer.addRaw(aNodeCompiler.compile(aNodeChild, sourceBuffer, owner));\n//         });\n//         sourceBuffer.addRaw('  return html;');\n//         sourceBuffer.addRaw('}');\n// \n//         sourceBuffer.addRaw('  var $givenSlot = [];');\n// \n//         var nameProp = getANodeProp(aNode, 'name');\n//         if (nameProp) {\n//             sourceBuffer.addRaw('var $slotName = ' + compileExprSource.expr(nameProp.expr) + ';');\n//         }\n//         else {\n//             sourceBuffer.addRaw('var $slotName = null;');\n//         }\n// \n//         sourceBuffer.addRaw('var $ctxGivenSlots = componentCtx.givenSlots;');\n//         sourceBuffer.addRaw('for (var $i = 0; $i < $ctxGivenSlots.length; $i++) {');\n//         sourceBuffer.addRaw('  if ($ctxGivenSlots[$i][1] == $slotName) {');\n//         sourceBuffer.addRaw('    $givenSlot.push($ctxGivenSlots[$i][0]);');\n//         sourceBuffer.addRaw('  }');\n//         sourceBuffer.addRaw('}');\n// \n// \n//         sourceBuffer.addRaw('var $isInserted = $givenSlot.length > 0;');\n//         sourceBuffer.addRaw('if (!$isInserted) { $givenSlot.push($defaultSlotRender); }');\n// \n//         sourceBuffer.addRaw('var $slotCtx = $isInserted ? componentCtx.owner : componentCtx;');\n// \n//         if (aNode.vars || aNode.directives.bind) {\n//             sourceBuffer.addRaw('$slotCtx = {data: extend({}, $slotCtx.data), filters: $slotCtx.filters, callFilter: $slotCtx.callFilter};'); // eslint-disable-line\n// \n//             if (aNode.directives.bind) {\n//                 sourceBuffer.addRaw('extend($slotCtx.data, ' + compileExprSource.expr(aNode.directives.bind.value) + ');'); // eslint-disable-line\n//             }\n// \n//             each(aNode.vars, function (varItem) {\n//                 sourceBuffer.addRaw(\n//                     '$slotCtx.data[\"' + varItem.name + '\"] = '\n//                     + compileExprSource.expr(varItem.expr)\n//                     + ';'\n//                 );\n//             });\n//         }\n// \n//         sourceBuffer.addRaw('for (var $renderIndex = 0; $renderIndex < $givenSlot.length; $renderIndex++) {');\n//         sourceBuffer.addRaw('  html += $givenSlot[$renderIndex]($slotCtx);');\n//         sourceBuffer.addRaw('}');\n// \n//         sourceBuffer.addRaw('})();');\n//     },\n// \n//     /**\n//      * 编译普通节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      * @param {Object} extra 编译所需的一些额外信息\n//      */\n//     compileElement: function (aNode, sourceBuffer, owner, extra) {\n//         extra = extra || {};\n//         // if (aNode.tagName === 'option'\n//         //     && !getANodeProp(aNode, 'value')\n//         //     && aNode.children[0]\n//         // ) {\n//         //     aNode.props.push({\n//         //         name: 'value',\n//         //         expr: aNode.children[0].textExpr\n//         //     });\n//         // }\n// \n//         elementSourceCompiler.tagStart(\n//             sourceBuffer,\n//             aNode.tagName,\n//             aNode.props,\n//             extra.prop,\n//             aNode.directives.bind\n//         );\n// \n//         elementSourceCompiler.inner(sourceBuffer, aNode, owner);\n//         elementSourceCompiler.tagEnd(sourceBuffer, aNode.tagName);\n//     },\n// \n//     /**\n//      * 编译组件节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      * @param {Object} extra 编译所需的一些额外信息\n//      * @param {Function} extra.ComponentClass 对应组件类\n//      */\n//     compileComponent: function (aNode, sourceBuffer, owner, extra) {\n//         if (aNode) {\n//             sourceBuffer.addRaw('var $slotName = null;');\n//             sourceBuffer.addRaw('var $givenSlots = [];');\n//             each(aNode.children, function (child) {\n//                 var slotBind = !child.textExpr && getANodeProp(child, 'slot');\n//                 if (slotBind) {\n//                     sourceBuffer.addRaw('$slotName = ' + compileExprSource.expr(slotBind.expr) + ';');\n//                     sourceBuffer.addRaw('$givenSlots.push([function (componentCtx) {');\n//                     sourceBuffer.addRaw('  var html = \"\";');\n//                     sourceBuffer.addRaw(aNodeCompiler.compile(child, sourceBuffer, owner));\n//                     sourceBuffer.addRaw('  return html;');\n//                     sourceBuffer.addRaw('}, $slotName]);');\n//                 }\n//                 else {\n//                     sourceBuffer.addRaw('$givenSlots.push([function (componentCtx) {');\n//                     sourceBuffer.addRaw('  var html = \"\";');\n//                     sourceBuffer.addRaw(aNodeCompiler.compile(child, sourceBuffer, owner));\n//                     sourceBuffer.addRaw('  return html;');\n//                     sourceBuffer.addRaw('}]);');\n//                 }\n//             });\n//         }\n// \n//         var ComponentClass = extra.ComponentClass;\n//         var component = new ComponentClass({\n//             aNode: aNode,\n//             owner: owner,\n//             subTag: aNode.tagName\n//         });\n// \n//         var givenData = [];\n// \n//         each(component.binds, function (prop) {\n//             givenData.push(\n//                 compileExprSource.stringLiteralize(prop.name)\n//                 + ':'\n//                 + compileExprSource.expr(prop.expr)\n//             );\n//         });\n// \n//         var givenDataHTML = '{' + givenData.join(',\\n') + '}';\n//         if (aNode.directives.bind){\n//             givenDataHTML = 'extend('\n//                 + compileExprSource.expr(aNode.directives.bind.value)\n//                  + ', '\n//                 + givenDataHTML\n//                 + ')';\n//         }\n// \n//         sourceBuffer.addRaw('html += (');\n//         sourceBuffer.addRendererStart();\n//         compileComponentSource(sourceBuffer, component, extra && extra.prop);\n//         sourceBuffer.addRendererEnd();\n//         sourceBuffer.addRaw(')(' + givenDataHTML + ', componentCtx, $givenSlots);');\n//         sourceBuffer.addRaw('$givenSlots = null;');\n//     }\n// };\n// /* eslint-disable guard-for-in */\n// \n// /**\n//  * 生成组件 renderer 时 ctx 对象构建的代码\n//  *\n//  * @inner\n//  * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//  * @param {Object} component 组件实例\n//  * @param {string?} extraProp 额外的属性串\n//  */\n// function compileComponentSource(sourceBuffer, component, extraProp) {\n//     sourceBuffer.addRaw(genComponentContextCode(component));\n//     sourceBuffer.addRaw('componentCtx.owner = parentCtx;');\n//     sourceBuffer.addRaw('componentCtx.givenSlots = givenSlots;');\n// \n// \n//     sourceBuffer.addRaw('data = extend(componentCtx.data, data);');\n//     sourceBuffer.addRaw('for (var $i = 0; $i < componentCtx.computedNames.length; $i++) {');\n//     sourceBuffer.addRaw('  var $computedName = componentCtx.computedNames[$i];');\n//     sourceBuffer.addRaw('  data[$computedName] = componentCtx.computed[$computedName]();');\n//     sourceBuffer.addRaw('}');\n// \n//     extraProp = extraProp || '';\n// \n//     var eventDeclarations = [];\n//     for (var key in component.listeners) {\n//         each(component.listeners[key], function (listener) {\n//             if (listener.declaration) {\n//                 eventDeclarations.push(listener.declaration);\n//             }\n//         });\n//     }\n// \n//     elementSourceCompiler.tagStart(\n//         sourceBuffer,\n//         component.tagName,\n//         component.aNode.props,\n//         extraProp,\n//         component.aNode.directives.bind\n//     );\n// \n//     if (!component.owner) {\n//         sourceBuffer.joinString('<!--s-data:');\n//         sourceBuffer.joinDataStringify();\n//         sourceBuffer.joinString('-->');\n//     }\n// \n// \n// \n//     elementSourceCompiler.inner(sourceBuffer, component.aNode, component);\n//     elementSourceCompiler.tagEnd(sourceBuffer, component.tagName);\n// }\n// \n// var stringifier = {\n//     obj: function (source) {\n//         var prefixComma;\n//         var result = '{';\n// \n//         for (var key in source) {\n//             if (typeof source[key] === 'undefined') {\n//                 continue;\n//             }\n// \n//             if (prefixComma) {\n//                 result += ',';\n//             }\n//             prefixComma = 1;\n// \n//             result += compileExprSource.stringLiteralize(key) + ':' + stringifier.any(source[key]);\n//         }\n// \n//         return result + '}';\n//     },\n// \n//     arr: function (source) {\n//         var prefixComma;\n//         var result = '[';\n// \n//         each(source, function (value) {\n//             if (prefixComma) {\n//                 result += ',';\n//             }\n//             prefixComma = 1;\n// \n//             result += stringifier.any(value);\n//         });\n// \n//         return result + ']';\n//     },\n// \n//     str: function (source) {\n//         return compileExprSource.stringLiteralize(source);\n//     },\n// \n//     date: function (source) {\n//         return 'new Date(' + source.getTime() + ')';\n//     },\n// \n//     any: function (source) {\n//         switch (typeof source) {\n//             case 'string':\n//                 return stringifier.str(source);\n// \n//             case 'number':\n//                 return '' + source;\n// \n//             case 'boolean':\n//                 return source ? 'true' : 'false';\n// \n//             case 'object':\n//                 if (!source) {\n//                     return null;\n//                 }\n// \n//                 if (source instanceof Array) {\n//                     return stringifier.arr(source);\n//                 }\n// \n//                 if (source instanceof Date) {\n//                     return stringifier.date(source);\n//                 }\n// \n//                 return stringifier.obj(source);\n//         }\n// \n//         throw new Error('Cannot Stringify:' + source);\n//     }\n// };\n// \n// /**\n//  * 生成组件 renderer 时 ctx 对象构建的代码\n//  *\n//  * @inner\n//  * @param {Object} component 组件实例\n//  * @return {string}\n//  */\n// function genComponentContextCode(component) {\n//     var code = ['var componentCtx = {'];\n// \n//     // given anode\n//     code.push('givenSlots: [],');\n// \n//     // filters\n//     code.push('filters: {');\n//     var filterCode = [];\n//     for (var key in component.filters) {\n//         var filter = component.filters[key];\n// \n//         if (typeof filter === 'function') {\n//             filterCode.push(key + ': ' + filter.toString());\n//         }\n//     }\n//     code.push(filterCode.join(','));\n//     code.push('},');\n// \n//     code.push(\n//         'callFilter: function (name, args) {',\n//         '    var filter = this.filters[name] || DEFAULT_FILTERS[name];',\n//         '    if (typeof filter === \"function\") {',\n//         '        return filter.apply(this, args);',\n//         '    }',\n//         '},'\n//     );\n// \n//     /* eslint-disable no-redeclare */\n//     // computed obj\n//     code.push('computed: {');\n//     var computedCode = [];\n//     for (var key in component.computed) {\n//         var computed = component.computed[key];\n// \n//         if (typeof computed === 'function') {\n//             computedCode.push(key + ': '\n//                 + computed.toString().replace(\n//                     /this.data.get\\(([^\\)]+)\\)/g,\n//                     function (match, exprLiteral) {\n//                         var exprStr = (new Function('return ' + exprLiteral))();\n//                         var expr = parseExpr(exprStr);\n// \n//                         return compileExprSource.expr(expr);\n//                     })\n//             );\n//         }\n//     }\n//     code.push(computedCode.join(','));\n//     code.push('},');\n// \n//     // computed names\n//     code.push('computedNames: [');\n//     computedCode = [];\n//     for (var key in component.computed) {\n//         var computed = component.computed[key];\n// \n//         if (typeof computed === 'function') {\n//             computedCode.push('\"' + key + '\"');\n//         }\n//     }\n//     code.push(computedCode.join(','));\n//     code.push('],');\n//     /* eslint-enable no-redeclare */\n// \n//     // data\n//     code.push('data: ' + stringifier.any(component.data.get()) + ',');\n// \n//     // tagName\n//     code.push('tagName: \"' + component.tagName + '\"');\n//     code.push('};');\n// \n//     return code.join('\\n');\n// }\n// \n// /* eslint-enable guard-for-in */\n// \n// /* eslint-disable no-unused-vars */\n// /* eslint-disable fecs-camelcase */\n// \n// /**\n//  * 组件编译的模板函数\n//  *\n//  * @inner\n//  */\n// function componentCompilePreCode() {\n//     var $version = '3.6.2';\n// \n//     function extend(target, source) {\n//         if (source) {\n//             Object.keys(source).forEach(function (key) {\n//                 let value = source[key];\n//                 if (typeof value !== 'undefined') {\n//                     target[key] = value;\n//                 }\n//             });\n//         }\n// \n//         return target;\n//     }\n// \n//     function each(array, iterator) {\n//         if (array && array.length > 0) {\n//             for (var i = 0, l = array.length; i < l; i++) {\n//                 if (iterator(array[i], i) === false) {\n//                     break;\n//                 }\n//             }\n//         }\n//     }\n// \n//     function contains(array, value) {\n//         var result;\n//         each(array, function (item) {\n//             result = item === value;\n//             return !result;\n//         });\n// \n//         return result;\n//     }\n// \n//     var HTML_ENTITY = {\n//         /* jshint ignore:start */\n//         '&': '&amp;',\n//         '<': '&lt;',\n//         '>': '&gt;',\n//         '\"': '&quot;',\n//         /* eslint-disable quotes */\n//         \"'\": '&#39;'\n//         /* eslint-enable quotes */\n//         /* jshint ignore:end */\n//     };\n// \n//     function htmlFilterReplacer(c) {\n//         return HTML_ENTITY[c];\n//     }\n// \n//     function escapeHTML(source) {\n//         if (source == null) {\n//             return '';\n//         }\n// \n//         return String(source).replace(/[&<>\"']/g, htmlFilterReplacer);\n//     }\n// \n//     var DEFAULT_FILTERS = {\n//         url: encodeURIComponent,\n//         _class: function (source) {\n//             if (source instanceof Array) {\n//                 return source.join(' ');\n//             }\n// \n//             return source;\n//         },\n//         _style: function (source) {\n//             if (typeof source === 'object') {\n//                 var result = '';\n//                 if (source) {\n//                     Object.keys(source).forEach(function (key) {\n//                         result += key + ':' + source[key] + ';';\n//                     });\n//                 }\n// \n//                 return result;\n//             }\n// \n//             return source || '';\n//         },\n//         _sep: function (source, sep) {\n//             return source ? sep + source : '';\n//         }\n//     };\n// \n//     function attrFilter(name, value) {\n//         if (value) {\n//             return ' ' + name + '=\"' + value + '\"';\n//         }\n// \n//         return '';\n//     }\n// \n//     function boolAttrFilter(name, value) {\n//         if (value && value !== 'false' && value !== '0') {\n//             return ' ' + name;\n//         }\n// \n//         return '';\n//     }\n// \n//     function stringLiteralize(source) {\n//         return '\"'\n//             + source\n//                 .replace(/\\x5C/g, '\\\\\\\\')\n//                 .replace(/\"/g, '\\\\\"')\n//                 .replace(/\\x0A/g, '\\\\n')\n//                 .replace(/\\x09/g, '\\\\t')\n//                 .replace(/\\x0D/g, '\\\\r')\n//             + '\"';\n//     }\n// \n//     var stringifier = {\n//         obj: function (source) {\n//             var prefixComma;\n//             var result = '{';\n// \n//             Object.keys(source).forEach(function (key) {\n//                 if (typeof source[key] === 'undefined') {\n//                     return;\n//                 }\n// \n//                 if (prefixComma) {\n//                     result += ',';\n//                 }\n//                 prefixComma = 1;\n// \n//                 result += stringLiteralize(key) + ':' + stringifier.any(source[key]);\n//             });\n// \n//             return result + '}';\n//         },\n// \n//         arr: function (source) {\n//             var prefixComma;\n//             var result = '[';\n// \n//             each(source, function (value) {\n//                 if (prefixComma) {\n//                     result += ',';\n//                 }\n//                 prefixComma = 1;\n// \n//                 result += stringifier.any(value);\n//             });\n// \n//             return result + ']';\n//         },\n// \n//         str: function (source) {\n//             return stringLiteralize(source);\n//         },\n// \n//         date: function (source) {\n//             return 'new Date(' + source.getTime() + ')';\n//         },\n// \n//         any: function (source) {\n//             switch (typeof source) {\n//                 case 'string':\n//                     return stringifier.str(source);\n// \n//                 case 'number':\n//                     return '' + source;\n// \n//                 case 'boolean':\n//                     return source ? 'true' : 'false';\n// \n//                 case 'object':\n//                     if (!source) {\n//                         return null;\n//                     }\n// \n//                     if (source instanceof Array) {\n//                         return stringifier.arr(source);\n//                     }\n// \n//                     if (source instanceof Date) {\n//                         return stringifier.date(source);\n//                     }\n// \n//                     return stringifier.obj(source);\n//             }\n// \n//             throw new Error('Cannot Stringify:' + source);\n//         }\n//     };\n// }\n// /* eslint-enable no-unused-vars */\n// /* eslint-enable fecs-camelcase */\n// \n// /**\n//  * 将组件编译成 render 方法的 js 源码\n//  *\n//  * @param {Function} ComponentClass 组件类\n//  * @return {string}\n//  */\n// function compileJSSource(ComponentClass) {\n//     var sourceBuffer = new CompileSourceBuffer();\n// \n//     sourceBuffer.addRendererStart();\n//     sourceBuffer.addRaw(\n//         componentCompilePreCode.toString()\n//             .split('\\n')\n//             .slice(1)\n//             .join('\\n')\n//             .replace(/\\}\\s*$/, '')\n//     );\n// \n//     // 先初始化个实例，让模板编译成 ANode，并且能获得初始化数据\n//     var component = new ComponentClass();\n// \n//     compileComponentSource(sourceBuffer, component);\n//     sourceBuffer.addRendererEnd();\n//     return sourceBuffer.toCode();\n// }\n// #[end]\n\n// exports = module.exports = compileJSSource;\n\n    /* eslint-disable no-unused-vars */\n//     var nextTick = require('./util/next-tick');\n//     var inherits = require('./util/inherits');\n//     var parseTemplate = require('./parser/parse-template');\n//     var parseExpr = require('./parser/parse-expr');\n//     var ExprType = require('./parser/expr-type');\n//     var LifeCycle = require('./view/life-cycle');\n//     var NodeType = require('./view/node-type');\n//     var Component = require('./view/component');\n//     var compileComponent = require('./view/compile-component');\n//     var defineComponent = require('./view/define-component');\n//     var emitDevtool = require('./util/emit-devtool');\n//     var compileJSSource = require('./view/compile-js-source');\n//     var Data = require('./runtime/data');\n//     var evalExpr = require('./runtime/eval-expr');\n//     var DataTypes = require('./util/data-types');\n\n\n    var san = {\n        /**\n         * san版本号\n         *\n         * @type {string}\n         */\n        version: '3.6.2',\n\n        // #[begin] devtool\n        /**\n         * 是否开启调试。开启调试时 devtool 会工作\n         *\n         * @type {boolean}\n         */\n        debug: true,\n        // #[end]\n\n        // #[begin] ssr\n//         /**\n//          * 将组件类编译成 renderer 方法\n//          *\n//          * @param {Function} ComponentClass 组件类\n//          * @return {function(Object):string}\n//          */\n//         compileToRenderer: function (ComponentClass) {\n//             var renderer = ComponentClass.__ssrRenderer;\n// \n//             if (!renderer) {\n//                 var code = compileJSSource(ComponentClass);\n//                 renderer = (new Function('return ' + code))();\n//                 ComponentClass.__ssrRenderer = renderer;\n//             }\n// \n//             return renderer;\n//         },\n// \n//         /**\n//          * 将组件类编译成 renderer 方法的源文件\n//          *\n//          * @param {Function} ComponentClass 组件类\n//          * @return {string}\n//          */\n//         compileToSource: compileJSSource,\n        // #[end]\n\n        /**\n         * 组件基类\n         *\n         * @type {Function}\n         */\n        Component: Component,\n\n        /**\n         * 创建组件类\n         *\n         * @param {Object} proto 组件类的方法表\n         * @return {Function}\n         */\n        defineComponent: defineComponent,\n\n        /**\n         * 编译组件类。预解析template和components\n         *\n         * @param {Function} ComponentClass 组件类\n         */\n        compileComponent: compileComponent,\n\n        /**\n         * 解析 template\n         *\n         * @inner\n         * @param {string} source template 源码\n         * @return {ANode}\n         */\n        parseTemplate: parseTemplate,\n\n        /**\n         * 解析表达式\n         *\n         * @param {string} source 源码\n         * @return {Object}\n         */\n        parseExpr: parseExpr,\n\n        /**\n         * 表达式类型枚举\n         *\n         * @const\n         * @type {Object}\n         */\n        ExprType: ExprType,\n\n        /**\n         * 生命周期\n         */\n        LifeCycle: LifeCycle,\n\n        /**\n         * 节点类型\n         *\n         * @const\n         * @type {Object}\n         */\n        NodeType: NodeType,\n\n        /**\n         * 在下一个更新周期运行函数\n         *\n         * @param {Function} fn 要运行的函数\n         */\n        nextTick: nextTick,\n\n        /**\n         * 数据类\n         *\n         * @class\n         * @param {Object?} data 初始数据\n         * @param {Data?} parent 父级数据对象\n         */\n        Data: Data,\n\n        /**\n         * 计算表达式的值\n         *\n         * @param {Object} expr 表达式对象\n         * @param {Data} data 数据对象\n         * @param {Component=} owner 组件对象，用于表达式中filter的执行\n         * @return {*}\n         */\n        evalExpr: evalExpr,\n\n        /**\n         * 构建类之间的继承关系\n         *\n         * @param {Function} subClass 子类函数\n         * @param {Function} superClass 父类函数\n         */\n        inherits: inherits,\n\n        /**\n         * DataTypes\n         *\n         * @type {Object}\n         */\n        DataTypes: DataTypes\n    };\n\n    // export\n    if (typeof exports === 'object' && typeof module === 'object') {\n        // For CommonJS\n        exports = module.exports = san;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        // For AMD\n        define('san', [], san);\n    }\n    else {\n        // For <script src=\"...\"\n        root.san = san;\n    }\n\n    // #[begin] devtool\n    emitDevtool.start(san);\n    // #[end]\n})(this);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"san-router\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"san-router\"] = factory();\n\telse\n\t\troot[\"san-router\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 6);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports['default'] = resolveURL;\n\nvar _parseUrl = __webpack_require__(1);\n\nvar _parseUrl2 = _interopRequireDefault(_parseUrl);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n * 将 URL 中相对路径部分展开\n *\n * @param {string} source 要展开的url\n * @param {string} base 当前所属环境的url\n * @return {string}\n */\nfunction resolveURL(source, base) {\n    var sourceLoc = (0, _parseUrl2['default'])(source);\n    var baseLoc = (0, _parseUrl2['default'])(base);\n\n    var sourcePath = sourceLoc.path;\n    if (sourcePath.indexOf('/') === 0) {\n        return source;\n    }\n\n    var sourceSegs = sourcePath.split('/');\n    var baseSegs = baseLoc.path.split('/');\n    baseSegs.pop();\n\n    for (var i = 0; i < sourceSegs.length; i++) {\n        var seg = sourceSegs[i];\n        switch (seg) {\n            case '..':\n                baseSegs.pop();\n                break;\n            case '.':\n                break;\n            default:\n                baseSegs.push(seg);\n        }\n    }\n\n    if (baseSegs[0] !== '') {\n        baseSegs.unshift('');\n    }\n\n    return baseSegs.join('/') + (sourceLoc.queryString ? '?' + sourceLoc.queryString : '');\n} /**\n   * san-router\n   * Copyright 2017 Baidu Inc. All rights reserved.\n   *\n   * @file 将 URL 中相对路径部分展开\n   * @author errorrik\n   */\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports['default'] = parseURL;\n/**\n * san-router\n * Copyright 2017 Baidu Inc. All rights reserved.\n *\n * @file 解析URL\n * @author errorrik\n */\n\n/**\n * 解析URL，返回包含path、query、queryString的对象\n *\n * @param {string} url 要解析的url\n * @return {Object}\n */\nfunction parseURL(url) {\n    var result = {\n        hash: '',\n        queryString: '',\n        params: {},\n        query: {},\n        path: url\n    };\n\n    // parse hash\n    var hashStart = result.path.indexOf('#');\n    if (hashStart >= 0) {\n        result.hash = result.path.slice(hashStart + 1);\n        result.path = result.path.slice(0, hashStart);\n    }\n\n    // parse query\n    var query = result.query;\n    var queryStart = result.path.indexOf('?');\n    if (queryStart >= 0) {\n        result.queryString = result.path.slice(queryStart + 1);\n        result.path = result.path.slice(0, queryStart);\n\n        result.queryString.split('&').forEach(function (querySeg) {\n            // 考虑到有可能因为未处理转义问题，\n            // 导致value中存在**=**字符，因此不使用`split`函数\n            var equalIndex = querySeg.indexOf('=');\n            var value = '';\n            if (equalIndex > 0) {\n                value = querySeg.slice(equalIndex + 1);\n                querySeg = querySeg.slice(0, equalIndex);\n            }\n\n            var key = decodeURIComponent(querySeg);\n            value = decodeURIComponent(value);\n\n            // 已经存在这个参数，且新的值不为空时，把原来的值变成数组\n            if (query.hasOwnProperty(key)) {\n                /* eslint-disable */\n                query[key] = [].concat(query[key], value);\n                /* eslint-disable */\n            } else {\n                query[key] = value;\n            }\n        });\n    }\n\n    return result;\n}\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * san-router\n * Copyright 2017 Baidu Inc. All rights reserved.\n *\n * @file 提供事件相关操作的基类\n * @author otakustay, errorrik\n */\n\nvar EventTarget = function () {\n    function EventTarget() {\n        _classCallCheck(this, EventTarget);\n    }\n\n    /**\n     * 注册一个事件处理函数\n     *\n     * @param {string} type 事件的类型\n     * @param {Function | boolean} fn 事件的处理函数\n     */\n    EventTarget.prototype.on = function on(type, fn) {\n        if (typeof fn !== 'function') {\n            return;\n        }\n\n        if (!this._eventListeners) {\n            this._eventListeners = {};\n        }\n\n        if (!this._eventListeners[type]) {\n            this._eventListeners[type] = [];\n        }\n\n        this._eventListeners[type].push(fn);\n    };\n\n    /**\n     * 注销一个事件处理函数\n     *\n     * @param {string} type 事件的类型，如果值为`*`仅会注销通过`*`为类型注册的事件，并不会将所有事件注销\n     * @param {Function} [fn] 事件的处理函数，无此参数则注销`type`指定类型的所有事件处理函数\n     */\n\n\n    EventTarget.prototype.un = function un(type, fn) {\n        if (!this._eventListeners || !this._eventListeners[type]) {\n            return;\n        }\n\n        if (!fn) {\n            this._eventListeners[type] = [];\n        } else {\n            var listeners = this._eventListeners[type];\n            var len = listeners.length;\n\n            while (len--) {\n                if (listeners[len] === fn) {\n                    listeners.splice(len, 1);\n                }\n            }\n        }\n    };\n\n    /**\n     * 触发指定类型的事件\n     *\n     * @param {string} type 事件类型\n     * @param {*} [args] 事件对象\n     */\n\n\n    EventTarget.prototype.fire = function fire(type, args) {\n        if (!type) {\n            throw new Error('No event type specified');\n        }\n\n        var listeners = this._eventListeners && this._eventListeners[type];\n        if (listeners) {\n            for (var i = 0; i < listeners.length; i++) {\n                listeners[i](args);\n            }\n        }\n    };\n\n    return EventTarget;\n}();\n\nexports['default'] = EventTarget;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _main = __webpack_require__(6);\n\nvar _resolveUrl = __webpack_require__(0);\n\nvar _resolveUrl2 = _interopRequireDefault(_resolveUrl);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n * san-router\n * Copyright 2017 Baidu Inc. All rights reserved.\n *\n * @file 路由链接的 San 组件\n * @author errorrik\n */\n\nexports['default'] = {\n    template: '<a href=\"{{href}}\"\\n        onclick=\"return false;\"\\n        on-click=\"clicker($event)\"\\n        target=\"{{target}}\"\\n        class=\"{{class}}\"\\n        style=\"{{style}}\"\\n        >\\n        <slot></slot>\\n    </a>',\n\n    clicker: function clicker(e) {\n        var href = this.data.get('href');\n\n        if (typeof href === 'string') {\n            _main.router.locator.redirect(href.replace(/^#/, ''));\n        }\n\n        if (e.preventDefault) {\n            e.preventDefault();\n        } else {\n            e.returnValue = false;\n        }\n    },\n\n\n    computed: {\n        href: function href() {\n            var url = this.data.get('to');\n            if (typeof url !== 'string') {\n                return;\n            }\n\n            var href = (0, _resolveUrl2['default'])(url, _main.router.locator.current);\n            if (_main.router.mode === 'hash') {\n                href = '#' + href;\n            }\n\n            return href;\n        }\n    }\n};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _eventTarget = __webpack_require__(2);\n\nvar _eventTarget2 = _interopRequireDefault(_eventTarget);\n\nvar _resolveUrl = __webpack_require__(0);\n\nvar _resolveUrl2 = _interopRequireDefault(_resolveUrl);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * san-router\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2017 Baidu Inc. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file hash 模式地址监听器\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author errorrik\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * 获取当前URL\n *\n * @return {string}\n */\nfunction getLocation() {\n    // Firefox下`location.hash`存在自动解码的情况，\n    // 比如hash的值是**abc%3def**，\n    // 在Firefox下获取会成为**abc=def**\n    // 为了避免这一情况，需要从`location.href`中分解\n    var index = location.href.indexOf('#');\n    var url = index < 0 ? '/' : location.href.slice(index + 1) || '/';\n\n    return url;\n}\n\n/**\n * hash 模式地址监听器\n *\n * @class\n */\n\nvar Locator = function (_EventTarget) {\n    _inherits(Locator, _EventTarget);\n\n    /**\n     * 构造函数\n     */\n    function Locator() {\n        _classCallCheck(this, Locator);\n\n        var _this = _possibleConstructorReturn(this, _EventTarget.call(this));\n\n        _this.current = getLocation();\n        _this.referrer = '';\n\n        _this.hashChangeHandler = function () {\n            _this.redirect(getLocation());\n        };\n        return _this;\n    }\n\n    /**\n     * 开始监听 url 变化\n     */\n\n\n    Locator.prototype.start = function start() {\n        if (window.addEventListener) {\n            window.addEventListener('hashchange', this.hashChangeHandler, false);\n        }\n\n        if (window.attachEvent) {\n            window.attachEvent('onhashchange', this.hashChangeHandler);\n        }\n    };\n\n    /**\n     * 停止监听\n     */\n\n\n    Locator.prototype.stop = function stop() {\n        if (window.removeEventListener) {\n            window.removeEventListener('hashchange', this.hashChangeHandler, false);\n        }\n\n        if (window.detachEvent) {\n            window.detachEvent('onhashchange', this.hashChangeHandler);\n        }\n    };\n\n    /**\n     * 重定向\n     *\n     * @param {string} url 重定向的地址\n     * @param {Object?} options 重定向的行为配置\n     * @param {boolean?} options.force 是否强制刷新\n     */\n\n\n    Locator.prototype.redirect = function redirect(url) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { force: false };\n\n        url = (0, _resolveUrl2['default'])(url, this.current);\n        var referrer = this.current;\n\n        var isChanged = url !== referrer;\n        if (isChanged) {\n            this.referrer = referrer;\n            this.current = url;\n            location.hash = url;\n        } else {\n            referrer = this.referrer;\n        }\n\n        if ((isChanged || options.force) && !options.silent) {\n            this.fire('redirect', { url: url, referrer: referrer });\n        }\n    };\n\n    /**\n     * 刷新当前 url\n     */\n\n\n    Locator.prototype.reload = function reload() {\n        this.redirect(this.current, { force: true });\n    };\n\n    return Locator;\n}(_eventTarget2['default']);\n\nexports['default'] = Locator;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _eventTarget = __webpack_require__(2);\n\nvar _eventTarget2 = _interopRequireDefault(_eventTarget);\n\nvar _resolveUrl = __webpack_require__(0);\n\nvar _resolveUrl2 = _interopRequireDefault(_resolveUrl);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * san-router\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2017 Baidu Inc. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file html5 模式地址监听器\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author errorrik\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * 获取当前URL\n *\n * @return {string}\n */\nfunction getLocation() {\n    return location.pathname + location.search;\n}\n\n/**\n * html5 模式地址监听器\n *\n * @class\n */\n\nvar Locator = function (_EventTarget) {\n    _inherits(Locator, _EventTarget);\n\n    /**\n     * 构造函数\n     */\n    function Locator() {\n        _classCallCheck(this, Locator);\n\n        var _this = _possibleConstructorReturn(this, _EventTarget.call(this));\n\n        _this.current = getLocation();\n        _this.referrer = '';\n\n        _this.popstateHandler = function () {\n            _this.referrer = _this.current;\n            _this.current = getLocation();\n\n            _this.fire('redirect', {\n                url: _this.current,\n                referrer: _this.referrer\n            });\n        };\n        return _this;\n    }\n\n    /**\n     * 开始监听 url 变化\n     */\n\n\n    Locator.prototype.start = function start() {\n        window.addEventListener('popstate', this.popstateHandler);\n    };\n\n    /**\n     * 停止监听\n     */\n\n\n    Locator.prototype.stop = function stop() {\n        window.removeEventListener('popstate', this.popstateHandler);\n    };\n\n    /**\n     * 重定向\n     *\n     * @param {string} url 重定向的地址\n     * @param {Object?} options 重定向的行为配置\n     * @param {boolean?} options.force 是否强制刷新\n     */\n\n\n    Locator.prototype.redirect = function redirect(url) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { force: false };\n\n        url = (0, _resolveUrl2['default'])(url, this.current);\n        var referrer = this.current;\n\n        var isChanged = url !== referrer;\n\n        if (isChanged) {\n            this.referrer = referrer;\n            this.current = url;\n\n            history.pushState({}, '', url);\n        }\n\n        if ((isChanged || options.force) && !options.silent) {\n            this.fire('redirect', { url: url, referrer: referrer });\n        }\n    };\n\n    /**\n     * 刷新当前 url\n     */\n\n\n    Locator.prototype.reload = function reload() {\n        this.fire('redirect', {\n            url: this.current,\n            referrer: this.referrer\n        });\n    };\n\n    return Locator;\n}(_eventTarget2['default']);\n\nexports['default'] = Locator;\n\n\nLocator.isSupport = 'pushState' in window.history;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.Link = exports.router = exports.Router = exports.version = undefined;\n\nvar _hash = __webpack_require__(4);\n\nvar _hash2 = _interopRequireDefault(_hash);\n\nvar _html = __webpack_require__(5);\n\nvar _html2 = _interopRequireDefault(_html);\n\nvar _parseUrl = __webpack_require__(1);\n\nvar _parseUrl2 = _interopRequireDefault(_parseUrl);\n\nvar _link = __webpack_require__(3);\n\nvar _link2 = _interopRequireDefault(_link);\n\nvar _elementSelector = __webpack_require__(7);\n\nvar _elementSelector2 = _interopRequireDefault(_elementSelector);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**\n                                                                                                                                                           * san-router\n                                                                                                                                                           * Copyright 2017 Baidu Inc. All rights reserved.\n                                                                                                                                                           *\n                                                                                                                                                           * @file 主模块\n                                                                                                                                                           * @author errorrik\n                                                                                                                                                           */\n\nvar routeID = 0x5942b;\nvar guid = function guid() {\n    return (++routeID).toString();\n};\n\nfunction isComponent(C) {\n    return C.prototype && (C.prototype.nodeType === 5 || C.prototype._type === 'san-cmpt');\n}\n\n/**\n * 版本号\n *\n * @type {string}\n */\nvar version = exports.version = '1.2.0';\n\n/**\n * 路由器类\n *\n * @class\n */\n\nvar Router = exports.Router = function () {\n\n    /**\n     * 构造函数\n     *\n     * @param {Object?} options 初始化参数\n     * @param {string?} options.mode 路由模式，hash | html5\n     */\n    function Router() {\n        var _this = this;\n\n        var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            _ref$mode = _ref.mode,\n            mode = _ref$mode === undefined ? 'hash' : _ref$mode;\n\n        _classCallCheck(this, Router);\n\n        this.routes = [];\n        this.routeAlives = [];\n        this.listeners = [];\n\n        /**\n         * locator redirect 事件监听函数\n         *\n         * @param {Object} e locator事件对象\n         */\n        this.locatorRedirectHandler = function (e) {\n            var url = (0, _parseUrl2['default'])(e.url);\n            var routeItem = void 0;\n\n            for (var _i = 0; _i < _this.routes.length; _i++) {\n                var item = _this.routes[_i];\n                var match = item.rule.exec(url.path);\n\n                if (match) {\n                    routeItem = item;\n\n                    // fill params\n                    var keys = item.keys || [];\n                    for (var j = 1; j < match.length; j++) {\n                        var key = keys[j] || j;\n                        var value = match[j];\n                        url.query[key] = value;\n                        url.params[key] = value;\n                    }\n\n                    // fill referrer\n                    url.referrer = e.referrer;\n                    url.config = item.config;\n\n                    break;\n                }\n            }\n\n            var i = 0;\n            var state = 1;\n\n            /**\n             * listener 事件对象\n             *\n             * @type {Object}\n             */\n            var listenerEvent = {\n                hash: url.hash,\n                queryString: url.queryString,\n                query: url.query,\n                path: url.path,\n                referrer: url.referrer,\n                config: url.config,\n                resume: next,\n                suspend: function suspend() {\n                    state = 0;\n                },\n                stop: function stop() {\n                    state = -1;\n                }\n            };\n\n            /**\n             * 尝试运行下一个listener\n             *\n             * @inner\n             */\n            var doNext = function doNext() {\n                if (state > 0) {\n                    if (i < _this.listeners.length) {\n                        _this.listeners[i].call(_this, listenerEvent, url.config);\n                        if (state > 0) {\n                            next();\n                        }\n                    } else {\n                        routeAction();\n                    }\n                }\n            };\n\n            /**\n             * 运行下一个listener\n             *\n             * @inner\n             */\n            function next() {\n                state = 1;\n                i++;\n                doNext();\n            }\n\n            /**\n             * 运行路由行为\n             *\n             * @inner\n             */\n            var routeAction = function routeAction() {\n                if (routeItem) {\n                    _this.doRoute(routeItem, url);\n                } else {\n                    var len = _this.routeAlives.length;\n                    while (len--) {\n                        _this.routeAlives[len].component.dispose();\n                        _this.routeAlives.splice(len, 1);\n                    }\n                }\n            };\n\n            doNext();\n        };\n\n        this.setMode(mode);\n    }\n\n    /**\n     * 添加路由监听器\n     *\n     * @param {function(e, config)} listener 监听器\n     */\n\n\n    Router.prototype.listen = function listen(listener) {\n        this.listeners.push(listener);\n    };\n\n    /**\n     * 移除路由监听器\n     *\n     * @param {Function} listener 监听器\n     */\n\n\n    Router.prototype.unlisten = function unlisten(listener) {\n        var len = this.listeners.length;\n        while (len--) {\n            if (this.listeners[len] === listener) {\n                this.listeners.splice(len, 1);\n            }\n        }\n    };\n\n    /**\n     * 执行路由\n     *\n     * @private\n     * @param {Object} routeItem 路由项\n     * @param {Object} e 路由信息\n     */\n\n\n    Router.prototype.doRoute = function doRoute(routeItem, e) {\n        var _this2 = this;\n\n        var isUpdateAlive = false;\n        var len = this.routeAlives.length;\n\n        while (len--) {\n            var routeAlive = this.routeAlives[len];\n\n            if (routeAlive.id === routeItem.id) {\n                routeAlive.component.data.set('route', e);\n                routeAlive.component._callHook('route');\n                isUpdateAlive = true;\n            } else {\n                routeAlive.component.dispose();\n                this.routeAlives.splice(len, 1);\n            }\n        }\n\n        if (!isUpdateAlive) {\n            if (routeItem.Component) {\n                if (isComponent(routeItem.Component)) {\n                    this.attachCmpt(routeItem, e);\n                } else {\n                    routeItem.Component().then(function (Cmpt) {\n                        // eslint-disable-line\n                        if (isComponent(Cmpt)) {\n                            routeItem.Component = Cmpt;\n                        } else if (Cmpt.__esModule && isComponent(Cmpt['default'])) {\n                            routeItem.Component = Cmpt['default'];\n                        }\n                        _this2.attachCmpt(routeItem, e);\n                    });\n                }\n            } else {\n                routeItem.handler.call(this, e);\n            }\n        }\n    };\n\n    Router.prototype.attachCmpt = function attachCmpt(routeItem, e) {\n        var component = new routeItem.Component();\n        component.data.set('route', e);\n        component._callHook('route');\n\n        var target = routeItem.target;\n        var targetEl = (0, _elementSelector2['default'])(target);\n\n        if (!targetEl) {\n            throw new Error('[SAN-ROUTER ERROR] ' + 'Attach failed, target element \"' + routeItem.target + '\" is not found.');\n        }\n\n        component.attach(targetEl);\n\n        this.routeAlives.push({\n            component: component,\n            id: routeItem.id\n        });\n    };\n\n    /**\n     * 添加路由项\n     * 当规则匹配时，路由将优先将Component渲染到target中。如果没有包含Component，则执行handler函数\n     *\n     * @private\n     * @param {Object} config 路由项配置\n     * @param {string|RegExp} config.rule 路由规则\n     * @param {Function?} config.handler 路由函数\n     * @param {Function?} config.Component 路由组件\n     * @param {string} config.target 路由组件要渲染到的目标位置\n     * @return {Object} san-router 实例\n     */\n\n\n    Router.prototype.add = function add(config) {\n        var rule = config.rule,\n            handler = config.handler,\n            _config$target = config.target,\n            target = _config$target === undefined ? '#main' : _config$target,\n            Component = config.Component;\n\n        var keys = [''];\n\n        if (typeof rule === 'string') {\n            // 没用path-to-regexp，暂时不提供这么多功能支持\n            var regText = rule.replace(/\\/:([a-z0-9_-]+)(?=\\/|$)/ig, function (match, key) {\n                keys.push(key);\n                return '/([^/\\\\s]+)';\n            });\n\n            rule = new RegExp('^' + regText + '$', 'i');\n        }\n\n        if (!(rule instanceof RegExp)) {\n            throw new Error('[SAN-ROUTER ERROR] Rule must be string or RegExp!');\n        }\n\n        var id = guid();\n        this.routes.push({ id: id, rule: rule, handler: handler, keys: keys, target: target, Component: Component, config: config });\n\n        return this;\n    };\n\n    /**\n     * 启动路由功能\n     *\n     * @return {Object} san-router 实例\n     */\n\n\n    Router.prototype.start = function start() {\n        if (!this.isStarted) {\n            this.isStarted = true;\n            this.locator.on('redirect', this.locatorRedirectHandler);\n            this.locator.start();\n            this.locator.reload();\n        }\n\n        return this;\n    };\n\n    /**\n     * 停止路由功能\n     *\n     * @return {Object} san-router 实例\n     */\n\n\n    Router.prototype.stop = function stop() {\n        this.locator.un('redirect', this.locatorRedirectHandler);\n        this.locator.stop();\n        this.isStarted = false;\n\n        return this;\n    };\n\n    /**\n     * 设置路由模式\n     *\n     * @param {string} mode 路由模式，hash | html5\n     * @return {Object} san-router 实例\n     */\n\n\n    Router.prototype.setMode = function setMode(mode) {\n        mode = mode.toLowerCase();\n        if (this.mode === mode) {\n            return;\n        }\n\n        this.mode = mode;\n\n        var restart = false;\n        if (this.isStarted) {\n            this.stop();\n            restart = true;\n        }\n\n        switch (mode) {\n            case 'hash':\n                this.locator = new _hash2['default']();\n                break;\n            case 'html5':\n                this.locator = new _html2['default']();\n        }\n\n        if (restart) {\n            this.start();\n        }\n\n        return this;\n    };\n\n    return Router;\n}();\n\n/**\n * 默认的路由器实例\n *\n * @type {Router}\n */\n\n\nvar router = exports.router = new Router();\n\n/**\n * 路由链接的 San 组件\n *\n * @class\n */\nexports.Link = _link2['default'];\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports['default'] = elementSelector;\n/*\n*\n* @file 选择器\n* @author vincent lau/413893093@qq.com\n*/\n\n/**\n * 元素选择器\n *\n * @param {string|Element} selector 选择器\n * @returns {Element}\n */\nfunction elementSelector(selector) {\n    switch (typeof selector === 'undefined' ? 'undefined' : _typeof(selector)) {\n        case 'object':\n            return selector;\n\n        case 'string':\n            if (document.querySelector) {\n                return document.querySelector(selector);\n            }\n\n            return document.getElementById(selector.replace(/#/i, ''));\n    }\n}\n\n/***/ }\n/******/ ]);\n});","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var __san_script__, __san_template__\nvar __san_styles__ = {}\nrequire(\"!!style-loader!css-loader?sourceMap!../node_modules/_san-loader@0.0.7@san-loader/lib/style-rewriter.js!../node_modules/_san-loader@0.0.7@san-loader/lib/selector.js?type=style&index=0!./app.san\")\n__san_script__ = require(\"!!!../node_modules/_san-loader@0.0.7@san-loader/lib/selector.js?type=script&index=0!./app.san\")\nif (__san_script__ &&\n    __san_script__.__esModule &&\n    Object.keys(__san_script__).length > 1) {\n  console.warn(\"[san-loader] src\\\\app.san: named exports in *.san files are ignored.\")}\n__san_template__ = require(\"!!html-loader?minimize=false!../node_modules/_san-loader@0.0.7@san-loader/lib/selector.js?type=template&index=0!./app.san\")\nvar __san_proto__ = {}\nif (__san_script__) {\n  __san_proto__ = __san_script__.__esModule\n    ? __san_script__['default']\n    : __san_script__\n}\nif (__san_template__) {\n  __san_proto__.template = __san_template__\n}\nvar san = require(\"san\")\nvar __san_exports__ = san.defineComponent(__san_proto__)\nmodule.exports = __san_exports__\nif (module.exports.__esModule) module.exports = module.exports['default']\nif (!__san_exports__.computed) __san_exports__.computed = {}\nObject.keys(__san_styles__).forEach(function (key) {\nvar module = __san_styles__[key]\n__san_exports__.computed[key] = function () { return module }\n})\n","module.exports = \"\\n<div>\\n    <div class=\\\"hello\\\">hello {{msg}}</div>\\n    <ul>\\n    <li s-for=\\\"item in list\\\">{{item}}</li>\\n    </ul>\\n    <p>Hello {{name}}</p>\\n    <div>\\n    <input value=\\\"{= name =}\\\" placeholder=\\\"please input\\\">\\n    'hello {{name}}'\\n    </div>\\n<div>\\n\";","<template>\r\n    <div>\r\n        <div class=\"hello\">hello {{msg}}</div>\r\n        <ul>\r\n        <li s-for=\"item in list\">{{item}}</li>\r\n        </ul>\r\n        <p>Hello {{name}}</p>\r\n        <div>\r\n        <input value=\"{= name =}\" placeholder=\"please input\">\r\n        'hello {{name}}'\r\n        </div>\r\n    <div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    initData: function(){\r\n        return {\r\n            name: 'San',\r\n            msg: 'world'\r\n        }\r\n    },\r\n    attached: function(){\r\n        this.data.set('list',['san','er','esui','etpl','esl'])\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n    .hello {\r\n        color: red\r\n    }\r\n</style>","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","exports = module.exports = require(\"../node_modules/_css-loader@1.0.0@css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n.hello {\\n    color: red\\n}\\n\", \"\", {\"version\":3,\"sources\":[\"c:/Users/lin/Desktop/baidu-ife/MVVM学院/1.2/webpack/src/app.san?d88a6288\"],\"names\":[],\"mappings\":\";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;IACA,UAAA;CACA\",\"file\":\"app.san\",\"sourcesContent\":[\"<template>\\r\\n    <div>\\r\\n        <div class=\\\"hello\\\">hello {{msg}}</div>\\r\\n        <ul>\\r\\n        <li s-for=\\\"item in list\\\">{{item}}</li>\\r\\n        </ul>\\r\\n        <p>Hello {{name}}</p>\\r\\n        <div>\\r\\n        <input value=\\\"{= name =}\\\" placeholder=\\\"please input\\\">\\r\\n        'hello {{name}}'\\r\\n        </div>\\r\\n    <div>\\r\\n</template>\\r\\n\\r\\n<script>\\r\\nexport default {\\r\\n    initData: function(){\\r\\n        return {\\r\\n            name: 'San',\\r\\n            msg: 'world'\\r\\n        }\\r\\n    },\\r\\n    attached: function(){\\r\\n        this.data.set('list',['san','er','esui','etpl','esl'])\\r\\n    }\\r\\n}\\r\\n\\r\\n</script>\\r\\n\\r\\n<style>\\r\\n    .hello {\\r\\n        color: red\\r\\n    }\\r\\n</style>\"],\"sourceRoot\":\"\"}]);\n\n// exports\n","\nvar content = require(\"!!../node_modules/_css-loader@1.0.0@css-loader/index.js?sourceMap!../node_modules/_san-loader@0.0.7@san-loader/lib/style-rewriter.js!../node_modules/_san-loader@0.0.7@san-loader/lib/selector.js?type=style&index=0!./app.san\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/_style-loader@0.21.0@style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/_css-loader@1.0.0@css-loader/index.js?sourceMap!../node_modules/_san-loader@0.0.7@san-loader/lib/style-rewriter.js!../node_modules/_san-loader@0.0.7@san-loader/lib/selector.js?type=style&index=0!./app.san\", function() {\n\t\tvar newContent = require(\"!!../node_modules/_css-loader@1.0.0@css-loader/index.js?sourceMap!../node_modules/_san-loader@0.0.7@san-loader/lib/style-rewriter.js!../node_modules/_san-loader@0.0.7@san-loader/lib/selector.js?type=style&index=0!./app.san\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","import san from \"san\";\r\nimport { router } from \"san-router\";\r\nimport San from \"./app.san\";\r\n\r\nconsole.log('hello webpack  San')\r\n\r\nrouter.add({rule: '/',Component:San, target: '#app'})\r\n\r\nrouter.start()\r\n\r\nvar MyApp = san.defineComponent()\r\n\r\nvar myApp = new MyApp()\r\n\r\nmyApp.attach(document.body)"],"sourceRoot":""}